(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    476642,       8275]
NotebookOptionsPosition[    462554,       7977]
NotebookOutlinePosition[    463382,       8003]
CellTagsIndexPosition[    463301,       7998]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["SameStartEndWords", "ObjectName",
 CellID->107539052,ExpressionUUID->"3a3d6205-7f6e-47fa-9a73-3f24fa9254c4"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"93b89c56-7a1d-4aab-a7bc-e897ed252ead"],
 Cell[BoxData[
  RowBox[{
   ButtonBox["SameStartEndWords",
    BaseStyle->"Link",
    ButtonData->"paclet:PeterBurberyLittleChildPaclet/ref/SameStartEndWords"],
    "[", 
   StyleBox["n", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
  "4da8d34c-900d-45c2-8924-2d1c5e4be559"],
 "\[LineSeparator]Finds all words that begin and end with a given letter ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula",ExpressionUUID->
  "37c0487b-093d-41ab-b765-270301274b3e"],
 "."
}], "Usage",
 CellChangeTimes->{{3.894813711831524*^9, 3.8948137376139317`*^9}},
 CellID->265005838,ExpressionUUID->"1ca00aa4-b01c-4004-89ac-f218fbfe1eb2"],

Cell["\<\
The function SameStartEndWords that takes one of the letters \"a\" through \
\"z\" as input and returns the list of all words in WordList that begin and \
end with the input. The function returns the output in alphabetical order.\
\>", "Notes",
 CellChangeTimes->{{3.8948137454919505`*^9, 3.8948137675838804`*^9}},
 CellID->25677857,ExpressionUUID->"b196eb57-8007-4ddd-8042-14d0dac3ad82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "See Also",
 Cell[BoxData[
  TemplateBox[{"SeeAlso", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related reference (function) pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "0979a518-c616-44e5-af6a-d95067790ea4"]
}], "SeeAlsoSection",
 CellID->421507534,ExpressionUUID->"0c269a1d-a893-4ad9-be9d-95c2f1e8802b"],

Cell[TextData[{
 Cell[BoxData["DictionaryLookup"], "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},ExpressionUUID->
  "3046ecd3-b937-426f-b1f7-04a9ef783964"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData["WordListLookup"], "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"9f104ad0-797b-434a-9bd2-cec523fb9f46",ExpressionUUID->
  "4dc6fb8e-ffd3-4ed6-94f3-6f54cc6d8fcf"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData["WordList"], "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"162abf9a-2ca1-43d5-b297-072c4d5f9421",ExpressionUUID->
  "c59af156-909c-404b-83f4-d8fef1fb544c"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData["StringPattern"], "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"2c6eeafa-90ee-4592-af24-4710d9b2eeb7",ExpressionUUID->
  "e859c508-1561-4be7-bbcc-f2b530a59752"],
 Cell[BoxData[
  RowBox[{
  Cell[TextData[StyleBox[
   " \[FilledVerySmallSquare] ", "InlineSeparator"]],ExpressionUUID->
    "5c50c793-74e1-43e9-b368-14b835ed5e2c"], 
   DynamicModuleBox[{$CellContext`nbobj$$ = NotebookObject[
    "f9caaa03-20ee-4dbf-9374-768f7caa8415", 
     "2ad823c7-1d95-4aa7-9b0f-462453685b98"], $CellContext`cellobj$$ = 
    CellObject[
    "c171738e-27dd-4b26-9eae-617c19ef72fb", 
     "17b301f1-874b-427c-aabf-2917546beab3"]}, 
    TemplateBox[{
      GraphicsBox[{{
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         CircleBox[{0, 0}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{0, 0.62}, {0, -0.62}}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{-0.62, 0}, {0.62, 0}}]}}, 
       ImagePadding -> {{1., 1.}, {2.4, 1.}}, ImageSize -> 16, 
       PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}}, 
       BaselinePosition -> (Center -> 
        Center)], $CellContext`nbobj$$, $CellContext`cellobj$$},
     "InlineListingAddButton"],
    Initialization:>($CellContext`nbobj$$ = 
      EvaluationNotebook[]; $CellContext`cellobj$$ = EvaluationCell[])]}]], 
  "InlineListingAddButton",ExpressionUUID->
  "c171738e-27dd-4b26-9eae-617c19ef72fb"]
}], "SeeAlso",
 CellChangeTimes->{{3.894815067311827*^9, 3.894815086522334*^9}},
 CellID->519366615,ExpressionUUID->"aff98103-2c0f-4fa5-adc9-5efc2ce9bd6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tech Notes",
 Cell[BoxData[
  TemplateBox[{"TechNotes", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Insert links to related tech notes.", "MoreInfoText"], BaseStyle -> 
       "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "ce999030-c8e9-410f-b222-e4abf9da57ed"]
}], "TechNotesSection",
 CellID->28683787,ExpressionUUID->"290a118c-7f72-4eca-aaf6-f38592da7053"],

Cell["XXXX", "Tutorials",
 CellID->142609182,ExpressionUUID->"e02f4a54-b5f7-4010-931d-b86895e93f9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->398774904,ExpressionUUID->"ad751313-5b7e-44d5-87ed-00452d053468"],

Cell["XXXX", "MoreAbout",
 CellID->268361234,ExpressionUUID->"c39b82a7-2868-4a35-9596-65586c4cfa7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 Cell[BoxData[
  TemplateBox[{"RelatedLinks", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related page, including web pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "330214df-1bbd-4718-aca0-7e7c8fadc17a"]
}], "RelatedLinksSection",
 CellID->656190936,ExpressionUUID->"e45a5505-c3be-44fd-b936-e0b9a53df6ec"],

Cell[TextData[ButtonBox["Wolfram Challenges Words Beginning and Ending with a \
Given Letter \[RightGuillemet]",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://challenges.wolframcloud.com/challenge/words-beginning-and-\
ending-with-a-given-letter"], None},
 ButtonNote->
  "https://challenges.wolframcloud.com/challenge/words-beginning-and-ending-\
with-a-given-letter"]], "RelatedLinks",
 CellChangeTimes->{
  3.894916424155595*^9, {3.8949165652451515`*^9, 3.8949165715389023`*^9}},
 CellID->357760302,ExpressionUUID->"c02afdbe-9c03-4952-bd07-0a4472c78db5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples Initialization",
 Cell[BoxData[
  TemplateBox[{"ExamplesInitialization", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Input that is to be evaluated before any examples are run, e.g. \
Needs[\[Ellipsis]].", "MoreInfoText"], BaseStyle -> "IFrameBox"]], 
     "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "5c68d143-4e4e-4aa5-9337-3cdffe101347"]
}], "ExamplesInitializationSection",
 CellID->331103905,ExpressionUUID->"29fcfa92-d55c-4b43-bc6e-da02c97b72e6"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`LittleChildPaclet`\>\"", 
  "]"}]], "ExampleInitialization",
 CellID->420531495,ExpressionUUID->"084eab79-de13-47be-b065-aec381d721d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox[
      RowBox[{"Basic", " ", "Examples"}], "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->278950280,ExpressionUUID->"36b3de8e-2812-4560-9943-9c768ebeefc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameStartEndWords", "[", "\"\<b\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.894813772127706*^9, 3.894813772128708*^9}},
 CellLabel->"In[54]:=",
 CellID->124636925,ExpressionUUID->"f5b62d1c-65d9-4ddd-b464-9adc59969e24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"baobab\"\>", ",", "\<\"barb\"\>", ",", "\<\"bathtub\"\>", 
   ",", "\<\"benumb\"\>", ",", "\<\"bib\"\>", ",", "\<\"blab\"\>", 
   ",", "\<\"blob\"\>", ",", "\<\"blurb\"\>", ",", "\<\"bob\"\>", 
   ",", "\<\"bomb\"\>", ",", "\<\"breadcrumb\"\>", ",", "\<\"brewpub\"\>", 
   ",", "\<\"bulb\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8948137758054867`*^9},
 CellLabel->"Out[54]=",
 CellID->252143848,ExpressionUUID->"26d44a68-19c7-49ff-9c45-65ad708d7a3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameStartEndWords", "[", "\"\<y\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.894813777963288*^9, 3.8948137779642878`*^9}},
 CellLabel->"In[55]:=",
 CellID->4948511,ExpressionUUID->"de9a9abf-511c-4f09-ba57-91e7dda2081b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"yearly\"\>", ",", "\<\"yearningly\"\>", ",", "\<\"yeasty\"\>", 
   ",", "\<\"yeomanry\"\>", ",", "\<\"yesterday\"\>", 
   ",", "\<\"youthfully\"\>", ",", "\<\"yucky\"\>", ",", "\<\"yummy\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.894813778808913*^9},
 CellLabel->"Out[55]=",
 CellID->122559827,ExpressionUUID->"4f34eb0f-0a5d-4ff5-a75a-f9f00807e6ba"]
}, Open  ]],

Cell["Some letters have many such words:", "ExampleText",
 CellChangeTimes->{3.8948137927403536`*^9},
 CellID->1787039,ExpressionUUID->"208ca2dc-df32-47c1-ba75-0afcea243794"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SameStartEndWords", "[", "\"\<e\>\"", "]"}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.8948137860300093`*^9, 3.8948137860310097`*^9}},
 CellLabel->"In[56]:=",
 CellID->788857326,ExpressionUUID->"01d5a884-433e-4855-b7d6-57d767e226ec"],

Cell[BoxData["339"], "Output",
 CellChangeTimes->{3.8948137865955505`*^9},
 CellLabel->"Out[56]=",
 CellID->717273483,ExpressionUUID->"be9cce36-51c0-40fe-91be-d793ee2f6567"]
}, Open  ]],

Cell["Some letters have no such words:", "ExampleText",
 CellChangeTimes->{3.8948137970644655`*^9},
 CellID->48661426,ExpressionUUID->"2e0a4ccd-80c2-4fd1-9bc6-fb0d83322455"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SameStartEndWords", "[", "\"\<q\>\"", "]"}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.8948137860300093`*^9, 3.8948138006597767`*^9}},
 CellLabel->"In[57]:=",
 CellID->590618950,ExpressionUUID->"11524163-048c-47ea-8958-39a12191f174"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.894813801165743*^9},
 CellLabel->"Out[57]=",
 CellID->62278607,ExpressionUUID->"e78c9050-21d4-46c7-9120-b28338835577"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "More Examples",
 Cell[BoxData[
  TemplateBox[{"MoreExamples", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Extended examples in standardized sections.", "MoreInfoText"], 
       BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "2b87a24b-eade-44cf-b0b4-9b50f5bec012"]
}], "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->46932611,ExpressionUUID->"c2441b98-a6c0-4dcc-8135-55fa69b55bbe"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "967f0288-9e6c-4442-bc5b-be7df6c2c97e"],
  $Line = 0; Null]], "ExampleSection",
 CellID->45604537,ExpressionUUID->"6a166d72-e119-4138-b475-a5a4a793755c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "6e1fc7b4-8253-44a4-b780-3e5abbc96bc7"],
  $Line = 0; Null]], "ExampleSection",
 CellID->262888056,ExpressionUUID->"5d2fdb37-e3e1-435f-b18e-ae0378cff8a3"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "c766e272-7caf-4a2e-ab24-ed8e1b40b9de"],
  $Line = 0; Null]], "ExampleSection",
 CellID->246427955,ExpressionUUID->"a277e035-319a-4a62-9250-28bd21bf533f"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "59a1dc60-96e4-4706-9fa9-2661d4ce1426"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->216007612,ExpressionUUID->"c18d1c9f-4503-4f38-8f67-40221e8e7c01"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "7eef6363-629a-4bf2-843d-48ce13708fee"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->771392739,ExpressionUUID->"3b3990f2-6de1-4982-abf5-4f8178c819fe"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "610b1903-f021-43f0-a893-e78a7f84b833"],
  $Line = 0; Null]], "ExampleSection",
 CellID->455098115,ExpressionUUID->"0f64b549-7c47-418a-b9cd-72d33d57f6f7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "9116a14e-3d00-4a4d-9c7a-66a1773a6117"],
  $Line = 0; Null]], "ExampleSection",
 CellID->300420489,ExpressionUUID->"d673733d-90e3-4a34-b24d-d120b352ec6b"],

Cell["This function is related to WordListLookup:", "ExampleText",
 CellChangeTimes->{{3.894813882749945*^9, 3.894813891306535*^9}},
 CellID->373132841,ExpressionUUID->"432b2396-5b5c-456c-92cd-c3d5eae93904"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordListLookup", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\"\<k\>\"", "~~", "___", "~~", "\"\<k\>\""}], ")"}], "|", 
   "\"\<k\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8948138919604015`*^9, 3.8948139235465555`*^9}, {
  3.8948142549497566`*^9, 3.8948142576580043`*^9}},
 CellLabel->"In[76]:=",
 CellID->337269351,ExpressionUUID->"0d61d4f3-64fa-4ab4-bb1c-89b3baf58085"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"kapok\"\>", ",", "\<\"kayak\"\>", ",", "\<\"kick\"\>", 
   ",", "\<\"kickback\"\>", ",", "\<\"kinfolk\"\>", ",", "\<\"kink\"\>", 
   ",", "\<\"kinsfolk\"\>", ",", "\<\"kiosk\"\>", ",", "\<\"kirk\"\>", 
   ",", "\<\"knack\"\>", ",", "\<\"knapsack\"\>", ",", "\<\"knickknack\"\>", 
   ",", "\<\"knock\"\>", ",", "\<\"kook\"\>", ",", "\<\"kopeck\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.894813905435442*^9, 3.894813924120555*^9}, 
   3.8948142584531446`*^9},
 CellLabel->"Out[76]=",
 CellID->81037125,ExpressionUUID->"b0dac2ac-fceb-40f7-95a0-8df005004e90"]
}, Open  ]],

Cell["The output contains exactly the output from this function:", \
"ExampleText",
 CellChangeTimes->{{3.894813933887257*^9, 3.8948139448088255`*^9}},
 CellID->1887102,ExpressionUUID->"5334eb7f-b5e5-4115-a30d-44fd9505d75e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContainsExactly", "[", 
  RowBox[{
   RowBox[{"WordListLookup", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\"\<k\>\"", "~~", "___", "~~", "\"\<k\>\""}], ")"}], "|", 
     "\"\<k\>\""}], "]"}], ",", 
   RowBox[{"SameStartEndWords", "[", "\"\<k\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.894813945758518*^9, 3.8948139543431273`*^9}, 
   3.8948142670780034`*^9},
 CellLabel->"In[77]:=",
 CellID->106207673,ExpressionUUID->"2f9c205d-88d9-4966-b38d-722eff185de5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.894813954821124*^9, 3.894814268387046*^9},
 CellLabel->"Out[77]=",
 CellID->15038249,ExpressionUUID->"b9216be3-be3a-4d37-a0f3-a4118f958369"]
}, Open  ]],

Cell["Make a function to make a test:", "ExampleText",
 CellChangeTimes->{{3.894813957761875*^9, 3.8948139630128183`*^9}, {
  3.894814073916328*^9, 3.8948140771111403`*^9}},
 CellID->899873112,ExpressionUUID->"de292bb7-240c-4120-bd40-5fae7f006e4b"],

Cell[BoxData[{
 RowBox[{"MyTestFunction", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyTestFunction", "[", 
   RowBox[{"input_", "?", "StringQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"TestCreate", "[", 
    RowBox[{
     RowBox[{"WordListLookup", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"input", "~~", "___", "~~", "input"}], ")"}], "|", "input"}], 
      "]"}], ",", 
     RowBox[{"SameStartEndWords", "[", "input", "]"}], ",", 
     RowBox[{"TestID", "->", "Automatic"}]}], "]"}], "/;", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"Alphabet", "[", "]"}], ",", "input"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.894814079369397*^9, 3.894814130009081*^9}, {
  3.8948142709392834`*^9, 3.894814306162034*^9}, {3.8948147477437925`*^9, 
  3.8948147531063414`*^9}},
 CellLabel->"In[132]:=",
 CellID->489591759,ExpressionUUID->"de5540dc-1f5c-4671-91d5-02b7970caee1"],

Cell["This is what the test function does:", "ExampleText",
 CellChangeTimes->{{3.89481413827767*^9, 3.894814144384689*^9}},
 CellID->100732862,ExpressionUUID->"5023e064-383c-47a0-8fa4-7fc1b80ef0da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyTestFunction", "[", "\"\<e\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.894814131860659*^9, 3.8948141341385393`*^9}},
 CellLabel->"In[134]:=",
 CellID->120080498,ExpressionUUID->"f4fa934d-2052-496e-a89b-0f595b920602"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "NotEvaluatedIcon"]], Alignment -> 
                  Center, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NotEvaluated\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> TagBox[
                    "\"03734bbd-2a00-486f-8300-0339c9812a10\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"03734bbd-2a00-486f-8300-0339c9812a10\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["03734bbd-2a00-486f-8300-0339c9812a10"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "NotEvaluatedIcon"]], Alignment -> 
                  Center, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NotEvaluated\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> TagBox[
                    "\"03734bbd-2a00-486f-8300-0339c9812a10\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"03734bbd-2a00-486f-8300-0339c9812a10\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["03734bbd-2a00-486f-8300-0339c9812a10"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    PaneSelectorBox[{False -> RowBox[{"WordListLookup", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\"e\"", "~~", "___", "~~", "\"e\""}], ")"}], "|",
                     "\"e\""}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"WordListLookup", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\"e\"", "~~", "___", "~~", "\"e\""}], ")"}], "|",
                     "\"e\""}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    PeterBurbery`LittleChildPaclet`WordListLookup[
                    Alternatives[
                    StringExpression["e", 
                    BlankNullSequence[], "e"], "e"]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    
                    RowBox[{
                    "\"eagle\"", ",", "\"earache\"", ",", "\"earlobe\"", ",", 
                    "\"earphone\"", ",", "\"earpiece\"", ",", 
                    "\"earthenware\"", ",", "\"earthquake\"", ",", "\"ease\"",
                     ",", "\"eatable\"", ",", "\"ebullience\"", ",", 
                    "\"eclipse\"", ",", "\"eclogue\"", ",", "\"economize\"", 
                    ",", "\"edge\"", ",", "\"edgewise\"", ",", "\"edible\"", 
                    ",", "\"edifice\"", ",", "\"editorialize\"", ",", 
                    "\"educate\"", ",", "\"educative\"", ",", "\"educe\"", 
                    ",", "\"eerie\"", ",", "\"efface\"", ",", "\"effective\"",
                     ",", "\"effectuate\"", ",", "\"effeminate\"", ",", 
                    "\"effervesce\"", ",", "\"effervescence\"", ",", 
                    "\"effete\"", ",", "\"efflorescence\"", ",", 
                    "\"effluence\"", ",", "\"effulgence\"", ",", "\"effuse\"",
                     ",", "\"effusive\"", ",", "\"eglantine\"", ",", 
                    "\"eigenvalue\"", ",", "\"eightpence\"", ",", 
                    "\"elaborate\"", ",", "\"elapse\"", ",", "\"elate\"", ",",
                     "\"elective\"", ",", "\"electorate\"", ",", 
                    "\"electrocute\"", ",", "\"electrode\"", ",", 
                    "\"electrolyte\"", ",", "\"electromotive\"", ",", 
                    "\"electronegative\"", ",", "\"electroplate\"", ",", 
                    "\"electroscope\"", ",", "\"elegance\"", ",", 
                    "\"elephantine\"", ",", "\"elevate\"", ",", "\"elide\"", 
                    ",", "\"eligible\"", ",", "\"eliminate\"", ",", 
                    "\"elite\"", ",", "\"ellipse\"", ",", "\"elongate\"", ",",
                     "\"elope\"", ",", "\"eloquence\"", ",", "\"else\"", ",", 
                    "\"elsewhere\"", ",", "\"elucidate\"", ",", "\"elude\"", 
                    ",", "\"elusive\"", ",", "\"emaciate\"", ",", 
                    "\"emanate\"", ",", "\"emancipate\"", ",", 
                    "\"emasculate\"", ",", "\"embezzle\"", ",", 
                    "\"embouchure\"", ",", "\"embrace\"", ",", 
                    "\"embrasure\"", ",", "\"emcee\"", ",", "\"emerge\"", ",",
                     "\"emergence\"", ",", "\"emigrate\"", ",", "\"emigre\"", 
                    ",", "\"eminence\"", ",", "\"emirate\"", ",", "\"emote\"",
                     ",", "\"emotive\"", ",", "\"empathize\"", ",", 
                    "\"emphasize\"", ",", "\"empire\"", ",", "\"employable\"",
                     ",", "\"employee\"", ",", "\"emulate\"", ",", 
                    "\"enable\"", ",", "\"enamelware\"", ",", 
                    "\"encapsulate\"", ",", "\"encase\"", ",", "\"encircle\"",
                     ",", "\"enclave\"", ",", "\"enclose\"", ",", 
                    "\"enclosure\"", ",", "\"encode\"", ",", "\"encore\"", 
                    ",", "\"encourage\"", ",", "\"encumbrance\"", ",", 
                    "\"endgame\"", ",", "\"endive\"", ",", "\"endocrine\"", 
                    ",", "\"endorse\"", ",", "\"endoscope\"", ",", 
                    "\"endue\"", ",", "\"endurable\"", ",", "\"endurance\"", 
                    ",", "\"endure\"", ",", "\"energize\"", ",", 
                    "\"enervate\"", ",", "\"enfeeble\"", ",", "\"enfilade\"", 
                    ",", "\"enforce\"", ",", "\"enforceable\"", ",", 
                    "\"enfranchise\"", ",", "\"engage\"", ",", "\"engine\"", 
                    ",", "\"engorge\"", ",", "\"engrave\"", ",", 
                    "\"enhance\"", ",", "\"enjoyable\"", ",", "\"enlarge\"", 
                    ",", "\"enlistee\"", ",", "\"ennoble\"", ",", 
                    "\"enrage\"", ",", "\"enrapture\"", ",", "\"ensconce\"", 
                    ",", "\"ensemble\"", ",", "\"enshrine\"", ",", 
                    "\"ensilage\"", ",", "\"enslave\"", ",", "\"ensnare\"", 
                    ",", "\"ensue\"", ",", "\"ensure\"", ",", "\"entangle\"", 
                    ",", "\"entente\"", ",", "\"enterprise\"", ",", 
                    "\"enthrone\"", ",", "\"enthuse\"", ",", "\"entice\"", 
                    ",", "\"entire\"", ",", "\"entitle\"", ",", 
                    "\"entourage\"", ",", "\"entr'acte\"", ",", 
                    "\"entrance\"", ",", "\"entree\"", ",", "\"entwine\"", 
                    ",", "\"enumerable\"", ",", "\"enumerate\"", ",", 
                    "\"enunciate\"", ",", "\"envelope\"", ",", "\"enviable\"",
                     ",", "\"envisage\"", ",", "\"enzyme\"", ",", "\"epee\"", 
                    ",", "\"ephedrine\"", ",", "\"epicure\"", ",", 
                    "\"epilogue\"", ",", "\"epinephrine\"", ",", 
                    "\"episcopate\"", ",", "\"episode\"", ",", "\"epistle\"", 
                    ",", "\"epitome\"", ",", "\"epitomize\"", ",", 
                    "\"equable\"", ",", "\"equalize\"", ",", "\"equate\"", 
                    ",", "\"equine\"", ",", "\"equipage\"", ",", 
                    "\"equipoise\"", ",", "\"equitable\"", ",", 
                    "\"equivalence\"", ",", "\"equivocate\"", ",", 
                    "\"eradicable\"", ",", "\"eradicate\"", ",", 
                    "\"erasable\"", ",", "\"erase\"", ",", "\"erasure\"", ",",
                     "\"ere\"", ",", "\"erectile\"", ",", "\"eremite\"", ",", 
                    "\"ermine\"", ",", "\"erode\"", ",", "\"erosive\"", ",", 
                    "\"erstwhile\"", ",", "\"erudite\"", ",", "\"eruptive\"", 
                    ",", "\"erythrocyte\"", ",", "\"escalate\"", ",", 
                    "\"escapade\"", ",", "\"escape\"", ",", "\"escapee\"", 
                    ",", "\"escarole\"", ",", "\"escritoire\"", ",", 
                    "\"espionage\"", ",", "\"esplanade\"", ",", "\"espouse\"",
                     ",", "\"esquire\"", ",", "\"essence\"", ",", 
                    "\"estate\"", ",", "\"estimable\"", ",", "\"estimate\"", 
                    ",", "\"estrange\"", ",", "\"estuarine\"", ",", 
                    "\"ethane\"", ",", "\"ethylene\"", ",", "\"etiquette\"", 
                    ",", "\"etude\"", ",", "\"euchre\"", ",", "\"eukaryote\"",
                     ",", "\"eulogize\"", ",", "\"evacuate\"", ",", 
                    "\"evacuee\"", ",", "\"evade\"", ",", "\"evaluate\"", ",",
                     "\"evaluative\"", ",", "\"evanescence\"", ",", 
                    "\"evangelize\"", ",", "\"evaporate\"", ",", 
                    "\"evasive\"", ",", "\"eve\"", ",", "\"eventide\"", ",", 
                    "\"eventuate\"", ",", "\"evermore\"", ",", "\"everyone\"",
                     ",", "\"everyplace\"", ",", "\"everywhere\"", ",", 
                    "\"evidence\"", ",", "\"evince\"", ",", "\"eviscerate\"", 
                    ",", "\"evocative\"", ",", "\"evoke\"", ",", "\"evolve\"",
                     ",", "\"ewe\"", ",", "\"exacerbate\"", ",", 
                    "\"exactitude\"", ",", "\"exaggerate\"", ",", 
                    "\"examine\"", ",", "\"example\"", ",", "\"exasperate\"", 
                    ",", "\"excavate\"", ",", "\"excellence\"", ",", 
                    "\"exceptionable\"", ",", "\"excessive\"", ",", 
                    "\"exchange\"", ",", "\"exchangeable\"", ",", 
                    "\"excise\"", ",", "\"excitable\"", ",", "\"excite\"", 
                    ",", "\"exclude\"", ",", "\"exclusive\"", ",", 
                    "\"excommunicate\"", ",", "\"excoriate\"", ",", 
                    "\"excrescence\"", ",", "\"excrete\"", ",", 
                    "\"exculpate\"", ",", "\"excursive\"", ",", 
                    "\"excusable\"", ",", "\"excuse\"", ",", "\"execrable\"", 
                    ",", "\"execrate\"", ",", "\"executable\"", ",", 
                    "\"execute\"", ",", "\"executive\"", ",", "\"exercise\"", 
                    ",", "\"exfoliate\"", ",", "\"exhale\"", ",", 
                    "\"exhaustible\"", ",", "\"exhaustive\"", ",", 
                    "\"exhilarate\"", ",", "\"exhume\"", ",", "\"exile\"", 
                    ",", "\"existence\"", ",", "\"exocrine\"", ",", 
                    "\"exonerate\"", ",", "\"exorbitance\"", ",", 
                    "\"exorcise\"", ",", "\"exosphere\"", ",", 
                    "\"expandable\"", ",", "\"expanse\"", ",", 
                    "\"expansible\"", ",", "\"expansive\"", ",", 
                    "\"expatiate\"", ",", "\"expatriate\"", ",", 
                    "\"expectorate\"", ",", "\"expedience\"", ",", 
                    "\"expedite\"", ",", "\"expendable\"", ",", 
                    "\"expenditure\"", ",", "\"expense\"", ",", 
                    "\"expensive\"", ",", "\"experience\"", ",", 
                    "\"expertise\"", ",", "\"expiate\"", ",", "\"expire\"", 
                    ",", "\"explainable\"", ",", "\"expletive\"", ",", 
                    "\"explicable\"", ",", "\"explicate\"", ",", 
                    "\"explode\"", ",", "\"exploitative\"", ",", 
                    "\"explore\"", ",", "\"explosive\"", ",", 
                    "\"exportable\"", ",", "\"expose\"", ",", 
                    "\"expostulate\"", ",", "\"exposure\"", ",", 
                    "\"expressible\"", ",", "\"expressive\"", ",", 
                    "\"expropriate\"", ",", "\"expunge\"", ",", 
                    "\"expurgate\"", ",", "\"exquisite\"", ",", 
                    "\"extempore\"", ",", "\"extemporize\"", ",", 
                    "\"extensible\"", ",", "\"extensive\"", ",", 
                    "\"extenuate\"", ",", "\"exterminate\"", ",", 
                    "\"externalize\"", ",", "\"extinguishable\"", ",", 
                    "\"extirpate\"", ",", "\"extortionate\"", ",", 
                    "\"extractable\"", ",", "\"extradite\"", ",", 
                    "\"extraordinaire\"", ",", "\"extrapolate\"", ",", 
                    "\"extravagance\"", ",", "\"extreme\"", ",", 
                    "\"extricate\"", ",", "\"extrude\"", ",", "\"extrusive\"",
                     ",", "\"exuberance\"", ",", "\"exudate\"", ",", 
                    "\"exude\"", ",", "\"eye\"", ",", "\"eyepiece\"", ",", 
                    "\"eyesore\""}], "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"eagle\"", ",", "\"earache\"", ",", 
                    "\"earlobe\"", ",", "\"earphone\"", ",", "\"earpiece\"", 
                    ",", "\"earthenware\"", ",", "\"earthquake\"", ",", 
                    "\"ease\"", ",", "\"eatable\"", ",", "\"ebullience\"", 
                    ",", "\"eclipse\"", ",", "\"eclogue\"", ",", 
                    "\"economize\"", ",", "\"edge\"", ",", "\"edgewise\"", 
                    ",", "\"edible\"", ",", "\"edifice\"", ",", 
                    "\"editorialize\"", ",", "\"educate\"", ",", 
                    "\"educative\"", ",", "\"educe\"", ",", "\"eerie\"", ",", 
                    "\"efface\"", ",", "\"effective\"", ",", "\"effectuate\"",
                     ",", "\"effeminate\"", ",", "\"effervesce\"", ",", 
                    "\"effervescence\"", ",", "\"effete\"", ",", 
                    "\"efflorescence\"", ",", "\"effluence\"", ",", 
                    "\"effulgence\"", ",", "\"effuse\"", ",", "\"effusive\"", 
                    ",", "\"eglantine\"", ",", "\"eigenvalue\"", ",", 
                    "\"eightpence\"", ",", "\"elaborate\"", ",", "\"elapse\"",
                     ",", "\"elate\"", ",", "\"elective\"", ",", 
                    "\"electorate\"", ",", "\"electrocute\"", ",", 
                    "\"electrode\"", ",", "\"electrolyte\"", ",", 
                    "\"electromotive\"", ",", "\"electronegative\"", ",", 
                    "\"electroplate\"", ",", "\"electroscope\"", ",", 
                    "\"elegance\"", ",", "\"elephantine\"", ",", 
                    "\"elevate\"", ",", "\"elide\"", ",", "\"eligible\"", ",",
                     "\"eliminate\"", ",", "\"elite\"", ",", "\"ellipse\"", 
                    ",", "\"elongate\"", ",", "\"elope\"", ",", 
                    "\"eloquence\"", ",", "\"else\"", ",", "\"elsewhere\"", 
                    ",", "\"elucidate\"", ",", "\"elude\"", ",", 
                    "\"elusive\"", ",", "\"emaciate\"", ",", "\"emanate\"", 
                    ",", "\"emancipate\"", ",", "\"emasculate\"", ",", 
                    "\"embezzle\"", ",", "\"embouchure\"", ",", "\"embrace\"",
                     ",", "\"embrasure\"", ",", "\"emcee\"", ",", 
                    "\"emerge\"", ",", "\"emergence\"", ",", "\"emigrate\"", 
                    ",", "\"emigre\"", ",", "\"eminence\"", ",", 
                    "\"emirate\"", ",", "\"emote\"", ",", "\"emotive\"", ",", 
                    "\"empathize\"", ",", "\"emphasize\"", ",", "\"empire\"", 
                    ",", "\"employable\"", ",", "\"employee\"", ",", 
                    "\"emulate\"", ",", "\"enable\"", ",", "\"enamelware\"", 
                    ",", "\"encapsulate\"", ",", "\"encase\"", ",", 
                    "\"encircle\"", ",", "\"enclave\"", ",", "\"enclose\"", 
                    ",", "\"enclosure\"", ",", "\"encode\"", ",", 
                    "\"encore\"", ",", "\"encourage\"", ",", 
                    "\"encumbrance\"", ",", "\"endgame\"", ",", "\"endive\"", 
                    ",", "\"endocrine\"", ",", "\"endorse\"", ",", 
                    "\"endoscope\"", ",", "\"endue\"", ",", "\"endurable\"", 
                    ",", "\"endurance\"", ",", "\"endure\"", ",", 
                    "\"energize\"", ",", "\"enervate\"", ",", "\"enfeeble\"", 
                    ",", "\"enfilade\"", ",", "\"enforce\"", ",", 
                    "\"enforceable\"", ",", "\"enfranchise\"", ",", 
                    "\"engage\"", ",", "\"engine\"", ",", "\"engorge\"", ",", 
                    "\"engrave\"", ",", "\"enhance\"", ",", "\"enjoyable\"", 
                    ",", "\"enlarge\"", ",", "\"enlistee\"", ",", 
                    "\"ennoble\"", ",", "\"enrage\"", ",", "\"enrapture\"", 
                    ",", "\"ensconce\"", ",", "\"ensemble\"", ",", 
                    "\"enshrine\"", ",", "\"ensilage\"", ",", "\"enslave\"", 
                    ",", "\"ensnare\"", ",", "\"ensue\"", ",", "\"ensure\"", 
                    ",", "\"entangle\"", ",", "\"entente\"", ",", 
                    "\"enterprise\"", ",", "\"enthrone\"", ",", "\"enthuse\"",
                     ",", "\"entice\"", ",", "\"entire\"", ",", "\"entitle\"",
                     ",", "\"entourage\"", ",", "\"entr'acte\"", ",", 
                    "\"entrance\"", ",", "\"entree\"", ",", "\"entwine\"", 
                    ",", "\"enumerable\"", ",", "\"enumerate\"", ",", 
                    "\"enunciate\"", ",", "\"envelope\"", ",", "\"enviable\"",
                     ",", "\"envisage\"", ",", "\"enzyme\"", ",", "\"epee\"", 
                    ",", "\"ephedrine\"", ",", "\"epicure\"", ",", 
                    "\"epilogue\"", ",", "\"epinephrine\"", ",", 
                    "\"episcopate\"", ",", "\"episode\"", ",", "\"epistle\"", 
                    ",", "\"epitome\"", ",", "\"epitomize\"", ",", 
                    "\"equable\"", ",", "\"equalize\"", ",", "\"equate\"", 
                    ",", "\"equine\"", ",", "\"equipage\"", ",", 
                    "\"equipoise\"", ",", "\"equitable\"", ",", 
                    "\"equivalence\"", ",", "\"equivocate\"", ",", 
                    "\"eradicable\"", ",", "\"eradicate\"", ",", 
                    "\"erasable\"", ",", "\"erase\"", ",", "\"erasure\"", ",",
                     "\"ere\"", ",", "\"erectile\"", ",", "\"eremite\"", ",", 
                    "\"ermine\"", ",", "\"erode\"", ",", "\"erosive\"", ",", 
                    "\"erstwhile\"", ",", "\"erudite\"", ",", "\"eruptive\"", 
                    ",", "\"erythrocyte\"", ",", "\"escalate\"", ",", 
                    "\"escapade\"", ",", "\"escape\"", ",", "\"escapee\"", 
                    ",", "\"escarole\"", ",", "\"escritoire\"", ",", 
                    "\"espionage\"", ",", "\"esplanade\"", ",", "\"espouse\"",
                     ",", "\"esquire\"", ",", "\"essence\"", ",", 
                    "\"estate\"", ",", "\"estimable\"", ",", "\"estimate\"", 
                    ",", "\"estrange\"", ",", "\"estuarine\"", ",", 
                    "\"ethane\"", ",", "\"ethylene\"", ",", "\"etiquette\"", 
                    ",", "\"etude\"", ",", "\"euchre\"", ",", "\"eukaryote\"",
                     ",", "\"eulogize\"", ",", "\"evacuate\"", ",", 
                    "\"evacuee\"", ",", "\"evade\"", ",", "\"evaluate\"", ",",
                     "\"evaluative\"", ",", "\"evanescence\"", ",", 
                    "\"evangelize\"", ",", "\"evaporate\"", ",", 
                    "\"evasive\"", ",", "\"eve\"", ",", "\"eventide\"", ",", 
                    "\"eventuate\"", ",", "\"evermore\"", ",", "\"everyone\"",
                     ",", "\"everyplace\"", ",", "\"everywhere\"", ",", 
                    "\"evidence\"", ",", "\"evince\"", ",", "\"eviscerate\"", 
                    ",", "\"evocative\"", ",", "\"evoke\"", ",", "\"evolve\"",
                     ",", "\"ewe\"", ",", "\"exacerbate\"", ",", 
                    "\"exactitude\"", ",", "\"exaggerate\"", ",", 
                    "\"examine\"", ",", "\"example\"", ",", "\"exasperate\"", 
                    ",", "\"excavate\"", ",", "\"excellence\"", ",", 
                    "\"exceptionable\"", ",", "\"excessive\"", ",", 
                    "\"exchange\"", ",", "\"exchangeable\"", ",", 
                    "\"excise\"", ",", "\"excitable\"", ",", "\"excite\"", 
                    ",", "\"exclude\"", ",", "\"exclusive\"", ",", 
                    "\"excommunicate\"", ",", "\"excoriate\"", ",", 
                    "\"excrescence\"", ",", "\"excrete\"", ",", 
                    "\"exculpate\"", ",", "\"excursive\"", ",", 
                    "\"excusable\"", ",", "\"excuse\"", ",", "\"execrable\"", 
                    ",", "\"execrate\"", ",", "\"executable\"", ",", 
                    "\"execute\"", ",", "\"executive\"", ",", "\"exercise\"", 
                    ",", "\"exfoliate\"", ",", "\"exhale\"", ",", 
                    "\"exhaustible\"", ",", "\"exhaustive\"", ",", 
                    "\"exhilarate\"", ",", "\"exhume\"", ",", "\"exile\"", 
                    ",", "\"existence\"", ",", "\"exocrine\"", ",", 
                    "\"exonerate\"", ",", "\"exorbitance\"", ",", 
                    "\"exorcise\"", ",", "\"exosphere\"", ",", 
                    "\"expandable\"", ",", "\"expanse\"", ",", 
                    "\"expansible\"", ",", "\"expansive\"", ",", 
                    "\"expatiate\"", ",", "\"expatriate\"", ",", 
                    "\"expectorate\"", ",", "\"expedience\"", ",", 
                    "\"expedite\"", ",", "\"expendable\"", ",", 
                    "\"expenditure\"", ",", "\"expense\"", ",", 
                    "\"expensive\"", ",", "\"experience\"", ",", 
                    "\"expertise\"", ",", "\"expiate\"", ",", "\"expire\"", 
                    ",", "\"explainable\"", ",", "\"expletive\"", ",", 
                    "\"explicable\"", ",", "\"explicate\"", ",", 
                    "\"explode\"", ",", "\"exploitative\"", ",", 
                    "\"explore\"", ",", "\"explosive\"", ",", 
                    "\"exportable\"", ",", "\"expose\"", ",", 
                    "\"expostulate\"", ",", "\"exposure\"", ",", 
                    "\"expressible\"", ",", "\"expressive\"", ",", 
                    "\"expropriate\"", ",", "\"expunge\"", ",", 
                    "\"expurgate\"", ",", "\"exquisite\"", ",", 
                    "\"extempore\"", ",", "\"extemporize\"", ",", 
                    "\"extensible\"", ",", "\"extensive\"", ",", 
                    "\"extenuate\"", ",", "\"exterminate\"", ",", 
                    "\"externalize\"", ",", "\"extinguishable\"", ",", 
                    "\"extirpate\"", ",", "\"extortionate\"", ",", 
                    "\"extractable\"", ",", "\"extradite\"", ",", 
                    "\"extraordinaire\"", ",", "\"extrapolate\"", ",", 
                    "\"extravagance\"", ",", "\"extreme\"", ",", 
                    "\"extricate\"", ",", "\"extrude\"", ",", "\"extrusive\"",
                     ",", "\"exuberance\"", ",", "\"exudate\"", ",", 
                    "\"exude\"", ",", "\"eye\"", ",", "\"eyepiece\"", ",", 
                    "\"eyesore\""}], "}"}], "\"Copy to clipboard.\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{
                    "eagle", "earache", "earlobe", "earphone", "earpiece", 
                    "earthenware", "earthquake", "ease", "eatable", 
                    "ebullience", "eclipse", "eclogue", "economize", "edge", 
                    "edgewise", "edible", "edifice", "editorialize", 
                    "educate", "educative", "educe", "eerie", "efface", 
                    "effective", "effectuate", "effeminate", "effervesce", 
                    "effervescence", "effete", "efflorescence", "effluence", 
                    "effulgence", "effuse", "effusive", "eglantine", 
                    "eigenvalue", "eightpence", "elaborate", "elapse", 
                    "elate", "elective", "electorate", "electrocute", 
                    "electrode", "electrolyte", "electromotive", 
                    "electronegative", "electroplate", "electroscope", 
                    "elegance", "elephantine", "elevate", "elide", "eligible",
                     "eliminate", "elite", "ellipse", "elongate", "elope", 
                    "eloquence", "else", "elsewhere", "elucidate", "elude", 
                    "elusive", "emaciate", "emanate", "emancipate", 
                    "emasculate", "embezzle", "embouchure", "embrace", 
                    "embrasure", "emcee", "emerge", "emergence", "emigrate", 
                    "emigre", "eminence", "emirate", "emote", "emotive", 
                    "empathize", "emphasize", "empire", "employable", 
                    "employee", "emulate", "enable", "enamelware", 
                    "encapsulate", "encase", "encircle", "enclave", "enclose",
                     "enclosure", "encode", "encore", "encourage", 
                    "encumbrance", "endgame", "endive", "endocrine", 
                    "endorse", "endoscope", "endue", "endurable", "endurance",
                     "endure", "energize", "enervate", "enfeeble", "enfilade",
                     "enforce", "enforceable", "enfranchise", "engage", 
                    "engine", "engorge", "engrave", "enhance", "enjoyable", 
                    "enlarge", "enlistee", "ennoble", "enrage", "enrapture", 
                    "ensconce", "ensemble", "enshrine", "ensilage", "enslave",
                     "ensnare", "ensue", "ensure", "entangle", "entente", 
                    "enterprise", "enthrone", "enthuse", "entice", "entire", 
                    "entitle", "entourage", "entr'acte", "entrance", "entree",
                     "entwine", "enumerable", "enumerate", "enunciate", 
                    "envelope", "enviable", "envisage", "enzyme", "epee", 
                    "ephedrine", "epicure", "epilogue", "epinephrine", 
                    "episcopate", "episode", "epistle", "epitome", 
                    "epitomize", "equable", "equalize", "equate", "equine", 
                    "equipage", "equipoise", "equitable", "equivalence", 
                    "equivocate", "eradicable", "eradicate", "erasable", 
                    "erase", "erasure", "ere", "erectile", "eremite", 
                    "ermine", "erode", "erosive", "erstwhile", "erudite", 
                    "eruptive", "erythrocyte", "escalate", "escapade", 
                    "escape", "escapee", "escarole", "escritoire", 
                    "espionage", "esplanade", "espouse", "esquire", "essence",
                     "estate", "estimable", "estimate", "estrange", 
                    "estuarine", "ethane", "ethylene", "etiquette", "etude", 
                    "euchre", "eukaryote", "eulogize", "evacuate", "evacuee", 
                    "evade", "evaluate", "evaluative", "evanescence", 
                    "evangelize", "evaporate", "evasive", "eve", "eventide", 
                    "eventuate", "evermore", "everyone", "everyplace", 
                    "everywhere", "evidence", "evince", "eviscerate", 
                    "evocative", "evoke", "evolve", "ewe", "exacerbate", 
                    "exactitude", "exaggerate", "examine", "example", 
                    "exasperate", "excavate", "excellence", "exceptionable", 
                    "excessive", "exchange", "exchangeable", "excise", 
                    "excitable", "excite", "exclude", "exclusive", 
                    "excommunicate", "excoriate", "excrescence", "excrete", 
                    "exculpate", "excursive", "excusable", "excuse", 
                    "execrable", "execrate", "executable", "execute", 
                    "executive", "exercise", "exfoliate", "exhale", 
                    "exhaustible", "exhaustive", "exhilarate", "exhume", 
                    "exile", "existence", "exocrine", "exonerate", 
                    "exorbitance", "exorcise", "exosphere", "expandable", 
                    "expanse", "expansible", "expansive", "expatiate", 
                    "expatriate", "expectorate", "expedience", "expedite", 
                    "expendable", "expenditure", "expense", "expensive", 
                    "experience", "expertise", "expiate", "expire", 
                    "explainable", "expletive", "explicable", "explicate", 
                    "explode", "exploitative", "explore", "explosive", 
                    "exportable", "expose", "expostulate", "exposure", 
                    "expressible", "expressive", "expropriate", "expunge", 
                    "expurgate", "exquisite", "extempore", "extemporize", 
                    "extensible", "extensive", "extenuate", "exterminate", 
                    "externalize", "extinguishable", "extirpate", 
                    "extortionate", "extractable", "extradite", 
                    "extraordinaire", "extrapolate", "extravagance", 
                    "extreme", "extricate", "extrude", "extrusive", 
                    "exuberance", "exudate", "exude", "eye", "eyepiece", 
                    "eyesore"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestObject[<|"Outcome" -> "NotEvaluated", "Input" -> HoldForm[
      PeterBurbery`LittleChildPaclet`WordListLookup[
       Alternatives[
        StringExpression["e", 
         BlankNullSequence[], "e"], "e"]]], "ExpectedOutput" -> 
    HoldForm[{
      "eagle", "earache", "earlobe", "earphone", "earpiece", "earthenware", 
       "earthquake", "ease", "eatable", "ebullience", "eclipse", "eclogue", 
       "economize", "edge", "edgewise", "edible", "edifice", "editorialize", 
       "educate", "educative", "educe", "eerie", "efface", "effective", 
       "effectuate", "effeminate", "effervesce", "effervescence", "effete", 
       "efflorescence", "effluence", "effulgence", "effuse", "effusive", 
       "eglantine", "eigenvalue", "eightpence", "elaborate", "elapse", 
       "elate", "elective", "electorate", "electrocute", "electrode", 
       "electrolyte", "electromotive", "electronegative", "electroplate", 
       "electroscope", "elegance", "elephantine", "elevate", "elide", 
       "eligible", "eliminate", "elite", "ellipse", "elongate", "elope", 
       "eloquence", "else", "elsewhere", "elucidate", "elude", "elusive", 
       "emaciate", "emanate", "emancipate", "emasculate", "embezzle", 
       "embouchure", "embrace", "embrasure", "emcee", "emerge", "emergence", 
       "emigrate", "emigre", "eminence", "emirate", "emote", "emotive", 
       "empathize", "emphasize", "empire", "employable", "employee", 
       "emulate", "enable", "enamelware", "encapsulate", "encase", "encircle",
        "enclave", "enclose", "enclosure", "encode", "encore", "encourage", 
       "encumbrance", "endgame", "endive", "endocrine", "endorse", 
       "endoscope", "endue", "endurable", "endurance", "endure", "energize", 
       "enervate", "enfeeble", "enfilade", "enforce", "enforceable", 
       "enfranchise", "engage", "engine", "engorge", "engrave", "enhance", 
       "enjoyable", "enlarge", "enlistee", "ennoble", "enrage", "enrapture", 
       "ensconce", "ensemble", "enshrine", "ensilage", "enslave", "ensnare", 
       "ensue", "ensure", "entangle", "entente", "enterprise", "enthrone", 
       "enthuse", "entice", "entire", "entitle", "entourage", "entr'acte", 
       "entrance", "entree", "entwine", "enumerable", "enumerate", 
       "enunciate", "envelope", "enviable", "envisage", "enzyme", "epee", 
       "ephedrine", "epicure", "epilogue", "epinephrine", "episcopate", 
       "episode", "epistle", "epitome", "epitomize", "equable", "equalize", 
       "equate", "equine", "equipage", "equipoise", "equitable", 
       "equivalence", "equivocate", "eradicable", "eradicate", "erasable", 
       "erase", "erasure", "ere", "erectile", "eremite", "ermine", "erode", 
       "erosive", "erstwhile", "erudite", "eruptive", "erythrocyte", 
       "escalate", "escapade", "escape", "escapee", "escarole", "escritoire", 
       "espionage", "esplanade", "espouse", "esquire", "essence", "estate", 
       "estimable", "estimate", "estrange", "estuarine", "ethane", "ethylene",
        "etiquette", "etude", "euchre", "eukaryote", "eulogize", "evacuate", 
       "evacuee", "evade", "evaluate", "evaluative", "evanescence", 
       "evangelize", "evaporate", "evasive", "eve", "eventide", "eventuate", 
       "evermore", "everyone", "everyplace", "everywhere", "evidence", 
       "evince", "eviscerate", "evocative", "evoke", "evolve", "ewe", 
       "exacerbate", "exactitude", "exaggerate", "examine", "example", 
       "exasperate", "excavate", "excellence", "exceptionable", "excessive", 
       "exchange", "exchangeable", "excise", "excitable", "excite", "exclude",
        "exclusive", "excommunicate", "excoriate", "excrescence", "excrete", 
       "exculpate", "excursive", "excusable", "excuse", "execrable", 
       "execrate", "executable", "execute", "executive", "exercise", 
       "exfoliate", "exhale", "exhaustible", "exhaustive", "exhilarate", 
       "exhume", "exile", "existence", "exocrine", "exonerate", "exorbitance",
        "exorcise", "exosphere", "expandable", "expanse", "expansible", 
       "expansive", "expatiate", "expatriate", "expectorate", "expedience", 
       "expedite", "expendable", "expenditure", "expense", "expensive", 
       "experience", "expertise", "expiate", "expire", "explainable", 
       "expletive", "explicable", "explicate", "explode", "exploitative", 
       "explore", "explosive", "exportable", "expose", "expostulate", 
       "exposure", "expressible", "expressive", "expropriate", "expunge", 
       "expurgate", "exquisite", "extempore", "extemporize", "extensible", 
       "extensive", "extenuate", "exterminate", "externalize", 
       "extinguishable", "extirpate", "extortionate", "extractable", 
       "extradite", "extraordinaire", "extrapolate", "extravagance", 
       "extreme", "extricate", "extrude", "extrusive", "exuberance", 
       "exudate", "exude", "eye", "eyepiece", "eyesore"}], "ExpectedMessages" -> 
    HoldForm[{}], "MetaInformation" -> None, "AbsoluteTime" -> 
    3.8948149819209676`*^9, "SameTest" -> SameQ, "SameMessages" -> 
    Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
    "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
    "b9d6fc53-d182-40fa-9cf9-85de0b220cc8", "TestID" -> 
    "03734bbd-2a00-486f-8300-0339c9812a10", "TestFileName" -> ""|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.894814134740305*^9, 3.8948142753678665`*^9, 3.8948143087536545`*^9, {
   3.8948147420700607`*^9, 3.8948147556688576`*^9}, 3.8948149819600024`*^9},
 CellLabel->"Out[134]=",
 CellID->97175212,ExpressionUUID->"30e4d569-7147-4d51-8d64-0f76524e0f49"]
}, Open  ]],

Cell["Make a test for every letter:", "ExampleText",
 CellChangeTimes->{{3.8948141774125223`*^9, 3.8948141822977824`*^9}},
 CellID->127057451,ExpressionUUID->"556ff29a-c9ba-48b0-92ac-0216b41d3937"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tests", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"MyTestFunction", "[", "letter", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"letter", ",", 
       RowBox[{"Alphabet", "[", "\"\<English\>\"", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8948139636068187`*^9, 3.8948140125666895`*^9}, {
  3.894814050224104*^9, 3.894814058518501*^9}, {3.894814151465068*^9, 
  3.894814158063223*^9}},
 CellLabel->"In[135]:=",
 CellID->52192055,ExpressionUUID->"7538222c-a8c1-4d51-a3ca-db6be13b1de9"],

Cell["This is what a test that is evaluated looks like:", "ExampleText",
 CellChangeTimes->{{3.8948141955452394`*^9, 3.894814203073524*^9}},
 CellID->185664840,ExpressionUUID->"26dcb106-2e10-4d3d-8906-a4d27125b501"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestEvaluate", "[", 
  RowBox[{"tests", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8948142041504908`*^9, 3.894814208738987*^9}, {
  3.894814762747994*^9, 3.89481476946224*^9}},
 CellLabel->"In[136]:=",
 CellID->221457320,ExpressionUUID->"63708e69-2acf-468a-b64f-6b2daa39dd1e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Success\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> TagBox[
                    "\"367c3372-f338-4344-9f9c-4ae67ffb7c3c\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"367c3372-f338-4344-9f9c-4ae67ffb7c3c\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["367c3372-f338-4344-9f9c-4ae67ffb7c3c"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Success\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> TagBox[
                    "\"367c3372-f338-4344-9f9c-4ae67ffb7c3c\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"367c3372-f338-4344-9f9c-4ae67ffb7c3c\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["367c3372-f338-4344-9f9c-4ae67ffb7c3c"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    PaneSelectorBox[{False -> RowBox[{"WordListLookup", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\"a\"", "~~", "___", "~~", "\"a\""}], ")"}], "|",
                     "\"a\""}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"WordListLookup", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\"a\"", "~~", "___", "~~", "\"a\""}], ")"}], "|",
                     "\"a\""}], "]"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    PeterBurbery`LittleChildPaclet`WordListLookup[
                    Alternatives[
                    StringExpression["a", 
                    BlankNullSequence[], "a"], "a"]]]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Background -> GrayLevel[0.85], StripOnInput -> 
                    False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    
                    RowBox[{
                    "\"a\"", ",", "\"abracadabra\"", ",", "\"abscissa\"", ",",
                     "\"acacia\"", ",", "\"academia\"", ",", "\"acrophobia\"",
                     ",", "\"agenda\"", ",", "\"agoraphobia\"", ",", 
                    "\"aha\"", ",", "\"alfalfa\"", ",", "\"alga\"", ",", 
                    "\"algebra\"", ",", "\"alleluia\"", ",", "\"aloha\"", ",",
                     "\"alpaca\"", ",", "\"alpha\"", ",", "\"alumina\"", ",", 
                    "\"alumna\"", ",", "\"ambrosia\"", ",", "\"ammonia\"", 
                    ",", "\"amnesia\"", ",", "\"amoeba\"", ",", "\"amphora\"",
                     ",", "\"anaconda\"", ",", "\"analgesia\"", ",", 
                    "\"anaphora\"", ",", "\"anathema\"", ",", "\"anemia\"", 
                    ",", "\"anesthesia\"", ",", "\"angelica\"", ",", 
                    "\"angina\"", ",", "\"angostura\"", ",", "\"anorexia\"", 
                    ",", "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", 
                    ",", "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", 
                    ",", "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"a\"", ",", "\"abracadabra\"", ",", 
                    "\"abscissa\"", ",", "\"acacia\"", ",", "\"academia\"", 
                    ",", "\"acrophobia\"", ",", "\"agenda\"", ",", 
                    "\"agoraphobia\"", ",", "\"aha\"", ",", "\"alfalfa\"", 
                    ",", "\"alga\"", ",", "\"algebra\"", ",", "\"alleluia\"", 
                    ",", "\"aloha\"", ",", "\"alpaca\"", ",", "\"alpha\"", 
                    ",", "\"alumina\"", ",", "\"alumna\"", ",", 
                    "\"ambrosia\"", ",", "\"ammonia\"", ",", "\"amnesia\"", 
                    ",", "\"amoeba\"", ",", "\"amphora\"", ",", 
                    "\"anaconda\"", ",", "\"analgesia\"", ",", "\"anaphora\"",
                     ",", "\"anathema\"", ",", "\"anemia\"", ",", 
                    "\"anesthesia\"", ",", "\"angelica\"", ",", "\"angina\"", 
                    ",", "\"angostura\"", ",", "\"anorexia\"", ",", 
                    "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", ",", 
                    "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", ",", 
                    "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{
                    "a", "abracadabra", "abscissa", "acacia", "academia", 
                    "acrophobia", "agenda", "agoraphobia", "aha", "alfalfa", 
                    "alga", "algebra", "alleluia", "aloha", "alpaca", "alpha",
                     "alumina", "alumna", "ambrosia", "ammonia", "amnesia", 
                    "amoeba", "amphora", "anaconda", "analgesia", "anaphora", 
                    "anathema", "anemia", "anesthesia", "angelica", "angina", 
                    "angostura", "anorexia", "antenna", "aorta", "aphasia", 
                    "apnea", "apologia", "aqua", "area", "arena", "aria", 
                    "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
                    "aspidistra", "asthma", "ataxia", "aura", "aurora", 
                    "azalea"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    
                    RowBox[{
                    "\"a\"", ",", "\"abracadabra\"", ",", "\"abscissa\"", ",",
                     "\"acacia\"", ",", "\"academia\"", ",", "\"acrophobia\"",
                     ",", "\"agenda\"", ",", "\"agoraphobia\"", ",", 
                    "\"aha\"", ",", "\"alfalfa\"", ",", "\"alga\"", ",", 
                    "\"algebra\"", ",", "\"alleluia\"", ",", "\"aloha\"", ",",
                     "\"alpaca\"", ",", "\"alpha\"", ",", "\"alumina\"", ",", 
                    "\"alumna\"", ",", "\"ambrosia\"", ",", "\"ammonia\"", 
                    ",", "\"amnesia\"", ",", "\"amoeba\"", ",", "\"amphora\"",
                     ",", "\"anaconda\"", ",", "\"analgesia\"", ",", 
                    "\"anaphora\"", ",", "\"anathema\"", ",", "\"anemia\"", 
                    ",", "\"anesthesia\"", ",", "\"angelica\"", ",", 
                    "\"angina\"", ",", "\"angostura\"", ",", "\"anorexia\"", 
                    ",", "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", 
                    ",", "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", 
                    ",", "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"a\"", ",", "\"abracadabra\"", ",", 
                    "\"abscissa\"", ",", "\"acacia\"", ",", "\"academia\"", 
                    ",", "\"acrophobia\"", ",", "\"agenda\"", ",", 
                    "\"agoraphobia\"", ",", "\"aha\"", ",", "\"alfalfa\"", 
                    ",", "\"alga\"", ",", "\"algebra\"", ",", "\"alleluia\"", 
                    ",", "\"aloha\"", ",", "\"alpaca\"", ",", "\"alpha\"", 
                    ",", "\"alumina\"", ",", "\"alumna\"", ",", 
                    "\"ambrosia\"", ",", "\"ammonia\"", ",", "\"amnesia\"", 
                    ",", "\"amoeba\"", ",", "\"amphora\"", ",", 
                    "\"anaconda\"", ",", "\"analgesia\"", ",", "\"anaphora\"",
                     ",", "\"anathema\"", ",", "\"anemia\"", ",", 
                    "\"anesthesia\"", ",", "\"angelica\"", ",", "\"angina\"", 
                    ",", "\"angostura\"", ",", "\"anorexia\"", ",", 
                    "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", ",", 
                    "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", ",", 
                    "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{
                    "a", "abracadabra", "abscissa", "acacia", "academia", 
                    "acrophobia", "agenda", "agoraphobia", "aha", "alfalfa", 
                    "alga", "algebra", "alleluia", "aloha", "alpaca", "alpha",
                     "alumina", "alumna", "ambrosia", "ammonia", "amnesia", 
                    "amoeba", "amphora", "anaconda", "analgesia", "anaphora", 
                    "anathema", "anemia", "anesthesia", "angelica", "angina", 
                    "angostura", "anorexia", "antenna", "aorta", "aphasia", 
                    "apnea", "apologia", "aqua", "area", "arena", "aria", 
                    "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
                    "aspidistra", "asthma", "ataxia", "aura", "aurora", 
                    "azalea"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestObject[<|
   "MetaInformation" -> None, "AbsoluteTime" -> 3.894814983851045*^9, 
    "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
    "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
    DirectedInfinity[1], "CreationID" -> 
    "cd3cdf73-f231-4abd-83e1-1ab000ca6fe0", "TestID" -> 
    "367c3372-f338-4344-9f9c-4ae67ffb7c3c", "TestFileName" -> "", 
    "EvaluationID" -> "8d2019a3-5632-4100-9a05-0d3ff7167399", "Input" -> 
    HoldForm[
      PeterBurbery`LittleChildPaclet`WordListLookup[
       Alternatives[
        StringExpression["a", 
         BlankNullSequence[], "a"], "a"]]], "ExpectedOutput" -> 
    HoldForm[{
      "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia", 
       "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
       "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
       "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda", 
       "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
       "angelica", "angina", "angostura", "anorexia", "antenna", "aorta", 
       "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
       "armada", "aroma", "arrhythmia", "arugula", "asphyxia", "aspidistra", 
       "asthma", "ataxia", "aura", "aurora", "azalea"}], "ExpectedMessages" -> 
    HoldForm[{}], "ActualOutput" -> 
    HoldForm[{
      "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia", 
       "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
       "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
       "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda", 
       "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
       "angelica", "angina", "angostura", "anorexia", "antenna", "aorta", 
       "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
       "armada", "aroma", "arrhythmia", "arugula", "asphyxia", "aspidistra", 
       "asthma", "ataxia", "aura", "aurora", "azalea"}], 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 0.0659985`5.970049062932557,
     "CPUTimeUsed" -> 0.06200000000001182, "MemoryUsed" -> 316760, "Outcome" -> 
    "Success"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8948142099962573`*^9, 3.894814279345135*^9, 
  3.8948143124379816`*^9, 3.894814775238371*^9, 3.8948149861280127`*^9},
 CellLabel->"Out[136]=",
 CellID->470682276,ExpressionUUID->"3d5d40aa-1bb0-4bfd-a68f-f2f83e19f859"]
}, Open  ]],

Cell["Evaluate all the tests:", "ExampleText",
 CellChangeTimes->{{3.8948140188041744`*^9, 3.8948140225284204`*^9}, {
  3.8948141846737547`*^9, 3.8948141942966547`*^9}},
 CellID->217594508,ExpressionUUID->"54659a7f-4e15-4bd8-9d5e-b6b3fce17c2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"evaluatedTests", "=", 
   RowBox[{"TestEvaluate", "[", "tests", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8948140232149997`*^9, 3.8948140367256384`*^9}, 
   3.8948141670274463`*^9},
 CellLabel->"In[137]:=",
 CellID->96645612,ExpressionUUID->"0d22f79b-b380-40c6-ab31-11fd59cbf2e4"],

Cell["Get a report for the tests:", "ExampleText",
 CellChangeTimes->{{3.8948142890784173`*^9, 3.894814293109623*^9}},
 CellID->524259841,ExpressionUUID->"f67c6d05-3a81-4365-abfc-e4c7759954b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestReport", "[", "evaluatedTests", "]"}]], "Input",
 CellChangeTimes->{{3.894814293738363*^9, 3.894814320163619*^9}},
 CellLabel->"In[138]:=",
 CellID->107271425,ExpressionUUID->"d13feb97-b1a2-4f8a-8e56-95fce4661f84"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "1.718513`5.970694471645388", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> Automatic, "Aborted" -> False, 
    "TestResults" -> <|
     5352431564555919251 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894814983851045*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "cd3cdf73-f231-4abd-83e1-1ab000ca6fe0", "TestID" -> 
         "367c3372-f338-4344-9f9c-4ae67ffb7c3c", "TestFileName" -> "", 
         "EvaluationID" -> "1a10ccea-0fcd-4c1b-9c77-7265b150dc7c", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["a", 
              BlankNullSequence[], "a"], "a"]]], "ExpectedOutput" -> 
         HoldForm[{
           "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia",
             "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
            "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
            "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda",
             "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
            "angelica", "angina", "angostura", "anorexia", "antenna", "aorta",
             "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
            "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
            "aspidistra", "asthma", "ataxia", "aura", "aurora", "azalea"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia",
             "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
            "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
            "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda",
             "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
            "angelica", "angina", "angostura", "anorexia", "antenna", "aorta",
             "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
            "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
            "aspidistra", "asthma", "ataxia", "aura", "aurora", "azalea"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0709988`6.001766006300605, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 316736, "Outcome" -> "Success"|>], 
      6903415164816336208 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149839200106`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a3fb0190-d0f0-47b7-9e38-c52785ec2493", "TestID" -> 
         "942496e5-3265-448a-a4cf-b1e54c0b175a", "TestFileName" -> "", 
         "EvaluationID" -> "8b21effc-1fe7-44fe-9e83-6211924f1256", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["b", 
              BlankNullSequence[], "b"], "b"]]], "ExpectedOutput" -> 
         HoldForm[{
           "baobab", "barb", "bathtub", "benumb", "bib", "blab", "blob", 
            "blurb", "bob", "bomb", "breadcrumb", "brewpub", "bulb"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "baobab", "barb", "bathtub", "benumb", "bib", "blab", "blob", 
            "blurb", "bob", "bomb", "breadcrumb", "brewpub", "bulb"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0640006`5.956699043307558, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316440, "Outcome" -> "Success"|>], 
      8219551251432999447 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149839880095`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "db44f779-349c-4795-a0ec-50021be7549c", "TestID" -> 
         "81f4d01a-92ac-40e3-a3a2-be32b24c03ef", "TestFileName" -> "", 
         "EvaluationID" -> "c86fce5e-7018-4189-a363-0c1fa976203d", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["c", 
              BlankNullSequence[], "c"], "c"]]], "ExpectedOutput" -> 
         HoldForm[{
           "calisthenic", "calligraphic", "caloric", "calorific", "cambric", 
            "cannibalistic", "capitalistic", "carbonic", "carcinogenic", 
            "cardiac", "cartographic", "casuistic", "cataclysmic", 
            "cataleptic", "catalytic", "catastrophic", "catatonic", 
            "cathartic", "cathodic", "catholic", "cationic", "caustic", 
            "celeriac", "cenobitic", "centric", "cephalic", "ceramic", 
            "chaotic", "charabanc", "characteristic", "charismatic", 
            "chauvinistic", "chemotherapeutic", "cherubic", "chic", 
            "chimeric", "chiropractic", "chivalric", "choc", "choleric", 
            "choreographic", "chromatic", "chromatographic", "chronic", 
            "cinematic", "citric", "civic", "classic", "claustrophobic", 
            "cleric", "climacteric", "climactic", "climatic", "clinic", 
            "colic", "colonic", "colorimetric", "comic", "communistic", 
            "concentric", "conic", "copacetic", "cosmetic", "cosmic", 
            "critic", "cryogenic", "cryptanalytic", "cryptic", 
            "cryptographic", "cubic", "cupric", "cybernetic", "cyclic", 
            "cyclonic", "cynic", "cystic", "cytoplasmic", "cytotoxic"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "calisthenic", "calligraphic", "caloric", "calorific", "cambric", 
            "cannibalistic", "capitalistic", "carbonic", "carcinogenic", 
            "cardiac", "cartographic", "casuistic", "cataclysmic", 
            "cataleptic", "catalytic", "catastrophic", "catatonic", 
            "cathartic", "cathodic", "catholic", "cationic", "caustic", 
            "celeriac", "cenobitic", "centric", "cephalic", "ceramic", 
            "chaotic", "charabanc", "characteristic", "charismatic", 
            "chauvinistic", "chemotherapeutic", "cherubic", "chic", 
            "chimeric", "chiropractic", "chivalric", "choc", "choleric", 
            "choreographic", "chromatic", "chromatographic", "chronic", 
            "cinematic", "citric", "civic", "classic", "claustrophobic", 
            "cleric", "climacteric", "climactic", "climatic", "clinic", 
            "colic", "colonic", "colorimetric", "comic", "communistic", 
            "concentric", "conic", "copacetic", "cosmetic", "cosmic", 
            "critic", "cryogenic", "cryptanalytic", "cryptic", 
            "cryptographic", "cubic", "cupric", "cybernetic", "cyclic", 
            "cyclonic", "cynic", "cystic", "cytoplasmic", "cytotoxic"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.064004`5.9567221143727975, "CPUTimeUsed" -> 0.06299999999998818, 
         "MemoryUsed" -> 316968, "Outcome" -> "Success"|>], 
      6493388121361903427 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149840570107`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0797ab46-074b-47f1-b364-c0eb3a599c56", "TestID" -> 
         "0f9f5efc-3b28-411e-97f8-be9b2c035b43", "TestFileName" -> "", 
         "EvaluationID" -> "9fd00198-15b0-4299-a2a8-ba548ed36f08", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["d", 
              BlankNullSequence[], "d"], "d"]]], "ExpectedOutput" -> 
         HoldForm[{
           "dabbled", "dachshund", "dad", "dairymaid", "damaged", "dandified",
             "dappled", "darkened", "dartboard", "dashboard", "dashed", 
            "dastard", "dated", "daunted", "daybed", "dazed", "dazzled", 
            "dead", "dead-end", "deadened", "deadhead", "deadlocked", 
            "deadwood", "deafened", "deathbed", "debased", "debauched", 
            "debilitated", "decapitated", "decayed", "deceased", 
            "decentralized", "decided", "deciphered", "deckhand", "declared", 
            "declassified", "decorated", "decreased", "decreed", "dedicated", 
            "deed", "defeated", "defend", "defiled", "defined", "deflated", 
            "defoliated", "deformed", "defraud", "degraded", "dehumanized", 
            "dehydrated", "dejected", "delayed", "delighted", "delimited", 
            "delineated", "demand", "demented", "demigod", "demolished", 
            "demonstrated", "demoralized", "denatured", "dented", "denuded", 
            "departed", "depend", "depicted", "depleted", "depopulated", 
            "depraved", "depressed", "deprived", "deranged", "derived", 
            "descend", "described", "desecrated", "deserted", "deserved", 
            "desiccated", "designed", "desired", "despised", "despoiled", 
            "despond", "destined", "destroyed", "detached", "detailed", 
            "detected", "determined", "detested", "devalued", "developed", 
            "devoid", "devoted", "diamond", "dictated", "did", 
            "differentiated", "diffused", "dignified", "dilapidated", 
            "diluted", "diminished", "dimmed", "diploid", "dipped", 
            "directed", "disabled", "disabused", "disadvantaged", 
            "disaffected", "disappointed", "disarranged", "disarrayed", 
            "disband", "discard", "discarded", "discharged", "disciplined", 
            "disclosed", "discombobulated", "discomfited", "discomposed", 
            "disconcerted", "disconnected", "discontented", "discontinued", 
            "discord", "discouraged", "discovered", "discredited", "diseased",
             "disembodied", "disenchanted", "disenfranchised", "disentangled",
             "disfigured", "disfranchised", "disgraced", "disgruntled", 
            "disguised", "disgusted", "disheartened", "dished", "disheveled", 
            "dishonored", "disillusioned", "disinclined", "disinherited", 
            "disinterested", "disjointed", "disliked", "dislocated", 
            "dismantled", "dismayed", "dismissed", "disordered", 
            "disorganized", "disoriented", "dispensed", "dispersed", 
            "dispirited", "displeased", "disposed", "dispossessed", 
            "disputed", "disqualified", "disquieted", "disregard", 
            "disregarded", "disrupted", "dissatisfied", "dissected", 
            "dissipated", "dissolved", "distend", "distinguished", 
            "distorted", "distracted", "distressed", "distributed", 
            "disturbed", "disunited", "disused", "diversified", "diverted", 
            "divided", "dividend", "divorced", "dockyard", "documented", 
            "dogged", "dogsled", "dogwood", "domed", "domesticated", 
            "dominated", "doodad", "doomed", "dooryard", "doped", "dosed", 
            "dotard", "dotted", "doubled", "dowered", "downhearted", 
            "download", "downward", "downwind", "drainboard", "drained", 
            "draped", "dread", "dreaded", "dreamed", "dreamland", 
            "dreamworld", "drenched", "dressed", "dried", "driftwood", 
            "drilled", "drugged", "drunkard", "dryad", "duckweed", "dud", 
            "dullard", "dulled", "dumbfound", "dumbfounded", "dyad", "dyed"}],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "dabbled", "dachshund", "dad", "dairymaid", "damaged", "dandified",
             "dappled", "darkened", "dartboard", "dashboard", "dashed", 
            "dastard", "dated", "daunted", "daybed", "dazed", "dazzled", 
            "dead", "dead-end", "deadened", "deadhead", "deadlocked", 
            "deadwood", "deafened", "deathbed", "debased", "debauched", 
            "debilitated", "decapitated", "decayed", "deceased", 
            "decentralized", "decided", "deciphered", "deckhand", "declared", 
            "declassified", "decorated", "decreased", "decreed", "dedicated", 
            "deed", "defeated", "defend", "defiled", "defined", "deflated", 
            "defoliated", "deformed", "defraud", "degraded", "dehumanized", 
            "dehydrated", "dejected", "delayed", "delighted", "delimited", 
            "delineated", "demand", "demented", "demigod", "demolished", 
            "demonstrated", "demoralized", "denatured", "dented", "denuded", 
            "departed", "depend", "depicted", "depleted", "depopulated", 
            "depraved", "depressed", "deprived", "deranged", "derived", 
            "descend", "described", "desecrated", "deserted", "deserved", 
            "desiccated", "designed", "desired", "despised", "despoiled", 
            "despond", "destined", "destroyed", "detached", "detailed", 
            "detected", "determined", "detested", "devalued", "developed", 
            "devoid", "devoted", "diamond", "dictated", "did", 
            "differentiated", "diffused", "dignified", "dilapidated", 
            "diluted", "diminished", "dimmed", "diploid", "dipped", 
            "directed", "disabled", "disabused", "disadvantaged", 
            "disaffected", "disappointed", "disarranged", "disarrayed", 
            "disband", "discard", "discarded", "discharged", "disciplined", 
            "disclosed", "discombobulated", "discomfited", "discomposed", 
            "disconcerted", "disconnected", "discontented", "discontinued", 
            "discord", "discouraged", "discovered", "discredited", "diseased",
             "disembodied", "disenchanted", "disenfranchised", "disentangled",
             "disfigured", "disfranchised", "disgraced", "disgruntled", 
            "disguised", "disgusted", "disheartened", "dished", "disheveled", 
            "dishonored", "disillusioned", "disinclined", "disinherited", 
            "disinterested", "disjointed", "disliked", "dislocated", 
            "dismantled", "dismayed", "dismissed", "disordered", 
            "disorganized", "disoriented", "dispensed", "dispersed", 
            "dispirited", "displeased", "disposed", "dispossessed", 
            "disputed", "disqualified", "disquieted", "disregard", 
            "disregarded", "disrupted", "dissatisfied", "dissected", 
            "dissipated", "dissolved", "distend", "distinguished", 
            "distorted", "distracted", "distressed", "distributed", 
            "disturbed", "disunited", "disused", "diversified", "diverted", 
            "divided", "dividend", "divorced", "dockyard", "documented", 
            "dogged", "dogsled", "dogwood", "domed", "domesticated", 
            "dominated", "doodad", "doomed", "dooryard", "doped", "dosed", 
            "dotard", "dotted", "doubled", "dowered", "downhearted", 
            "download", "downward", "downwind", "drainboard", "drained", 
            "draped", "dread", "dreaded", "dreamed", "dreamland", 
            "dreamworld", "drenched", "dressed", "dried", "driftwood", 
            "drilled", "drugged", "drunkard", "dryad", "duckweed", "dud", 
            "dullard", "dulled", "dumbfound", "dumbfounded", "dyad", "dyed"}],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0640376`5.956950044903608, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 318280, "Outcome" -> "Success"|>], 
      1383686905167173627 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149841220107`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "061f2682-3413-4263-9a5f-83e0c7700c79", "TestID" -> 
         "215e86f7-480f-48dc-9549-b3aa82c82f82", "TestFileName" -> "", 
         "EvaluationID" -> "97a1b5b3-1d96-4dc4-bfaa-7811e800e60d", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["e", 
              BlankNullSequence[], "e"], "e"]]], "ExpectedOutput" -> 
         HoldForm[{
           "eagle", "earache", "earlobe", "earphone", "earpiece", 
            "earthenware", "earthquake", "ease", "eatable", "ebullience", 
            "eclipse", "eclogue", "economize", "edge", "edgewise", "edible", 
            "edifice", "editorialize", "educate", "educative", "educe", 
            "eerie", "efface", "effective", "effectuate", "effeminate", 
            "effervesce", "effervescence", "effete", "efflorescence", 
            "effluence", "effulgence", "effuse", "effusive", "eglantine", 
            "eigenvalue", "eightpence", "elaborate", "elapse", "elate", 
            "elective", "electorate", "electrocute", "electrode", 
            "electrolyte", "electromotive", "electronegative", "electroplate",
             "electroscope", "elegance", "elephantine", "elevate", "elide", 
            "eligible", "eliminate", "elite", "ellipse", "elongate", "elope", 
            "eloquence", "else", "elsewhere", "elucidate", "elude", "elusive",
             "emaciate", "emanate", "emancipate", "emasculate", "embezzle", 
            "embouchure", "embrace", "embrasure", "emcee", "emerge", 
            "emergence", "emigrate", "emigre", "eminence", "emirate", "emote",
             "emotive", "empathize", "emphasize", "empire", "employable", 
            "employee", "emulate", "enable", "enamelware", "encapsulate", 
            "encase", "encircle", "enclave", "enclose", "enclosure", "encode",
             "encore", "encourage", "encumbrance", "endgame", "endive", 
            "endocrine", "endorse", "endoscope", "endue", "endurable", 
            "endurance", "endure", "energize", "enervate", "enfeeble", 
            "enfilade", "enforce", "enforceable", "enfranchise", "engage", 
            "engine", "engorge", "engrave", "enhance", "enjoyable", "enlarge",
             "enlistee", "ennoble", "enrage", "enrapture", "ensconce", 
            "ensemble", "enshrine", "ensilage", "enslave", "ensnare", "ensue",
             "ensure", "entangle", "entente", "enterprise", "enthrone", 
            "enthuse", "entice", "entire", "entitle", "entourage", 
            "entr'acte", "entrance", "entree", "entwine", "enumerable", 
            "enumerate", "enunciate", "envelope", "enviable", "envisage", 
            "enzyme", "epee", "ephedrine", "epicure", "epilogue", 
            "epinephrine", "episcopate", "episode", "epistle", "epitome", 
            "epitomize", "equable", "equalize", "equate", "equine", 
            "equipage", "equipoise", "equitable", "equivalence", "equivocate",
             "eradicable", "eradicate", "erasable", "erase", "erasure", "ere",
             "erectile", "eremite", "ermine", "erode", "erosive", "erstwhile",
             "erudite", "eruptive", "erythrocyte", "escalate", "escapade", 
            "escape", "escapee", "escarole", "escritoire", "espionage", 
            "esplanade", "espouse", "esquire", "essence", "estate", 
            "estimable", "estimate", "estrange", "estuarine", "ethane", 
            "ethylene", "etiquette", "etude", "euchre", "eukaryote", 
            "eulogize", "evacuate", "evacuee", "evade", "evaluate", 
            "evaluative", "evanescence", "evangelize", "evaporate", "evasive",
             "eve", "eventide", "eventuate", "evermore", "everyone", 
            "everyplace", "everywhere", "evidence", "evince", "eviscerate", 
            "evocative", "evoke", "evolve", "ewe", "exacerbate", "exactitude",
             "exaggerate", "examine", "example", "exasperate", "excavate", 
            "excellence", "exceptionable", "excessive", "exchange", 
            "exchangeable", "excise", "excitable", "excite", "exclude", 
            "exclusive", "excommunicate", "excoriate", "excrescence", 
            "excrete", "exculpate", "excursive", "excusable", "excuse", 
            "execrable", "execrate", "executable", "execute", "executive", 
            "exercise", "exfoliate", "exhale", "exhaustible", "exhaustive", 
            "exhilarate", "exhume", "exile", "existence", "exocrine", 
            "exonerate", "exorbitance", "exorcise", "exosphere", "expandable",
             "expanse", "expansible", "expansive", "expatiate", "expatriate", 
            "expectorate", "expedience", "expedite", "expendable", 
            "expenditure", "expense", "expensive", "experience", "expertise", 
            "expiate", "expire", "explainable", "expletive", "explicable", 
            "explicate", "explode", "exploitative", "explore", "explosive", 
            "exportable", "expose", "expostulate", "exposure", "expressible", 
            "expressive", "expropriate", "expunge", "expurgate", "exquisite", 
            "extempore", "extemporize", "extensible", "extensive", 
            "extenuate", "exterminate", "externalize", "extinguishable", 
            "extirpate", "extortionate", "extractable", "extradite", 
            "extraordinaire", "extrapolate", "extravagance", "extreme", 
            "extricate", "extrude", "extrusive", "exuberance", "exudate", 
            "exude", "eye", "eyepiece", "eyesore"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "eagle", "earache", "earlobe", "earphone", "earpiece", 
            "earthenware", "earthquake", "ease", "eatable", "ebullience", 
            "eclipse", "eclogue", "economize", "edge", "edgewise", "edible", 
            "edifice", "editorialize", "educate", "educative", "educe", 
            "eerie", "efface", "effective", "effectuate", "effeminate", 
            "effervesce", "effervescence", "effete", "efflorescence", 
            "effluence", "effulgence", "effuse", "effusive", "eglantine", 
            "eigenvalue", "eightpence", "elaborate", "elapse", "elate", 
            "elective", "electorate", "electrocute", "electrode", 
            "electrolyte", "electromotive", "electronegative", "electroplate",
             "electroscope", "elegance", "elephantine", "elevate", "elide", 
            "eligible", "eliminate", "elite", "ellipse", "elongate", "elope", 
            "eloquence", "else", "elsewhere", "elucidate", "elude", "elusive",
             "emaciate", "emanate", "emancipate", "emasculate", "embezzle", 
            "embouchure", "embrace", "embrasure", "emcee", "emerge", 
            "emergence", "emigrate", "emigre", "eminence", "emirate", "emote",
             "emotive", "empathize", "emphasize", "empire", "employable", 
            "employee", "emulate", "enable", "enamelware", "encapsulate", 
            "encase", "encircle", "enclave", "enclose", "enclosure", "encode",
             "encore", "encourage", "encumbrance", "endgame", "endive", 
            "endocrine", "endorse", "endoscope", "endue", "endurable", 
            "endurance", "endure", "energize", "enervate", "enfeeble", 
            "enfilade", "enforce", "enforceable", "enfranchise", "engage", 
            "engine", "engorge", "engrave", "enhance", "enjoyable", "enlarge",
             "enlistee", "ennoble", "enrage", "enrapture", "ensconce", 
            "ensemble", "enshrine", "ensilage", "enslave", "ensnare", "ensue",
             "ensure", "entangle", "entente", "enterprise", "enthrone", 
            "enthuse", "entice", "entire", "entitle", "entourage", 
            "entr'acte", "entrance", "entree", "entwine", "enumerable", 
            "enumerate", "enunciate", "envelope", "enviable", "envisage", 
            "enzyme", "epee", "ephedrine", "epicure", "epilogue", 
            "epinephrine", "episcopate", "episode", "epistle", "epitome", 
            "epitomize", "equable", "equalize", "equate", "equine", 
            "equipage", "equipoise", "equitable", "equivalence", "equivocate",
             "eradicable", "eradicate", "erasable", "erase", "erasure", "ere",
             "erectile", "eremite", "ermine", "erode", "erosive", "erstwhile",
             "erudite", "eruptive", "erythrocyte", "escalate", "escapade", 
            "escape", "escapee", "escarole", "escritoire", "espionage", 
            "esplanade", "espouse", "esquire", "essence", "estate", 
            "estimable", "estimate", "estrange", "estuarine", "ethane", 
            "ethylene", "etiquette", "etude", "euchre", "eukaryote", 
            "eulogize", "evacuate", "evacuee", "evade", "evaluate", 
            "evaluative", "evanescence", "evangelize", "evaporate", "evasive",
             "eve", "eventide", "eventuate", "evermore", "everyone", 
            "everyplace", "everywhere", "evidence", "evince", "eviscerate", 
            "evocative", "evoke", "evolve", "ewe", "exacerbate", "exactitude",
             "exaggerate", "examine", "example", "exasperate", "excavate", 
            "excellence", "exceptionable", "excessive", "exchange", 
            "exchangeable", "excise", "excitable", "excite", "exclude", 
            "exclusive", "excommunicate", "excoriate", "excrescence", 
            "excrete", "exculpate", "excursive", "excusable", "excuse", 
            "execrable", "execrate", "executable", "execute", "executive", 
            "exercise", "exfoliate", "exhale", "exhaustible", "exhaustive", 
            "exhilarate", "exhume", "exile", "existence", "exocrine", 
            "exonerate", "exorbitance", "exorcise", "exosphere", "expandable",
             "expanse", "expansible", "expansive", "expatiate", "expatriate", 
            "expectorate", "expedience", "expedite", "expendable", 
            "expenditure", "expense", "expensive", "experience", "expertise", 
            "expiate", "expire", "explainable", "expletive", "explicable", 
            "explicate", "explode", "exploitative", "explore", "explosive", 
            "exportable", "expose", "expostulate", "exposure", "expressible", 
            "expressive", "expropriate", "expunge", "expurgate", "exquisite", 
            "extempore", "extemporize", "extensible", "extensive", 
            "extenuate", "exterminate", "externalize", "extinguishable", 
            "extirpate", "extortionate", "extractable", "extradite", 
            "extraordinaire", "extrapolate", "extravagance", "extreme", 
            "extricate", "extrude", "extrusive", "exuberance", "exudate", 
            "exude", "eye", "eyepiece", "eyesore"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0629685`5.949638345739705, "CPUTimeUsed" -> 
         0.06299999999998818, "MemoryUsed" -> 319112, "Outcome" -> 
         "Success"|>], 203133632096091982 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894814984187009*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fa8d2541-9ec6-4ce3-9ec8-132586cfeed6", "TestID" -> 
         "42841ae9-c31d-4045-b17a-5a1593409605", "TestFileName" -> "", 
         "EvaluationID" -> "15bfef3e-3060-48df-b83f-eb726e2583af", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["f", 
              BlankNullSequence[], "f"], "f"]]], "ExpectedOutput" -> 
         HoldForm[{
           "falloff", "far-off", "fief", "fireproof", "flagstaff", 
            "flameproof", "fluff", "flyleaf", "foodstuff", "foolproof"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "falloff", "far-off", "fief", "fireproof", "flagstaff", 
            "flameproof", "fluff", "flyleaf", "foodstuff", "foolproof"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0680233`5.983172694776326, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 316416, "Outcome" -> "Success"|>], 
      4003584001828962288 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149842640104`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "eefdb846-4930-4732-a5c6-fe2f616bfe6d", "TestID" -> 
         "a3892fe9-4294-45bf-b240-18235669d831", "TestFileName" -> "", 
         "EvaluationID" -> "d74b255b-e1bd-4918-841f-d5a8db79bc67", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["g", 
              BlankNullSequence[], "g"], "g"]]], "ExpectedOutput" -> 
         HoldForm[{
           "gag", "galling", "galvanizing", "gambling", "gaming", "gang", 
            "gangling", "gaping", "gardening", "gasbag", "gassing", 
            "gathering", "gearing", "gelding", "gesticulating", "getting", 
            "gig", "gilding", "ginseng", "giving", "glaring", "gleaming", 
            "gliding", "glimmering", "glinting", "glistening", "glistering", 
            "glittering", "gloaming", "gloating", "glowering", "glowing", 
            "goading", "going", "goldbricking", "golfing", "gong", "gosling", 
            "gossiping", "governing", "grading", "grafting", "grappling", 
            "grasping", "gratifying", "grating", "grazing", "greening", 
            "greeting", "grieving", "grilling", "grinding", "grinning", 
            "griping", "gripping", "grog", "grooming", "grooving", "groping", 
            "groundbreaking", "groundhog", "grounding", "grouping", 
            "groveling", "growing", "growling", "grudging", "grueling", 
            "grumbling", "guessing", "guiding", "gulag", "gulping", "gumming",
             "gunrunning", "gushing", "guzzling"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "gag", "galling", "galvanizing", "gambling", "gaming", "gang", 
            "gangling", "gaping", "gardening", "gasbag", "gassing", 
            "gathering", "gearing", "gelding", "gesticulating", "getting", 
            "gig", "gilding", "ginseng", "giving", "glaring", "gleaming", 
            "gliding", "glimmering", "glinting", "glistening", "glistering", 
            "glittering", "gloaming", "gloating", "glowering", "glowing", 
            "goading", "going", "goldbricking", "golfing", "gong", "gosling", 
            "gossiping", "governing", "grading", "grafting", "grappling", 
            "grasping", "gratifying", "grating", "grazing", "greening", 
            "greeting", "grieving", "grilling", "grinding", "grinning", 
            "griping", "gripping", "grog", "grooming", "grooving", "groping", 
            "groundbreaking", "groundhog", "grounding", "grouping", 
            "groveling", "growing", "growling", "grudging", "grueling", 
            "grumbling", "guessing", "guiding", "gulag", "gulping", "gumming",
             "gunrunning", "gushing", "guzzling"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0659772`5.969908878450947, "CPUTimeUsed" -> 
         0.06299999999998818, "MemoryUsed" -> 316968, "Outcome" -> 
         "Success"|>], 7911083907457741935 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894814984335009*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f248d3ec-3227-4bd6-8e53-80fe51385458", "TestID" -> 
         "0446dea2-159e-4e58-91f7-a531ae96c8c2", "TestFileName" -> "", 
         "EvaluationID" -> "069024fa-8518-402a-9f30-c0153037388d", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["h", 
              BlankNullSequence[], "h"], "h"]]], "ExpectedOutput" -> 
         HoldForm[{
           "hairbrush", "haircloth", "hairsbreadth", "hallelujah", 
            "hand-to-mouth", "harsh", "hash", "hashish", "hatch", "haunch", 
            "hawkish", "health", "hearth", "heath", "heathenish", "hemstitch",
             "henceforth", "herewith", "hieroglyph", "high", "high-tech", 
            "hitch", "hi-tech", "hoggish", "hogwash", "holograph", 
            "homeopath", "homestretch", "homograph", "hooch", "hookah", 
            "hopscotch", "horseflesh", "horselaugh", "horseradish", 
            "hotchpotch", "howdah", "hoydenish", "huh", "humph", "hunch", 
            "hundredth", "hush", "hutch", "huzzah", "hyacinth"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "hairbrush", "haircloth", "hairsbreadth", "hallelujah", 
            "hand-to-mouth", "harsh", "hash", "hashish", "hatch", "haunch", 
            "hawkish", "health", "hearth", "heath", "heathenish", "hemstitch",
             "henceforth", "herewith", "hieroglyph", "high", "high-tech", 
            "hitch", "hi-tech", "hoggish", "hogwash", "holograph", 
            "homeopath", "homestretch", "homograph", "hooch", "hookah", 
            "hopscotch", "horseflesh", "horselaugh", "horseradish", 
            "hotchpotch", "howdah", "hoydenish", "huh", "humph", "hunch", 
            "hundredth", "hush", "hutch", "huzzah", "hyacinth"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.064973`5.9632479177506, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316712, "Outcome" -> "Success"|>], 
      3817054756988984697 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.89481498440301*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dfb5286d-ee09-447f-9125-578d928ae182", "TestID" -> 
         "7af2ee94-eb20-4a2e-bec4-b12781e57740", "TestFileName" -> "", 
         "EvaluationID" -> "020d716e-be91-417d-acd5-9ef990dc380e", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["i", 
              BlankNullSequence[], "i"], "i"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0649639`5.963187086996721, "CPUTimeUsed" -> 0.0619999999999834, 
         "MemoryUsed" -> 316296, "Outcome" -> "Success"|>], 
      1883698822244240801 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149844700103`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "05b6be50-167b-49ff-a44b-f14c0fc43d1c", "TestID" -> 
         "4efb2e4f-0558-4df9-99dd-4b7e6ec4a5c2", "TestFileName" -> "", 
         "EvaluationID" -> "6c806e1b-0c68-4c17-b674-89604e534e71", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["j", 
              BlankNullSequence[], "j"], "j"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0650339`5.963654796706754, "CPUTimeUsed" -> 0.0630000000000166, 
         "MemoryUsed" -> 316296, "Outcome" -> "Success"|>], 
      9183992619104411735 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149845400105`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7dfbeb2f-69dd-41d4-9d40-9bed51c1a6ab", "TestID" -> 
         "f36a65da-0b3e-4137-9acc-671cf854e101", "TestFileName" -> "", 
         "EvaluationID" -> "2831fefd-8630-4d65-a5e0-c5c4c4b66324", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["k", 
              BlankNullSequence[], "k"], "k"]]], "ExpectedOutput" -> 
         HoldForm[{
           "kapok", "kayak", "kick", "kickback", "kinfolk", "kink", 
            "kinsfolk", "kiosk", "kirk", "knack", "knapsack", "knickknack", 
            "knock", "kook", "kopeck"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> 
         HoldForm[{
           "kapok", "kayak", "kick", "kickback", "kinfolk", "kink", 
            "kinsfolk", "kiosk", "kirk", "knack", "knapsack", "knickknack", 
            "knock", "kook", "kopeck"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.065`5.963428354474843, "CPUTimeUsed" -> 
         0.0619999999999834, "MemoryUsed" -> 316456, "Outcome" -> 
         "Success"|>], 6992305029116038299 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.89481498461101*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9b3211db-be74-4803-88b8-5a047753efa7", "TestID" -> 
         "f1d84cc5-eb3c-4563-9f16-54e22f4c93f7", "TestFileName" -> "", 
         "EvaluationID" -> "ff51f289-786c-4fb9-a38b-25f1757e6350", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["l", 
              BlankNullSequence[], "l"], "l"]]], "ExpectedOutput" -> 
         HoldForm[{
           "label", "labial", "lachrymal", "lackadaisical", "lacteal", 
            "landfall", "landfill", "lapel", "larval", "laryngeal", "lateral",
             "latitudinal", "laurel", "lawful", "legal", "lentil", "lethal", 
            "level", "lexical", "lexicographical", "libel", "liberal", 
            "libidinal", "lineal", "lingual", "lintel", "literal", "littoral",
             "liturgical", "local", "logical", "logistical", "loll", 
            "longitudinal", "loyal", "lugsail", "lull", "lustful", 
            "lyrical"}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "label", "labial", "lachrymal", "lackadaisical", "lacteal", 
            "landfall", "landfill", "lapel", "larval", "laryngeal", "lateral",
             "latitudinal", "laurel", "lawful", "legal", "lentil", "lethal", 
            "level", "lexical", "lexicographical", "libel", "liberal", 
            "libidinal", "lineal", "lingual", "lintel", "literal", "littoral",
             "liturgical", "local", "logical", "logistical", "loll", 
            "longitudinal", "loyal", "lugsail", "lull", "lustful", 
            "lyrical"}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0639996`5.956692257466881, "CPUTimeUsed" -> 0.0630000000000166, 
         "MemoryUsed" -> 316648, "Outcome" -> "Success"|>], 
      4854954860560392742 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.89481498468801*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "159f3333-203c-4dd7-8df6-721e98af6093", "TestID" -> 
         "a4bc1305-c59b-45fd-a516-3401fd4b897a", "TestFileName" -> "", 
         "EvaluationID" -> "3b2efb34-bb63-42e6-836c-18fbb8cbfc43", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["m", 
              BlankNullSequence[], "m"], "m"]]], "ExpectedOutput" -> 
         HoldForm[{
           "ma'am", "macadam", "macrocosm", "madam", "maelstrom", "magnesium",
             "magnetism", "magnum", "maim", "mainstream", "malapropism", 
            "mammogram", "mannerism", "marjoram", "martyrdom", "materialism", 
            "mausoleum", "maxim", "maximum", "mayhem", "mechanism", "medium", 
            "meerschaum", "memorandum", "mendelevium", "mercantilism", 
            "mesmerism", "metabolism", "metamorphism", "microcosm", 
            "microfilm", "microorganism", "midstream", "midterm", 
            "militarism", "millennium", "milligram", "minim", "minimalism", 
            "minimum", "misinform", "modem", "modernism", "modicum", 
            "molybdenum", "mom", "momentum", "monarchism", "monasticism", 
            "monetarism", "mongolism", "monism", "monogram", "monotheism", 
            "moonbeam", "moratorium", "multiculturalism", "multiform", "mum", 
            "museum", "mushroom", "mysticism"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "ma'am", "macadam", "macrocosm", "madam", "maelstrom", "magnesium",
             "magnetism", "magnum", "maim", "mainstream", "malapropism", 
            "mammogram", "mannerism", "marjoram", "martyrdom", "materialism", 
            "mausoleum", "maxim", "maximum", "mayhem", "mechanism", "medium", 
            "meerschaum", "memorandum", "mendelevium", "mercantilism", 
            "mesmerism", "metabolism", "metamorphism", "microcosm", 
            "microfilm", "microorganism", "midstream", "midterm", 
            "militarism", "millennium", "milligram", "minim", "minimalism", 
            "minimum", "misinform", "modem", "modernism", "modicum", 
            "molybdenum", "mom", "momentum", "monarchism", "monasticism", 
            "monetarism", "mongolism", "monism", "monogram", "monotheism", 
            "moonbeam", "moratorium", "multiculturalism", "multiform", "mum", 
            "museum", "mushroom", "mysticism"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0620423`5.943202887212001, "CPUTimeUsed" -> 
         0.0619999999999834, "MemoryUsed" -> 316840, "Outcome" -> 
         "Success"|>], 7214148113984934097 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149847570105`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5c4e1c2f-ec14-4dec-bccc-394c719b2a94", "TestID" -> 
         "4dc2e135-2cd4-4f02-b65c-7ea4c3bb3092", "TestFileName" -> "", 
         "EvaluationID" -> "17973b98-8dd2-488a-a088-47f551c80751", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["n", 
              BlankNullSequence[], "n"], "n"]]], "ExpectedOutput" -> 
         HoldForm[{
           "nan", "napkin", "napoleon", "narration", "nasalization", "nation",
             "nationalization", "naturalization", "navigation", "neaten", 
            "needlewoman", "negation", "negotiation", "nelson", "neon", 
            "neuron", "neurosurgeon", "neutralization", "neutron", "newborn", 
            "newsman", "newspaperman", "newspaperwoman", "newswoman", 
            "newton", "niacin", "nickelodeon", "nightgown", "ninepin", 
            "nineteen", "nitrification", "nitrogen", "nitroglycerin", 
            "nobleman", "noblewoman", "noggin", "nomination", "non", 
            "nonagenarian", "nonaggression", "nonfiction", "nonhuman", 
            "nonintervention", "nonpartisan", "nonperson", "nonprescription", 
            "nonproliferation", "nonsectarian", "nonunion", "noon", 
            "normalization", "northeastern", "northern", "northwestern", 
            "notation", "notification", "notion", "noun", "novelization", 
            "nubbin", "nucleon", "nullification", "numeration", "nun", 
            "nurseryman", "nutation", "nutrition", "nylon"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "nan", "napkin", "napoleon", "narration", "nasalization", "nation",
             "nationalization", "naturalization", "navigation", "neaten", 
            "needlewoman", "negation", "negotiation", "nelson", "neon", 
            "neuron", "neurosurgeon", "neutralization", "neutron", "newborn", 
            "newsman", "newspaperman", "newspaperwoman", "newswoman", 
            "newton", "niacin", "nickelodeon", "nightgown", "ninepin", 
            "nineteen", "nitrification", "nitrogen", "nitroglycerin", 
            "nobleman", "noblewoman", "noggin", "nomination", "non", 
            "nonagenarian", "nonaggression", "nonfiction", "nonhuman", 
            "nonintervention", "nonpartisan", "nonperson", "nonprescription", 
            "nonproliferation", "nonsectarian", "nonunion", "noon", 
            "normalization", "northeastern", "northern", "northwestern", 
            "notation", "notification", "notion", "noun", "novelization", 
            "nubbin", "nucleon", "nullification", "numeration", "nun", 
            "nurseryman", "nutation", "nutrition", "nylon"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0609979`5.935829881463885, "CPUTimeUsed" -> 0.0630000000000166, 
         "MemoryUsed" -> 316904, "Outcome" -> "Success"|>], 
      4594325282351276525 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149848270087`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "72dcd24f-0eb9-477d-ae63-f022d15b00b6", "TestID" -> 
         "a357dcc1-4fc0-412c-afcf-107bac891c26", "TestFileName" -> "", 
         "EvaluationID" -> "a2d9bfdb-93ff-4079-b764-ceb743642308", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["o", 
              BlankNullSequence[], "o"], "o"]]], "ExpectedOutput" -> 
         HoldForm[{
           "obbligato", "octavo", "oho", "oleo", "onto", "oratorio", 
            "oregano", "orzo", "outdo", "outgo", "ouzo", "overdo"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "obbligato", "octavo", "oho", "oleo", "onto", "oratorio", 
            "oregano", "orzo", "outdo", "outgo", "ouzo", "overdo"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0639986`5.956685471520173, "CPUTimeUsed" -> 0.0619999999999834, 
         "MemoryUsed" -> 316432, "Outcome" -> "Success"|>], 
      3744128831422774626 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149849020114`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "698b617e-89eb-45cb-bd23-5f9f5ad539ea", "TestID" -> 
         "a436dba7-f9ec-4595-bc55-85dd89d3c3cd", "TestFileName" -> "", 
         "EvaluationID" -> "b5ed8fda-8ec2-4643-ab88-835a5ebedfb1", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["p", 
              BlankNullSequence[], "p"], "p"]]], "ExpectedOutput" -> 
         HoldForm[{
           "pap", "paperclip", "parsnip", "partisanship", "partnership", 
            "pawnshop", "peep", "penmanship", "pep", "pickup", "pileup", 
            "pip", "plop", "plump", "polyp", "pomp", "pop", "premiership", 
            "prep", "primp", "professorship", "prop", "proprietorship", 
            "pulp", "pump", "pup"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> 
         HoldForm[{
           "pap", "paperclip", "parsnip", "partisanship", "partnership", 
            "pawnshop", "peep", "penmanship", "pep", "pickup", "pileup", 
            "pip", "plop", "plump", "polyp", "pomp", "pop", "premiership", 
            "prep", "primp", "professorship", "prop", "proprietorship", 
            "pulp", "pump", "pup"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0739977`6.019733219011182, "CPUTimeUsed" -> 
         0.0619999999999834, "MemoryUsed" -> 316544, "Outcome" -> 
         "Success"|>], 7300347619632313517 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149849721065`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0de51e87-630c-4d69-ac40-9c807656958d", "TestID" -> 
         "92a30384-47bd-4a16-a3b5-03e2e7b526f1", "TestFileName" -> "", 
         "EvaluationID" -> "2e71b0c2-3014-482f-b0ac-b9f90ffed904", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["q", 
              BlankNullSequence[], "q"], "q"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0770339`6.037196883303263, "CPUTimeUsed" -> 0.0630000000000166, 
         "MemoryUsed" -> 316296, "Outcome" -> "Success"|>], 
      8189797156538591428 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.89481498504901*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "468bfa65-ee22-40df-885c-a77ebafe1a15", "TestID" -> 
         "1fae09f6-b37a-49bf-b1f9-12ae5305f2d2", "TestFileName" -> "", 
         "EvaluationID" -> "20616c63-8160-4086-aed7-bf1738d98100", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["r", 
              BlankNullSequence[], "r"], "r"]]], "ExpectedOutput" -> 
         HoldForm[{
           "racer", "racketeer", "raconteur", "radar", "radiator", 
            "radiographer", "radiometer", "rafter", "raider", "railroader", 
            "rainmaker", "rainwater", "raiser", "rambler", "rancher", 
            "rancor", "rangefinder", "ranger", "ranker", "ranter", "rapier", 
            "rapper", "rapporteur", "raptor", "rasher", "raster", "ratepayer",
             "rather", "rathskeller", "ratifier", "ratter", "rattler", 
            "raver", "ravisher", "razor", "reactor", "reader", "reamer", 
            "reaper", "reappear", "rear", "reasoner", "receiver", "receptor", 
            "reciter", "reckoner", "recliner", "reconnoiter", "reconquer", 
            "reconsider", "recorder", "recover", "recruiter", "rectangular", 
            "rectifier", "rectilinear", "rector", "recur", "redactor", 
            "redeemer", "rediscover", "reducer", "refer", "refiner", 
            "reflector", "reformer", "refresher", "refrigerator", "refuter", 
            "register", "registrar", "regular", "regulator", "rehear", 
            "reindeer", "rejoinder", "relaxer", "reliever", "remainder", 
            "remember", "reminder", "remover", "render", "renovator", 
            "renter", "reorder", "repair", "repairer", "repeater", "reporter",
             "reproducer", "requester", "rescuer", "researcher", "reservoir", 
            "resister", "resistor", "resonator", "respecter", "respirator", 
            "responder", "restaurateur", "restorer", "restrainer", 
            "resuscitator", "retailer", "retainer", "reticular", "retriever", 
            "reveler", "reviewer", "reviser", "revolver", "rhymer", 
            "rhymester", "ricer", "rider", "rigger", "rigor", "ringer", 
            "ringleader", "ringmaster", "rioter", "ripper", "riser", "river", 
            "riveter", "roadrunner", "roadster", "roamer", "roar", "roarer", 
            "roaster", "robber", "rocker", "roisterer", "roller", "rollover", 
            "romper", "roofer", "roomer", "rooster", "rooter", "roper", 
            "roster", "rotor", "rotter", "rounder", "router", "rover", 
            "rower", "rubber", "rudder", "rugger", "ruler", "rummer", "rumor",
             "runner", "rusher", "rustler"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "racer", "racketeer", "raconteur", "radar", "radiator", 
            "radiographer", "radiometer", "rafter", "raider", "railroader", 
            "rainmaker", "rainwater", "raiser", "rambler", "rancher", 
            "rancor", "rangefinder", "ranger", "ranker", "ranter", "rapier", 
            "rapper", "rapporteur", "raptor", "rasher", "raster", "ratepayer",
             "rather", "rathskeller", "ratifier", "ratter", "rattler", 
            "raver", "ravisher", "razor", "reactor", "reader", "reamer", 
            "reaper", "reappear", "rear", "reasoner", "receiver", "receptor", 
            "reciter", "reckoner", "recliner", "reconnoiter", "reconquer", 
            "reconsider", "recorder", "recover", "recruiter", "rectangular", 
            "rectifier", "rectilinear", "rector", "recur", "redactor", 
            "redeemer", "rediscover", "reducer", "refer", "refiner", 
            "reflector", "reformer", "refresher", "refrigerator", "refuter", 
            "register", "registrar", "regular", "regulator", "rehear", 
            "reindeer", "rejoinder", "relaxer", "reliever", "remainder", 
            "remember", "reminder", "remover", "render", "renovator", 
            "renter", "reorder", "repair", "repairer", "repeater", "reporter",
             "reproducer", "requester", "rescuer", "researcher", "reservoir", 
            "resister", "resistor", "resonator", "respecter", "respirator", 
            "responder", "restaurateur", "restorer", "restrainer", 
            "resuscitator", "retailer", "retainer", "reticular", "retriever", 
            "reveler", "reviewer", "reviser", "revolver", "rhymer", 
            "rhymester", "ricer", "rider", "rigger", "rigor", "ringer", 
            "ringleader", "ringmaster", "rioter", "ripper", "riser", "river", 
            "riveter", "roadrunner", "roadster", "roamer", "roar", "roarer", 
            "roaster", "robber", "rocker", "roisterer", "roller", "rollover", 
            "romper", "roofer", "roomer", "rooster", "rooter", "roper", 
            "roster", "rotor", "rotter", "rounder", "router", "rover", 
            "rower", "rubber", "rudder", "rugger", "ruler", "rummer", "rumor",
             "runner", "rusher", "rustler"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0659676`5.969845681916734, "CPUTimeUsed" -> 
         0.07800000000000296, "MemoryUsed" -> 317640, "Outcome" -> 
         "Success"|>], 6202705961845475077 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149851280093`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a9cc97c8-1f82-44a7-8df9-547d69d71842", "TestID" -> 
         "cd9a8683-eaff-4f94-9e7c-3847f273ce22", "TestFileName" -> "", 
         "EvaluationID" -> "c4ec8724-fd8d-4912-b7ab-d47ceede2f6b", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["s", 
              BlankNullSequence[], "s"], "s"]]], "ExpectedOutput" -> 
         HoldForm[{
           "sacredness", "sacrilegious", "sadness", "safeness", "sagacious", 
            "saintliness", "salacious", "salaciousness", "sales", 
            "sallowness", "saltiness", "salubrious", "sameness", 
            "sanctimonious", "sanctimoniousness", "sandiness", "sands", 
            "saneness", "sans", "sapless", "sarcophagus", "sass", "sassafras",
             "sauciness", "savageness", "savings", "sawbones", "scabies", 
            "scabrous", "scads", "scaleless", "scaliness", "scandalous", 
            "scantiness", "scarceness", "scentless", "schnapps", "schooldays",
             "schoolmistress", "schuss", "scissors", "sclerosis", "scoliosis",
             "scoreless", "scores", "scours", "scraps", "scratchiness", 
            "scrofulous", "scrubs", "scrumptious", "scruples", "scrupulous", 
            "scrupulousness", "sculptress", "scurrilous", "seamless", 
            "seamstress", "seasickness", "seats", "seawards", "seaworthiness",
             "sebaceous", "secateurs", "second-guess", "secretiveness", 
            "sedateness", "seditious", "seductress", "sedulous", "seediness", 
            "seedless", "seemliness", "seems", "self-analysis", 
            "self-awareness", "self-conscious", "self-consciousness", 
            "selfishness", "selfless", "selflessness", "self-righteous", 
            "semantics", "semiconscious", "semidarkness", "semigloss", 
            "semiotics", "semiprecious", "sempstress", "senseless", 
            "senselessness", "sensibleness", "sensitiveness", "sensuous", 
            "sensuousness", "sententious", "separateness", "sepsis", 
            "serendipitous", "series", "serious", "seriousness", "serous", 
            "services", "sevens", "seventies", "shabbiness", "shades", 
            "shadiness", "shagginess", "shakiness", "shallowness", "shambles",
             "shamefulness", "shameless", "shamelessness", "shapeless", 
            "shapelessness", "shapeliness", "sharpness", "shears", 
            "sheepishness", "shekels", "shepherdess", "shiftiness", 
            "shiftless", "shiftlessness", "shingles", "shininess", 
            "shirtsleeves", "shoddiness", "shoeless", "shoes", "shortness", 
            "shorts", "shortsightedness", "showiness", "shrewdness", 
            "shrillness", "shucks", "shyness", "sickness", "sidewards", 
            "sideways", "sightedness", "sightless", "sights", "silents", 
            "siliceous", "silicosis", "silkiness", "silks", "silliness", 
            "simpleness", "simultaneous", "sinfulness", "single-mindedness", 
            "singleness", "singles", "sinless", "sinuous", "sinus", 
            "sinusitis", "sis", "sixties", "sketchiness", "skewness", 
            "skillfulness", "skinheads", "skinless", "skinniness", 
            "skittishness", "skittles", "skywards", "slackness", "slacks", 
            "slanderous", "sleaziness", "sleekness", "sleepiness", 
            "sleepless", "sleeplessness", "sleeveless", "slenderness", 
            "slews", "slickness", "slightness", "sliminess", "slimness", 
            "slipperiness", "sloppiness", "slops", "slothfulness", 
            "slovenliness", "slowness", "sluggishness", "slumberous", 
            "slyness", "smallness", "smartness", "smithereens", "smokeless", 
            "smoothness", "smugness", "sneakiness", "snips", "snobbishness", 
            "snuffers", "snugness", "soapsuds", "soberness", 
            "sociolinguistics", "softness", "sogginess", "solicitous", 
            "solicitousness", "solidness", "solidus", "solitariness", 
            "somberness", "sometimes", "songstress", "sonorous", 
            "sonorousness", "sops", "sorceress", "sordidness", "soreness", 
            "sorrowfulness", "soulfulness", "soulless", "soundless", 
            "soundness", "sourness", "sourpuss", "southwards", "spacious", 
            "spaciousness", "spareness", "spareribs", "sparseness", 
            "specialness", "species", "specious", "speciousness", "specs", 
            "spectacles", "speechless", "speechlessness", "speediness", 
            "spiciness", "spineless", "spinelessness", "spiritless", 
            "spirits", "spirituous", "spitefulness", "splinters", 
            "sponginess", "spontaneous", "spotless", "spotlessness", "spots", 
            "sprightliness", "springiness", "sprinkles", "sprites", 
            "spurious", "spuriousness", "spyglass", "squalidness", 
            "squareness", "squeamishness", "stacks", "staggers", "staidness", 
            "stainless", "stairs", "stakes", "staleness", "stalls", "stapes", 
            "staphylococcus", "starches", "starkness", "starless", "stasis", 
            "stateless", "stateliness", "statics", "statistics", "status", 
            "staunchness", "stays", "steadfastness", "steadiness", 
            "stealthiness", "steelworks", "steepness", "stegosaurus", 
            "stemless", "steps", "sternness", "stertorous", "stewardess", 
            "stickiness", "stiffness", "stillness", "stimulus", "stinginess", 
            "stocks", "stodginess", "stoneless", "stops", "storminess", 
            "stoutness", "straightforwardness", "straightness", "straits", 
            "strangeness", "strangles", "strapless", "strategics", "stratus", 
            "strenuous", "strenuousness", "streptococcus", "stress", 
            "strictness", "strings", "stripes", "stubbornness", "studious", 
            "studiousness", "stuffiness", "stupendous", "sturdiness", 
            "stylishness", "stylus", "subclass", "subconscious", 
            "subconsciousness", "subcutaneous", "submissiveness", 
            "subspecies", "subtropics", "subversiveness", "success", 
            "succinctness", "sucks", "suddenness", "suds", "sugarless", 
            "suitableness", "sulfurous", "sulkiness", "sullenness", 
            "sultriness", "summons", "sumptuous", "sumptuousness", "sundress",
             "sundries", "sunglasses", "sunless", "sunniness", "supercilious",
             "superciliousness", "superfluous", "supergrass", "superstitious",
             "suppleness", "suppress", "sureness", "surliness", "surpass", 
            "surplus", "surreptitious", "surroundings", "suspicious", 
            "sweatpants", "sweats", "sweepstakes", "sweetbreads", "sweetness",
             "swiftness", "syllabus", "symbiosis", "symptomless", 
            "synchronous", "synonymous", "synopsis", "synthesis", 
            "syphilis"}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "sacredness", "sacrilegious", "sadness", "safeness", "sagacious", 
            "saintliness", "salacious", "salaciousness", "sales", 
            "sallowness", "saltiness", "salubrious", "sameness", 
            "sanctimonious", "sanctimoniousness", "sandiness", "sands", 
            "saneness", "sans", "sapless", "sarcophagus", "sass", "sassafras",
             "sauciness", "savageness", "savings", "sawbones", "scabies", 
            "scabrous", "scads", "scaleless", "scaliness", "scandalous", 
            "scantiness", "scarceness", "scentless", "schnapps", "schooldays",
             "schoolmistress", "schuss", "scissors", "sclerosis", "scoliosis",
             "scoreless", "scores", "scours", "scraps", "scratchiness", 
            "scrofulous", "scrubs", "scrumptious", "scruples", "scrupulous", 
            "scrupulousness", "sculptress", "scurrilous", "seamless", 
            "seamstress", "seasickness", "seats", "seawards", "seaworthiness",
             "sebaceous", "secateurs", "second-guess", "secretiveness", 
            "sedateness", "seditious", "seductress", "sedulous", "seediness", 
            "seedless", "seemliness", "seems", "self-analysis", 
            "self-awareness", "self-conscious", "self-consciousness", 
            "selfishness", "selfless", "selflessness", "self-righteous", 
            "semantics", "semiconscious", "semidarkness", "semigloss", 
            "semiotics", "semiprecious", "sempstress", "senseless", 
            "senselessness", "sensibleness", "sensitiveness", "sensuous", 
            "sensuousness", "sententious", "separateness", "sepsis", 
            "serendipitous", "series", "serious", "seriousness", "serous", 
            "services", "sevens", "seventies", "shabbiness", "shades", 
            "shadiness", "shagginess", "shakiness", "shallowness", "shambles",
             "shamefulness", "shameless", "shamelessness", "shapeless", 
            "shapelessness", "shapeliness", "sharpness", "shears", 
            "sheepishness", "shekels", "shepherdess", "shiftiness", 
            "shiftless", "shiftlessness", "shingles", "shininess", 
            "shirtsleeves", "shoddiness", "shoeless", "shoes", "shortness", 
            "shorts", "shortsightedness", "showiness", "shrewdness", 
            "shrillness", "shucks", "shyness", "sickness", "sidewards", 
            "sideways", "sightedness", "sightless", "sights", "silents", 
            "siliceous", "silicosis", "silkiness", "silks", "silliness", 
            "simpleness", "simultaneous", "sinfulness", "single-mindedness", 
            "singleness", "singles", "sinless", "sinuous", "sinus", 
            "sinusitis", "sis", "sixties", "sketchiness", "skewness", 
            "skillfulness", "skinheads", "skinless", "skinniness", 
            "skittishness", "skittles", "skywards", "slackness", "slacks", 
            "slanderous", "sleaziness", "sleekness", "sleepiness", 
            "sleepless", "sleeplessness", "sleeveless", "slenderness", 
            "slews", "slickness", "slightness", "sliminess", "slimness", 
            "slipperiness", "sloppiness", "slops", "slothfulness", 
            "slovenliness", "slowness", "sluggishness", "slumberous", 
            "slyness", "smallness", "smartness", "smithereens", "smokeless", 
            "smoothness", "smugness", "sneakiness", "snips", "snobbishness", 
            "snuffers", "snugness", "soapsuds", "soberness", 
            "sociolinguistics", "softness", "sogginess", "solicitous", 
            "solicitousness", "solidness", "solidus", "solitariness", 
            "somberness", "sometimes", "songstress", "sonorous", 
            "sonorousness", "sops", "sorceress", "sordidness", "soreness", 
            "sorrowfulness", "soulfulness", "soulless", "soundless", 
            "soundness", "sourness", "sourpuss", "southwards", "spacious", 
            "spaciousness", "spareness", "spareribs", "sparseness", 
            "specialness", "species", "specious", "speciousness", "specs", 
            "spectacles", "speechless", "speechlessness", "speediness", 
            "spiciness", "spineless", "spinelessness", "spiritless", 
            "spirits", "spirituous", "spitefulness", "splinters", 
            "sponginess", "spontaneous", "spotless", "spotlessness", "spots", 
            "sprightliness", "springiness", "sprinkles", "sprites", 
            "spurious", "spuriousness", "spyglass", "squalidness", 
            "squareness", "squeamishness", "stacks", "staggers", "staidness", 
            "stainless", "stairs", "stakes", "staleness", "stalls", "stapes", 
            "staphylococcus", "starches", "starkness", "starless", "stasis", 
            "stateless", "stateliness", "statics", "statistics", "status", 
            "staunchness", "stays", "steadfastness", "steadiness", 
            "stealthiness", "steelworks", "steepness", "stegosaurus", 
            "stemless", "steps", "sternness", "stertorous", "stewardess", 
            "stickiness", "stiffness", "stillness", "stimulus", "stinginess", 
            "stocks", "stodginess", "stoneless", "stops", "storminess", 
            "stoutness", "straightforwardness", "straightness", "straits", 
            "strangeness", "strangles", "strapless", "strategics", "stratus", 
            "strenuous", "strenuousness", "streptococcus", "stress", 
            "strictness", "strings", "stripes", "stubbornness", "studious", 
            "studiousness", "stuffiness", "stupendous", "sturdiness", 
            "stylishness", "stylus", "subclass", "subconscious", 
            "subconsciousness", "subcutaneous", "submissiveness", 
            "subspecies", "subtropics", "subversiveness", "success", 
            "succinctness", "sucks", "suddenness", "suds", "sugarless", 
            "suitableness", "sulfurous", "sulkiness", "sullenness", 
            "sultriness", "summons", "sumptuous", "sumptuousness", "sundress",
             "sundries", "sunglasses", "sunless", "sunniness", "supercilious",
             "superciliousness", "superfluous", "supergrass", "superstitious",
             "suppleness", "suppress", "sureness", "surliness", "surpass", 
            "surplus", "surreptitious", "surroundings", "suspicious", 
            "sweatpants", "sweats", "sweepstakes", "sweetbreads", "sweetness",
             "swiftness", "syllabus", "symbiosis", "symptomless", 
            "synchronous", "synonymous", "synopsis", "synthesis", 
            "syphilis"}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0670322`5.976798471025223, "CPUTimeUsed" -> 0.06299999999998818, 
         "MemoryUsed" -> 319496, "Outcome" -> "Success"|>], 
      3501684687581229181 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.89481498520301*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ca493a6d-9258-42ad-a724-2b21220773d6", "TestID" -> 
         "23648201-d024-415d-8a3d-d96f4c688b97", "TestFileName" -> "", 
         "EvaluationID" -> "52f895e2-6783-495d-978e-0d4e84b03e2e", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["t", 
              BlankNullSequence[], "t"], "t"]]], "ExpectedOutput" -> 
         HoldForm[{
           "tablet", "tacit", "tact", "tailcoat", "taillight", "taint", 
            "takeout", "talent", "tangent", "tantamount", "tappet", "taproot",
             "target", "tarot", "tart", "tat", "taunt", "taut", "taxidermist",
             "taxonomist", "teapot", "teat", "technocrat", "technologist", 
            "telecast", "telegraphist", "telephonist", "televangelist", 
            "temperament", "tempest", "tempt", "tenant", "tenderfoot", 
            "tenement", "tenet", "tent", "termagant", "terrorist", "test", 
            "testament", "text", "that", "theft", "theist", "theorist", 
            "theosophist", "therapist", "thereabout", "thermostat", "thicket",
             "thickset", "thirst", "thought", "threat", "thrift", "throat", 
            "throughout", "throughput", "thrust", "thumbprint", "thunderbolt",
             "thwart", "ticket", "tidbit", "tight", "tilt", "timpanist", 
            "tinpot", "tint", "tippet", "toast", "tobacconist", "toilet", 
            "tolerant", "tomcat", "tomtit", "tonight", "toot", "topcoat", 
            "topknot", "topmast", "topmost", "torchlight", "torment", 
            "torrent", "tort", "tot", "tourist", "tournament", "tourniquet", 
            "tout", "towboat", "toxicologist", "tract", "traditionalist", 
            "trait", "transact", "transcendent", "transcendentalist", 
            "transcript", "transect", "transept", "transient", "transit", 
            "translucent", "transmit", "transparent", "transplant", 
            "transport", "transshipment", "treat", "treatment", "trenchant", 
            "trident", "trinket", "triplet", "trisect", "triumphant", 
            "trivalent", "trivet", "trombonist", "trot", "troubleshoot", 
            "trout", "truant", "truculent", "trumpet", "trust", "tryout", 
            "tryst", "tsarist", "tuft", "tugboat", "tumescent", "tumult", 
            "turbojet", "turbot", "turbulent", "turnabout", "turncoat", 
            "turnout", "turret", "tut", "tweet", "twilight", "twilit", 
            "twist", "typecast", "typescript", "typeset", "typist", 
            "tyrant"}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "tablet", "tacit", "tact", "tailcoat", "taillight", "taint", 
            "takeout", "talent", "tangent", "tantamount", "tappet", "taproot",
             "target", "tarot", "tart", "tat", "taunt", "taut", "taxidermist",
             "taxonomist", "teapot", "teat", "technocrat", "technologist", 
            "telecast", "telegraphist", "telephonist", "televangelist", 
            "temperament", "tempest", "tempt", "tenant", "tenderfoot", 
            "tenement", "tenet", "tent", "termagant", "terrorist", "test", 
            "testament", "text", "that", "theft", "theist", "theorist", 
            "theosophist", "therapist", "thereabout", "thermostat", "thicket",
             "thickset", "thirst", "thought", "threat", "thrift", "throat", 
            "throughout", "throughput", "thrust", "thumbprint", "thunderbolt",
             "thwart", "ticket", "tidbit", "tight", "tilt", "timpanist", 
            "tinpot", "tint", "tippet", "toast", "tobacconist", "toilet", 
            "tolerant", "tomcat", "tomtit", "tonight", "toot", "topcoat", 
            "topknot", "topmast", "topmost", "torchlight", "torment", 
            "torrent", "tort", "tot", "tourist", "tournament", "tourniquet", 
            "tout", "towboat", "toxicologist", "tract", "traditionalist", 
            "trait", "transact", "transcendent", "transcendentalist", 
            "transcript", "transect", "transept", "transient", "transit", 
            "translucent", "transmit", "transparent", "transplant", 
            "transport", "transshipment", "treat", "treatment", "trenchant", 
            "trident", "trinket", "triplet", "trisect", "triumphant", 
            "trivalent", "trivet", "trombonist", "trot", "troubleshoot", 
            "trout", "truant", "truculent", "trumpet", "trust", "tryout", 
            "tryst", "tsarist", "tuft", "tugboat", "tumescent", "tumult", 
            "turbojet", "turbot", "turbulent", "turnabout", "turncoat", 
            "turnout", "turret", "tut", "tweet", "twilight", "twilit", 
            "twist", "typecast", "typescript", "typeset", "typist", 
            "tyrant"}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0650994`5.964091983667615, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 317576, "Outcome" -> "Success"|>], 
      4788075798018994048 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149852700105`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "78c14cc5-be3f-41c1-b29c-a5fe12c71e5e", "TestID" -> 
         "065627b9-0c21-4f63-9fb7-b40811b2b0dc", "TestFileName" -> "", 
         "EvaluationID" -> "78ab4ba0-5d2a-4816-b91c-ee5cddb1c6a6", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["u", 
              BlankNullSequence[], "u"], "u"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0629669`5.949627310380766, "CPUTimeUsed" -> 0.06299999999998818, 
         "MemoryUsed" -> 316296, "Outcome" -> "Success"|>], 
      4005153693703000500 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149853380103`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3a3aa690-eff8-4c3a-8815-d12d4bb56fe8", "TestID" -> 
         "a6745a96-3231-48de-950f-877cc9e5b771", "TestFileName" -> "", 
         "EvaluationID" -> "137c4901-bbe5-4950-9df1-1ff85e33e743", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["v", 
              BlankNullSequence[], "v"], "v"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.064033`5.956918847195194, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 316296, "Outcome" -> "Success"|>], 
      5392539292974399034 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894814985403009*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b9c5f965-1d11-4fb6-bac9-688b7403cbf2", "TestID" -> 
         "47632c15-39e0-498e-8adb-a0468b2c3383", "TestFileName" -> "", 
         "EvaluationID" -> "9d5fc4e8-6ae0-4eb0-aafc-8394320f273e", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["w", 
              BlankNullSequence[], "w"], "w"]]], "ExpectedOutput" -> 
         HoldForm[{
           "wallow", "wheelbarrow", "whew", "whipsaw", "widow", "willow", 
            "window", "winnow", "withdraw", "wow"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "wallow", "wheelbarrow", "whew", "whipsaw", "widow", "willow", 
            "window", "winnow", "withdraw", "wow"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0664011`5.972690271777912, "CPUTimeUsed" -> 
         0.07800000000000296, "MemoryUsed" -> 316416, "Outcome" -> 
         "Success"|>], 6231715516844490530 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149854730086`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "52f458ea-19f5-4c2d-97bf-199348032839", "TestID" -> 
         "2030f6c9-1223-4098-8fdb-235171a4a1fa", "TestFileName" -> "", 
         "EvaluationID" -> "32958af4-0c40-4e47-a135-d011c8fcf875", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["x", 
              BlankNullSequence[], "x"], "x"]]], "ExpectedOutput" -> 
         HoldForm[{"xerox"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[{"xerox"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0699961`5.995588840765328, "CPUTimeUsed" -> 
         0.06299999999998818, "MemoryUsed" -> 316344, "Outcome" -> 
         "Success"|>], 7842431288565237629 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149855390086`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c6d9863a-c1dd-4eb6-a01d-69331d0c7675", "TestID" -> 
         "ac79101f-f7be-42e2-9465-8045b3279b85", "TestFileName" -> "", 
         "EvaluationID" -> "546b25c1-9b22-476d-a19b-1f68b222945e", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["y", 
              BlankNullSequence[], "y"], "y"]]], "ExpectedOutput" -> 
         HoldForm[{
           "yearly", "yearningly", "yeasty", "yeomanry", "yesterday", 
            "youthfully", "yucky", "yummy"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "yearly", "yearningly", "yeasty", "yeomanry", "yesterday", 
            "youthfully", "yucky", "yummy"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.067968`5.982819488561325, "CPUTimeUsed" -> 
         0.06200000000001182, "MemoryUsed" -> 316400, "Outcome" -> 
         "Success"|>], 3239438123533169958 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894814985605012*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6464a902-153d-4191-a075-62de16c277e3", "TestID" -> 
         "8fc600fd-b907-4c13-93d0-0eedd0a9cf51", "TestFileName" -> "", 
         "EvaluationID" -> "d4d03480-16ff-423e-8383-17b446d64a6d", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["z", 
              BlankNullSequence[], "z"], "z"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0669979`5.976576188104379, "CPUTimeUsed" -> 0.07799999999997453, 
         "MemoryUsed" -> 316296, "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {5352431564555919251, 6903415164816336208, 
     8219551251432999447, 6493388121361903427, 1383686905167173627, 
     203133632096091982, 4003584001828962288, 7911083907457741935, 
     3817054756988984697, 1883698822244240801, 9183992619104411735, 
     6992305029116038299, 4854954860560392742, 7214148113984934097, 
     4594325282351276525, 3744128831422774626, 7300347619632313517, 
     8189797156538591428, 6202705961845475077, 3501684687581229181, 
     4788075798018994048, 4005153693703000500, 5392539292974399034, 
     6231715516844490530, 7842431288565237629, 3239438123533169958}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8948143205988092`*^9, 3.894814991235859*^9},
 CellLabel->"Out[138]=",
 CellID->392795689,ExpressionUUID->"3fa2c788-518a-435e-a89a-a766ef325442"]
}, Open  ]],

Cell["You can also just use TestReport without evaluating first:", \
"ExampleText",
 CellChangeTimes->{{3.894814347478548*^9, 3.894814356486232*^9}},
 CellID->8990229,ExpressionUUID->"f8b19df5-13f5-43e3-a3ab-83a2775ec7f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TestReport", "[", "tests", "]"}]], "Input",
 CellChangeTimes->{{3.894814293738363*^9, 3.8948143343102694`*^9}},
 CellLabel->"In[140]:=",
 CellID->92012697,ExpressionUUID->"b2980a1c-bec4-432b-a7de-abb1f266b475"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                  ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], PercentForm], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "1.7355828000000000001`5.974986987387655", "\"s\"", 
                    "seconds", "\"Seconds\""}, "Quantity", SyntaxForm -> Mod],
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> Automatic, "Aborted" -> False, 
    "TestResults" -> <|
     8637948836429095778 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894814983851045*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "cd3cdf73-f231-4abd-83e1-1ab000ca6fe0", "TestID" -> 
         "367c3372-f338-4344-9f9c-4ae67ffb7c3c", "TestFileName" -> "", 
         "EvaluationID" -> "43a117a8-9ee0-4c3f-8a9c-512d99d87a4f", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["a", 
              BlankNullSequence[], "a"], "a"]]], "ExpectedOutput" -> 
         HoldForm[{
           "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia",
             "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
            "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
            "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda",
             "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
            "angelica", "angina", "angostura", "anorexia", "antenna", "aorta",
             "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
            "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
            "aspidistra", "asthma", "ataxia", "aura", "aurora", "azalea"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia",
             "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
            "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
            "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda",
             "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
            "angelica", "angina", "angostura", "anorexia", "antenna", "aorta",
             "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
            "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
            "aspidistra", "asthma", "ataxia", "aura", "aurora", "azalea"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.064033`5.956918847195194, "CPUTimeUsed" -> 0.06299999999998818, 
         "MemoryUsed" -> 316664, "Outcome" -> "Success"|>], 
      7030188495849432436 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149839200106`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a3fb0190-d0f0-47b7-9e38-c52785ec2493", "TestID" -> 
         "942496e5-3265-448a-a4cf-b1e54c0b175a", "TestFileName" -> "", 
         "EvaluationID" -> "52bd03ae-096b-4d24-98d4-f59884892d52", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["b", 
              BlankNullSequence[], "b"], "b"]]], "ExpectedOutput" -> 
         HoldForm[{
           "baobab", "barb", "bathtub", "benumb", "bib", "blab", "blob", 
            "blurb", "bob", "bomb", "breadcrumb", "brewpub", "bulb"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "baobab", "barb", "bathtub", "benumb", "bib", "blab", "blob", 
            "blurb", "bob", "bomb", "breadcrumb", "brewpub", "bulb"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0639655`5.956460796823572, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 316416, "Outcome" -> "Success"|>], 
      7817378965442041327 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149839880095`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "db44f779-349c-4795-a0ec-50021be7549c", "TestID" -> 
         "81f4d01a-92ac-40e3-a3a2-be32b24c03ef", "TestFileName" -> "", 
         "EvaluationID" -> "4a914a6f-b6a7-469c-b09c-3310761931d3", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["c", 
              BlankNullSequence[], "c"], "c"]]], "ExpectedOutput" -> 
         HoldForm[{
           "calisthenic", "calligraphic", "caloric", "calorific", "cambric", 
            "cannibalistic", "capitalistic", "carbonic", "carcinogenic", 
            "cardiac", "cartographic", "casuistic", "cataclysmic", 
            "cataleptic", "catalytic", "catastrophic", "catatonic", 
            "cathartic", "cathodic", "catholic", "cationic", "caustic", 
            "celeriac", "cenobitic", "centric", "cephalic", "ceramic", 
            "chaotic", "charabanc", "characteristic", "charismatic", 
            "chauvinistic", "chemotherapeutic", "cherubic", "chic", 
            "chimeric", "chiropractic", "chivalric", "choc", "choleric", 
            "choreographic", "chromatic", "chromatographic", "chronic", 
            "cinematic", "citric", "civic", "classic", "claustrophobic", 
            "cleric", "climacteric", "climactic", "climatic", "clinic", 
            "colic", "colonic", "colorimetric", "comic", "communistic", 
            "concentric", "conic", "copacetic", "cosmetic", "cosmic", 
            "critic", "cryogenic", "cryptanalytic", "cryptic", 
            "cryptographic", "cubic", "cupric", "cybernetic", "cyclic", 
            "cyclonic", "cynic", "cystic", "cytoplasmic", "cytotoxic"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "calisthenic", "calligraphic", "caloric", "calorific", "cambric", 
            "cannibalistic", "capitalistic", "carbonic", "carcinogenic", 
            "cardiac", "cartographic", "casuistic", "cataclysmic", 
            "cataleptic", "catalytic", "catastrophic", "catatonic", 
            "cathartic", "cathodic", "catholic", "cationic", "caustic", 
            "celeriac", "cenobitic", "centric", "cephalic", "ceramic", 
            "chaotic", "charabanc", "characteristic", "charismatic", 
            "chauvinistic", "chemotherapeutic", "cherubic", "chic", 
            "chimeric", "chiropractic", "chivalric", "choc", "choleric", 
            "choreographic", "chromatic", "chromatographic", "chronic", 
            "cinematic", "citric", "civic", "classic", "claustrophobic", 
            "cleric", "climacteric", "climactic", "climatic", "clinic", 
            "colic", "colonic", "colorimetric", "comic", "communistic", 
            "concentric", "conic", "copacetic", "cosmetic", "cosmic", 
            "critic", "cryogenic", "cryptanalytic", "cryptic", 
            "cryptographic", "cubic", "cupric", "cybernetic", "cyclic", 
            "cyclonic", "cynic", "cystic", "cytoplasmic", "cytotoxic"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0660331`5.9702766840386845, "CPUTimeUsed" -> 0.06299999999998818, 
         "MemoryUsed" -> 316944, "Outcome" -> "Success"|>], 
      315213161107385227 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149840570107`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0797ab46-074b-47f1-b364-c0eb3a599c56", "TestID" -> 
         "0f9f5efc-3b28-411e-97f8-be9b2c035b43", "TestFileName" -> "", 
         "EvaluationID" -> "d769b8cc-aac3-4051-89b9-6bb1013a4c7c", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["d", 
              BlankNullSequence[], "d"], "d"]]], "ExpectedOutput" -> 
         HoldForm[{
           "dabbled", "dachshund", "dad", "dairymaid", "damaged", "dandified",
             "dappled", "darkened", "dartboard", "dashboard", "dashed", 
            "dastard", "dated", "daunted", "daybed", "dazed", "dazzled", 
            "dead", "dead-end", "deadened", "deadhead", "deadlocked", 
            "deadwood", "deafened", "deathbed", "debased", "debauched", 
            "debilitated", "decapitated", "decayed", "deceased", 
            "decentralized", "decided", "deciphered", "deckhand", "declared", 
            "declassified", "decorated", "decreased", "decreed", "dedicated", 
            "deed", "defeated", "defend", "defiled", "defined", "deflated", 
            "defoliated", "deformed", "defraud", "degraded", "dehumanized", 
            "dehydrated", "dejected", "delayed", "delighted", "delimited", 
            "delineated", "demand", "demented", "demigod", "demolished", 
            "demonstrated", "demoralized", "denatured", "dented", "denuded", 
            "departed", "depend", "depicted", "depleted", "depopulated", 
            "depraved", "depressed", "deprived", "deranged", "derived", 
            "descend", "described", "desecrated", "deserted", "deserved", 
            "desiccated", "designed", "desired", "despised", "despoiled", 
            "despond", "destined", "destroyed", "detached", "detailed", 
            "detected", "determined", "detested", "devalued", "developed", 
            "devoid", "devoted", "diamond", "dictated", "did", 
            "differentiated", "diffused", "dignified", "dilapidated", 
            "diluted", "diminished", "dimmed", "diploid", "dipped", 
            "directed", "disabled", "disabused", "disadvantaged", 
            "disaffected", "disappointed", "disarranged", "disarrayed", 
            "disband", "discard", "discarded", "discharged", "disciplined", 
            "disclosed", "discombobulated", "discomfited", "discomposed", 
            "disconcerted", "disconnected", "discontented", "discontinued", 
            "discord", "discouraged", "discovered", "discredited", "diseased",
             "disembodied", "disenchanted", "disenfranchised", "disentangled",
             "disfigured", "disfranchised", "disgraced", "disgruntled", 
            "disguised", "disgusted", "disheartened", "dished", "disheveled", 
            "dishonored", "disillusioned", "disinclined", "disinherited", 
            "disinterested", "disjointed", "disliked", "dislocated", 
            "dismantled", "dismayed", "dismissed", "disordered", 
            "disorganized", "disoriented", "dispensed", "dispersed", 
            "dispirited", "displeased", "disposed", "dispossessed", 
            "disputed", "disqualified", "disquieted", "disregard", 
            "disregarded", "disrupted", "dissatisfied", "dissected", 
            "dissipated", "dissolved", "distend", "distinguished", 
            "distorted", "distracted", "distressed", "distributed", 
            "disturbed", "disunited", "disused", "diversified", "diverted", 
            "divided", "dividend", "divorced", "dockyard", "documented", 
            "dogged", "dogsled", "dogwood", "domed", "domesticated", 
            "dominated", "doodad", "doomed", "dooryard", "doped", "dosed", 
            "dotard", "dotted", "doubled", "dowered", "downhearted", 
            "download", "downward", "downwind", "drainboard", "drained", 
            "draped", "dread", "dreaded", "dreamed", "dreamland", 
            "dreamworld", "drenched", "dressed", "dried", "driftwood", 
            "drilled", "drugged", "drunkard", "dryad", "duckweed", "dud", 
            "dullard", "dulled", "dumbfound", "dumbfounded", "dyad", "dyed"}],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "dabbled", "dachshund", "dad", "dairymaid", "damaged", "dandified",
             "dappled", "darkened", "dartboard", "dashboard", "dashed", 
            "dastard", "dated", "daunted", "daybed", "dazed", "dazzled", 
            "dead", "dead-end", "deadened", "deadhead", "deadlocked", 
            "deadwood", "deafened", "deathbed", "debased", "debauched", 
            "debilitated", "decapitated", "decayed", "deceased", 
            "decentralized", "decided", "deciphered", "deckhand", "declared", 
            "declassified", "decorated", "decreased", "decreed", "dedicated", 
            "deed", "defeated", "defend", "defiled", "defined", "deflated", 
            "defoliated", "deformed", "defraud", "degraded", "dehumanized", 
            "dehydrated", "dejected", "delayed", "delighted", "delimited", 
            "delineated", "demand", "demented", "demigod", "demolished", 
            "demonstrated", "demoralized", "denatured", "dented", "denuded", 
            "departed", "depend", "depicted", "depleted", "depopulated", 
            "depraved", "depressed", "deprived", "deranged", "derived", 
            "descend", "described", "desecrated", "deserted", "deserved", 
            "desiccated", "designed", "desired", "despised", "despoiled", 
            "despond", "destined", "destroyed", "detached", "detailed", 
            "detected", "determined", "detested", "devalued", "developed", 
            "devoid", "devoted", "diamond", "dictated", "did", 
            "differentiated", "diffused", "dignified", "dilapidated", 
            "diluted", "diminished", "dimmed", "diploid", "dipped", 
            "directed", "disabled", "disabused", "disadvantaged", 
            "disaffected", "disappointed", "disarranged", "disarrayed", 
            "disband", "discard", "discarded", "discharged", "disciplined", 
            "disclosed", "discombobulated", "discomfited", "discomposed", 
            "disconcerted", "disconnected", "discontented", "discontinued", 
            "discord", "discouraged", "discovered", "discredited", "diseased",
             "disembodied", "disenchanted", "disenfranchised", "disentangled",
             "disfigured", "disfranchised", "disgraced", "disgruntled", 
            "disguised", "disgusted", "disheartened", "dished", "disheveled", 
            "dishonored", "disillusioned", "disinclined", "disinherited", 
            "disinterested", "disjointed", "disliked", "dislocated", 
            "dismantled", "dismayed", "dismissed", "disordered", 
            "disorganized", "disoriented", "dispensed", "dispersed", 
            "dispirited", "displeased", "disposed", "dispossessed", 
            "disputed", "disqualified", "disquieted", "disregard", 
            "disregarded", "disrupted", "dissatisfied", "dissected", 
            "dissipated", "dissolved", "distend", "distinguished", 
            "distorted", "distracted", "distressed", "distributed", 
            "disturbed", "disunited", "disused", "diversified", "diverted", 
            "divided", "dividend", "divorced", "dockyard", "documented", 
            "dogged", "dogsled", "dogwood", "domed", "domesticated", 
            "dominated", "doodad", "doomed", "dooryard", "doped", "dosed", 
            "dotard", "dotted", "doubled", "dowered", "downhearted", 
            "download", "downward", "downwind", "drainboard", "drained", 
            "draped", "dread", "dreaded", "dreamed", "dreamland", 
            "dreamworld", "drenched", "dressed", "dried", "driftwood", 
            "drilled", "drugged", "drunkard", "dryad", "duckweed", "dud", 
            "dullard", "dulled", "dumbfound", "dumbfounded", "dyad", "dyed"}],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0739997`6.01974495690609, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 318256, "Outcome" -> "Success"|>], 
      5891855242991415957 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149841220107`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "061f2682-3413-4263-9a5f-83e0c7700c79", "TestID" -> 
         "215e86f7-480f-48dc-9549-b3aa82c82f82", "TestFileName" -> "", 
         "EvaluationID" -> "caeb371d-362c-4826-808d-8220932e5b5d", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["e", 
              BlankNullSequence[], "e"], "e"]]], "ExpectedOutput" -> 
         HoldForm[{
           "eagle", "earache", "earlobe", "earphone", "earpiece", 
            "earthenware", "earthquake", "ease", "eatable", "ebullience", 
            "eclipse", "eclogue", "economize", "edge", "edgewise", "edible", 
            "edifice", "editorialize", "educate", "educative", "educe", 
            "eerie", "efface", "effective", "effectuate", "effeminate", 
            "effervesce", "effervescence", "effete", "efflorescence", 
            "effluence", "effulgence", "effuse", "effusive", "eglantine", 
            "eigenvalue", "eightpence", "elaborate", "elapse", "elate", 
            "elective", "electorate", "electrocute", "electrode", 
            "electrolyte", "electromotive", "electronegative", "electroplate",
             "electroscope", "elegance", "elephantine", "elevate", "elide", 
            "eligible", "eliminate", "elite", "ellipse", "elongate", "elope", 
            "eloquence", "else", "elsewhere", "elucidate", "elude", "elusive",
             "emaciate", "emanate", "emancipate", "emasculate", "embezzle", 
            "embouchure", "embrace", "embrasure", "emcee", "emerge", 
            "emergence", "emigrate", "emigre", "eminence", "emirate", "emote",
             "emotive", "empathize", "emphasize", "empire", "employable", 
            "employee", "emulate", "enable", "enamelware", "encapsulate", 
            "encase", "encircle", "enclave", "enclose", "enclosure", "encode",
             "encore", "encourage", "encumbrance", "endgame", "endive", 
            "endocrine", "endorse", "endoscope", "endue", "endurable", 
            "endurance", "endure", "energize", "enervate", "enfeeble", 
            "enfilade", "enforce", "enforceable", "enfranchise", "engage", 
            "engine", "engorge", "engrave", "enhance", "enjoyable", "enlarge",
             "enlistee", "ennoble", "enrage", "enrapture", "ensconce", 
            "ensemble", "enshrine", "ensilage", "enslave", "ensnare", "ensue",
             "ensure", "entangle", "entente", "enterprise", "enthrone", 
            "enthuse", "entice", "entire", "entitle", "entourage", 
            "entr'acte", "entrance", "entree", "entwine", "enumerable", 
            "enumerate", "enunciate", "envelope", "enviable", "envisage", 
            "enzyme", "epee", "ephedrine", "epicure", "epilogue", 
            "epinephrine", "episcopate", "episode", "epistle", "epitome", 
            "epitomize", "equable", "equalize", "equate", "equine", 
            "equipage", "equipoise", "equitable", "equivalence", "equivocate",
             "eradicable", "eradicate", "erasable", "erase", "erasure", "ere",
             "erectile", "eremite", "ermine", "erode", "erosive", "erstwhile",
             "erudite", "eruptive", "erythrocyte", "escalate", "escapade", 
            "escape", "escapee", "escarole", "escritoire", "espionage", 
            "esplanade", "espouse", "esquire", "essence", "estate", 
            "estimable", "estimate", "estrange", "estuarine", "ethane", 
            "ethylene", "etiquette", "etude", "euchre", "eukaryote", 
            "eulogize", "evacuate", "evacuee", "evade", "evaluate", 
            "evaluative", "evanescence", "evangelize", "evaporate", "evasive",
             "eve", "eventide", "eventuate", "evermore", "everyone", 
            "everyplace", "everywhere", "evidence", "evince", "eviscerate", 
            "evocative", "evoke", "evolve", "ewe", "exacerbate", "exactitude",
             "exaggerate", "examine", "example", "exasperate", "excavate", 
            "excellence", "exceptionable", "excessive", "exchange", 
            "exchangeable", "excise", "excitable", "excite", "exclude", 
            "exclusive", "excommunicate", "excoriate", "excrescence", 
            "excrete", "exculpate", "excursive", "excusable", "excuse", 
            "execrable", "execrate", "executable", "execute", "executive", 
            "exercise", "exfoliate", "exhale", "exhaustible", "exhaustive", 
            "exhilarate", "exhume", "exile", "existence", "exocrine", 
            "exonerate", "exorbitance", "exorcise", "exosphere", "expandable",
             "expanse", "expansible", "expansive", "expatiate", "expatriate", 
            "expectorate", "expedience", "expedite", "expendable", 
            "expenditure", "expense", "expensive", "experience", "expertise", 
            "expiate", "expire", "explainable", "expletive", "explicable", 
            "explicate", "explode", "exploitative", "explore", "explosive", 
            "exportable", "expose", "expostulate", "exposure", "expressible", 
            "expressive", "expropriate", "expunge", "expurgate", "exquisite", 
            "extempore", "extemporize", "extensible", "extensive", 
            "extenuate", "exterminate", "externalize", "extinguishable", 
            "extirpate", "extortionate", "extractable", "extradite", 
            "extraordinaire", "extrapolate", "extravagance", "extreme", 
            "extricate", "extrude", "extrusive", "exuberance", "exudate", 
            "exude", "eye", "eyepiece", "eyesore"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "eagle", "earache", "earlobe", "earphone", "earpiece", 
            "earthenware", "earthquake", "ease", "eatable", "ebullience", 
            "eclipse", "eclogue", "economize", "edge", "edgewise", "edible", 
            "edifice", "editorialize", "educate", "educative", "educe", 
            "eerie", "efface", "effective", "effectuate", "effeminate", 
            "effervesce", "effervescence", "effete", "efflorescence", 
            "effluence", "effulgence", "effuse", "effusive", "eglantine", 
            "eigenvalue", "eightpence", "elaborate", "elapse", "elate", 
            "elective", "electorate", "electrocute", "electrode", 
            "electrolyte", "electromotive", "electronegative", "electroplate",
             "electroscope", "elegance", "elephantine", "elevate", "elide", 
            "eligible", "eliminate", "elite", "ellipse", "elongate", "elope", 
            "eloquence", "else", "elsewhere", "elucidate", "elude", "elusive",
             "emaciate", "emanate", "emancipate", "emasculate", "embezzle", 
            "embouchure", "embrace", "embrasure", "emcee", "emerge", 
            "emergence", "emigrate", "emigre", "eminence", "emirate", "emote",
             "emotive", "empathize", "emphasize", "empire", "employable", 
            "employee", "emulate", "enable", "enamelware", "encapsulate", 
            "encase", "encircle", "enclave", "enclose", "enclosure", "encode",
             "encore", "encourage", "encumbrance", "endgame", "endive", 
            "endocrine", "endorse", "endoscope", "endue", "endurable", 
            "endurance", "endure", "energize", "enervate", "enfeeble", 
            "enfilade", "enforce", "enforceable", "enfranchise", "engage", 
            "engine", "engorge", "engrave", "enhance", "enjoyable", "enlarge",
             "enlistee", "ennoble", "enrage", "enrapture", "ensconce", 
            "ensemble", "enshrine", "ensilage", "enslave", "ensnare", "ensue",
             "ensure", "entangle", "entente", "enterprise", "enthrone", 
            "enthuse", "entice", "entire", "entitle", "entourage", 
            "entr'acte", "entrance", "entree", "entwine", "enumerable", 
            "enumerate", "enunciate", "envelope", "enviable", "envisage", 
            "enzyme", "epee", "ephedrine", "epicure", "epilogue", 
            "epinephrine", "episcopate", "episode", "epistle", "epitome", 
            "epitomize", "equable", "equalize", "equate", "equine", 
            "equipage", "equipoise", "equitable", "equivalence", "equivocate",
             "eradicable", "eradicate", "erasable", "erase", "erasure", "ere",
             "erectile", "eremite", "ermine", "erode", "erosive", "erstwhile",
             "erudite", "eruptive", "erythrocyte", "escalate", "escapade", 
            "escape", "escapee", "escarole", "escritoire", "espionage", 
            "esplanade", "espouse", "esquire", "essence", "estate", 
            "estimable", "estimate", "estrange", "estuarine", "ethane", 
            "ethylene", "etiquette", "etude", "euchre", "eukaryote", 
            "eulogize", "evacuate", "evacuee", "evade", "evaluate", 
            "evaluative", "evanescence", "evangelize", "evaporate", "evasive",
             "eve", "eventide", "eventuate", "evermore", "everyone", 
            "everyplace", "everywhere", "evidence", "evince", "eviscerate", 
            "evocative", "evoke", "evolve", "ewe", "exacerbate", "exactitude",
             "exaggerate", "examine", "example", "exasperate", "excavate", 
            "excellence", "exceptionable", "excessive", "exchange", 
            "exchangeable", "excise", "excitable", "excite", "exclude", 
            "exclusive", "excommunicate", "excoriate", "excrescence", 
            "excrete", "exculpate", "excursive", "excusable", "excuse", 
            "execrable", "execrate", "executable", "execute", "executive", 
            "exercise", "exfoliate", "exhale", "exhaustible", "exhaustive", 
            "exhilarate", "exhume", "exile", "existence", "exocrine", 
            "exonerate", "exorbitance", "exorcise", "exosphere", "expandable",
             "expanse", "expansible", "expansive", "expatiate", "expatriate", 
            "expectorate", "expedience", "expedite", "expendable", 
            "expenditure", "expense", "expensive", "experience", "expertise", 
            "expiate", "expire", "explainable", "expletive", "explicable", 
            "explicate", "explode", "exploitative", "explore", "explosive", 
            "exportable", "expose", "expostulate", "exposure", "expressible", 
            "expressive", "expropriate", "expunge", "expurgate", "exquisite", 
            "extempore", "extemporize", "extensible", "extensive", 
            "extenuate", "exterminate", "externalize", "extinguishable", 
            "extirpate", "extortionate", "extractable", "extradite", 
            "extraordinaire", "extrapolate", "extravagance", "extreme", 
            "extricate", "extrude", "extrusive", "exuberance", "exudate", 
            "exude", "eye", "eyepiece", "eyesore"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0629979`5.9498410705615585, "CPUTimeUsed" -> 
         0.06299999999998818, "MemoryUsed" -> 319088, "Outcome" -> 
         "Success"|>], 7636629680652859342 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894814984187009*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "fa8d2541-9ec6-4ce3-9ec8-132586cfeed6", "TestID" -> 
         "42841ae9-c31d-4045-b17a-5a1593409605", "TestFileName" -> "", 
         "EvaluationID" -> "5514aeaa-35d1-4691-970c-2f3c3bfe4d7d", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["f", 
              BlankNullSequence[], "f"], "f"]]], "ExpectedOutput" -> 
         HoldForm[{
           "falloff", "far-off", "fief", "fireproof", "flagstaff", 
            "flameproof", "fluff", "flyleaf", "foodstuff", "foolproof"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "falloff", "far-off", "fief", "fireproof", "flagstaff", 
            "flameproof", "fluff", "flyleaf", "foodstuff", "foolproof"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0650004`5.963431027048046, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 316392, "Outcome" -> "Success"|>], 
      6655656790479570493 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149842640104`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "eefdb846-4930-4732-a5c6-fe2f616bfe6d", "TestID" -> 
         "a3892fe9-4294-45bf-b240-18235669d831", "TestFileName" -> "", 
         "EvaluationID" -> "f3cf3696-af4c-4855-b5f1-5dd48c925f60", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["g", 
              BlankNullSequence[], "g"], "g"]]], "ExpectedOutput" -> 
         HoldForm[{
           "gag", "galling", "galvanizing", "gambling", "gaming", "gang", 
            "gangling", "gaping", "gardening", "gasbag", "gassing", 
            "gathering", "gearing", "gelding", "gesticulating", "getting", 
            "gig", "gilding", "ginseng", "giving", "glaring", "gleaming", 
            "gliding", "glimmering", "glinting", "glistening", "glistering", 
            "glittering", "gloaming", "gloating", "glowering", "glowing", 
            "goading", "going", "goldbricking", "golfing", "gong", "gosling", 
            "gossiping", "governing", "grading", "grafting", "grappling", 
            "grasping", "gratifying", "grating", "grazing", "greening", 
            "greeting", "grieving", "grilling", "grinding", "grinning", 
            "griping", "gripping", "grog", "grooming", "grooving", "groping", 
            "groundbreaking", "groundhog", "grounding", "grouping", 
            "groveling", "growing", "growling", "grudging", "grueling", 
            "grumbling", "guessing", "guiding", "gulag", "gulping", "gumming",
             "gunrunning", "gushing", "guzzling"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "gag", "galling", "galvanizing", "gambling", "gaming", "gang", 
            "gangling", "gaping", "gardening", "gasbag", "gassing", 
            "gathering", "gearing", "gelding", "gesticulating", "getting", 
            "gig", "gilding", "ginseng", "giving", "glaring", "gleaming", 
            "gliding", "glimmering", "glinting", "glistening", "glistering", 
            "glittering", "gloaming", "gloating", "glowering", "glowing", 
            "goading", "going", "goldbricking", "golfing", "gong", "gosling", 
            "gossiping", "governing", "grading", "grafting", "grappling", 
            "grasping", "gratifying", "grating", "grazing", "greening", 
            "greeting", "grieving", "grilling", "grinding", "grinning", 
            "griping", "gripping", "grog", "grooming", "grooving", "groping", 
            "groundbreaking", "groundhog", "grounding", "grouping", 
            "groveling", "growing", "growling", "grudging", "grueling", 
            "grumbling", "guessing", "guiding", "gulag", "gulping", "gumming",
             "gunrunning", "gushing", "guzzling"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0650451`5.963729583539515, "CPUTimeUsed" -> 
         0.07799999999997453, "MemoryUsed" -> 316944, "Outcome" -> 
         "Success"|>], 5336846157401562665 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894814984335009*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "f248d3ec-3227-4bd6-8e53-80fe51385458", "TestID" -> 
         "0446dea2-159e-4e58-91f7-a531ae96c8c2", "TestFileName" -> "", 
         "EvaluationID" -> "b438180c-6391-43cc-9877-bab3f524ba32", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["h", 
              BlankNullSequence[], "h"], "h"]]], "ExpectedOutput" -> 
         HoldForm[{
           "hairbrush", "haircloth", "hairsbreadth", "hallelujah", 
            "hand-to-mouth", "harsh", "hash", "hashish", "hatch", "haunch", 
            "hawkish", "health", "hearth", "heath", "heathenish", "hemstitch",
             "henceforth", "herewith", "hieroglyph", "high", "high-tech", 
            "hitch", "hi-tech", "hoggish", "hogwash", "holograph", 
            "homeopath", "homestretch", "homograph", "hooch", "hookah", 
            "hopscotch", "horseflesh", "horselaugh", "horseradish", 
            "hotchpotch", "howdah", "hoydenish", "huh", "humph", "hunch", 
            "hundredth", "hush", "hutch", "huzzah", "hyacinth"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "hairbrush", "haircloth", "hairsbreadth", "hallelujah", 
            "hand-to-mouth", "harsh", "hash", "hashish", "hatch", "haunch", 
            "hawkish", "health", "hearth", "heath", "heathenish", "hemstitch",
             "henceforth", "herewith", "hieroglyph", "high", "high-tech", 
            "hitch", "hi-tech", "hoggish", "hogwash", "holograph", 
            "homeopath", "homestretch", "homograph", "hooch", "hookah", 
            "hopscotch", "horseflesh", "horselaugh", "horseradish", 
            "hotchpotch", "howdah", "hoydenish", "huh", "humph", "hunch", 
            "hundredth", "hush", "hutch", "huzzah", "hyacinth"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0620622`5.943342164357696, "CPUTimeUsed" -> 0.0630000000000166, 
         "MemoryUsed" -> 316688, "Outcome" -> "Success"|>], 
      9039367527385296228 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.89481498440301*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "dfb5286d-ee09-447f-9125-578d928ae182", "TestID" -> 
         "7af2ee94-eb20-4a2e-bec4-b12781e57740", "TestFileName" -> "", 
         "EvaluationID" -> "966f22ef-b155-4acd-809a-a72631e5912d", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["i", 
              BlankNullSequence[], "i"], "i"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0625783`5.946938758773075, "CPUTimeUsed" -> 0.0619999999999834, 
         "MemoryUsed" -> 316272, "Outcome" -> "Success"|>], 
      8160050284090485560 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149844700103`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "05b6be50-167b-49ff-a44b-f14c0fc43d1c", "TestID" -> 
         "4efb2e4f-0558-4df9-99dd-4b7e6ec4a5c2", "TestFileName" -> "", 
         "EvaluationID" -> "9385d2ba-e3bd-46fc-8bc0-a9029ca66fdd", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["j", 
              BlankNullSequence[], "j"], "j"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0631912`5.951171600520393, "CPUTimeUsed" -> 0.0630000000000166, 
         "MemoryUsed" -> 316272, "Outcome" -> "Success"|>], 
      6545121992845681690 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149845400105`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "7dfbeb2f-69dd-41d4-9d40-9bed51c1a6ab", "TestID" -> 
         "f36a65da-0b3e-4137-9acc-671cf854e101", "TestFileName" -> "", 
         "EvaluationID" -> "b9d5b93d-6ca1-4f8a-831b-ddb26c50e94e", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["k", 
              BlankNullSequence[], "k"], "k"]]], "ExpectedOutput" -> 
         HoldForm[{
           "kapok", "kayak", "kick", "kickback", "kinfolk", "kink", 
            "kinsfolk", "kiosk", "kirk", "knack", "knapsack", "knickknack", 
            "knock", "kook", "kopeck"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> 
         HoldForm[{
           "kapok", "kayak", "kick", "kickback", "kinfolk", "kink", 
            "kinsfolk", "kiosk", "kirk", "knack", "knapsack", "knickknack", 
            "knock", "kook", "kopeck"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0680013`5.983032213147486, "CPUTimeUsed" -> 
         0.0619999999999834, "MemoryUsed" -> 316432, "Outcome" -> 
         "Success"|>], 3942417062669217328 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.89481498461101*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "9b3211db-be74-4803-88b8-5a047753efa7", "TestID" -> 
         "f1d84cc5-eb3c-4563-9f16-54e22f4c93f7", "TestFileName" -> "", 
         "EvaluationID" -> "c4847f09-4de7-4a8c-ac5e-326d972613db", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["l", 
              BlankNullSequence[], "l"], "l"]]], "ExpectedOutput" -> 
         HoldForm[{
           "label", "labial", "lachrymal", "lackadaisical", "lacteal", 
            "landfall", "landfill", "lapel", "larval", "laryngeal", "lateral",
             "latitudinal", "laurel", "lawful", "legal", "lentil", "lethal", 
            "level", "lexical", "lexicographical", "libel", "liberal", 
            "libidinal", "lineal", "lingual", "lintel", "literal", "littoral",
             "liturgical", "local", "logical", "logistical", "loll", 
            "longitudinal", "loyal", "lugsail", "lull", "lustful", 
            "lyrical"}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "label", "labial", "lachrymal", "lackadaisical", "lacteal", 
            "landfall", "landfill", "lapel", "larval", "laryngeal", "lateral",
             "latitudinal", "laurel", "lawful", "legal", "lentil", "lethal", 
            "level", "lexical", "lexicographical", "libel", "liberal", 
            "libidinal", "lineal", "lingual", "lintel", "literal", "littoral",
             "liturgical", "local", "logical", "logistical", "loll", 
            "longitudinal", "loyal", "lugsail", "lull", "lustful", 
            "lyrical"}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0639945`5.956657648030057, "CPUTimeUsed" -> 0.0630000000000166, 
         "MemoryUsed" -> 316624, "Outcome" -> "Success"|>], 
      7607543890206396316 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.89481498468801*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "159f3333-203c-4dd7-8df6-721e98af6093", "TestID" -> 
         "a4bc1305-c59b-45fd-a516-3401fd4b897a", "TestFileName" -> "", 
         "EvaluationID" -> "e37353fd-539c-44f4-abf4-592dae1f0edf", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["m", 
              BlankNullSequence[], "m"], "m"]]], "ExpectedOutput" -> 
         HoldForm[{
           "ma'am", "macadam", "macrocosm", "madam", "maelstrom", "magnesium",
             "magnetism", "magnum", "maim", "mainstream", "malapropism", 
            "mammogram", "mannerism", "marjoram", "martyrdom", "materialism", 
            "mausoleum", "maxim", "maximum", "mayhem", "mechanism", "medium", 
            "meerschaum", "memorandum", "mendelevium", "mercantilism", 
            "mesmerism", "metabolism", "metamorphism", "microcosm", 
            "microfilm", "microorganism", "midstream", "midterm", 
            "militarism", "millennium", "milligram", "minim", "minimalism", 
            "minimum", "misinform", "modem", "modernism", "modicum", 
            "molybdenum", "mom", "momentum", "monarchism", "monasticism", 
            "monetarism", "mongolism", "monism", "monogram", "monotheism", 
            "moonbeam", "moratorium", "multiculturalism", "multiform", "mum", 
            "museum", "mushroom", "mysticism"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "ma'am", "macadam", "macrocosm", "madam", "maelstrom", "magnesium",
             "magnetism", "magnum", "maim", "mainstream", "malapropism", 
            "mammogram", "mannerism", "marjoram", "martyrdom", "materialism", 
            "mausoleum", "maxim", "maximum", "mayhem", "mechanism", "medium", 
            "meerschaum", "memorandum", "mendelevium", "mercantilism", 
            "mesmerism", "metabolism", "metamorphism", "microcosm", 
            "microfilm", "microorganism", "midstream", "midterm", 
            "militarism", "millennium", "milligram", "minim", "minimalism", 
            "minimum", "misinform", "modem", "modernism", "modicum", 
            "molybdenum", "mom", "momentum", "monarchism", "monasticism", 
            "monetarism", "mongolism", "monism", "monogram", "monotheism", 
            "moonbeam", "moratorium", "multiculturalism", "multiform", "mum", 
            "museum", "mushroom", "mysticism"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0630001`5.9498562366413426, "CPUTimeUsed" -> 
         0.0619999999999834, "MemoryUsed" -> 316816, "Outcome" -> 
         "Success"|>], 3627176750127731731 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149847570105`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "5c4e1c2f-ec14-4dec-bccc-394c719b2a94", "TestID" -> 
         "4dc2e135-2cd4-4f02-b65c-7ea4c3bb3092", "TestFileName" -> "", 
         "EvaluationID" -> "4ab5bcaf-12b3-4079-b5e4-f47e7985bc26", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["n", 
              BlankNullSequence[], "n"], "n"]]], "ExpectedOutput" -> 
         HoldForm[{
           "nan", "napkin", "napoleon", "narration", "nasalization", "nation",
             "nationalization", "naturalization", "navigation", "neaten", 
            "needlewoman", "negation", "negotiation", "nelson", "neon", 
            "neuron", "neurosurgeon", "neutralization", "neutron", "newborn", 
            "newsman", "newspaperman", "newspaperwoman", "newswoman", 
            "newton", "niacin", "nickelodeon", "nightgown", "ninepin", 
            "nineteen", "nitrification", "nitrogen", "nitroglycerin", 
            "nobleman", "noblewoman", "noggin", "nomination", "non", 
            "nonagenarian", "nonaggression", "nonfiction", "nonhuman", 
            "nonintervention", "nonpartisan", "nonperson", "nonprescription", 
            "nonproliferation", "nonsectarian", "nonunion", "noon", 
            "normalization", "northeastern", "northern", "northwestern", 
            "notation", "notification", "notion", "noun", "novelization", 
            "nubbin", "nucleon", "nullification", "numeration", "nun", 
            "nurseryman", "nutation", "nutrition", "nylon"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "nan", "napkin", "napoleon", "narration", "nasalization", "nation",
             "nationalization", "naturalization", "navigation", "neaten", 
            "needlewoman", "negation", "negotiation", "nelson", "neon", 
            "neuron", "neurosurgeon", "neutralization", "neutron", "newborn", 
            "newsman", "newspaperman", "newspaperwoman", "newswoman", 
            "newton", "niacin", "nickelodeon", "nightgown", "ninepin", 
            "nineteen", "nitrification", "nitrogen", "nitroglycerin", 
            "nobleman", "noblewoman", "noggin", "nomination", "non", 
            "nonagenarian", "nonaggression", "nonfiction", "nonhuman", 
            "nonintervention", "nonpartisan", "nonperson", "nonprescription", 
            "nonproliferation", "nonsectarian", "nonunion", "noon", 
            "normalization", "northeastern", "northern", "northwestern", 
            "notation", "notification", "notion", "noun", "novelization", 
            "nubbin", "nucleon", "nullification", "numeration", "nun", 
            "nurseryman", "nutation", "nutrition", "nylon"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0661337`5.970937818806522, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316880, "Outcome" -> "Success"|>], 
      1285417813365074004 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149848270087`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "72dcd24f-0eb9-477d-ae63-f022d15b00b6", "TestID" -> 
         "a357dcc1-4fc0-412c-afcf-107bac891c26", "TestFileName" -> "", 
         "EvaluationID" -> "c1ba45c7-5f0d-483e-ab8d-65f3b774c9ca", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["o", 
              BlankNullSequence[], "o"], "o"]]], "ExpectedOutput" -> 
         HoldForm[{
           "obbligato", "octavo", "oho", "oleo", "onto", "oratorio", 
            "oregano", "orzo", "outdo", "outgo", "ouzo", "overdo"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "obbligato", "octavo", "oho", "oleo", "onto", "oratorio", 
            "oregano", "orzo", "outdo", "outgo", "ouzo", "overdo"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0670021`5.9766034125345975, "CPUTimeUsed" -> 0.0630000000000166, 
         "MemoryUsed" -> 316408, "Outcome" -> "Success"|>], 
      825502745164472569 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149849020114`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "698b617e-89eb-45cb-bd23-5f9f5ad539ea", "TestID" -> 
         "a436dba7-f9ec-4595-bc55-85dd89d3c3cd", "TestFileName" -> "", 
         "EvaluationID" -> "007a4823-1702-4c12-b881-60151dbb5e26", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["p", 
              BlankNullSequence[], "p"], "p"]]], "ExpectedOutput" -> 
         HoldForm[{
           "pap", "paperclip", "parsnip", "partisanship", "partnership", 
            "pawnshop", "peep", "penmanship", "pep", "pickup", "pileup", 
            "pip", "plop", "plump", "polyp", "pomp", "pop", "premiership", 
            "prep", "primp", "professorship", "prop", "proprietorship", 
            "pulp", "pump", "pup"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> 
         HoldForm[{
           "pap", "paperclip", "parsnip", "partisanship", "partnership", 
            "pawnshop", "peep", "penmanship", "pep", "pickup", "pileup", 
            "pip", "plop", "plump", "polyp", "pomp", "pop", "premiership", 
            "prep", "primp", "professorship", "prop", "proprietorship", 
            "pulp", "pump", "pup"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0680053`5.983057758642015, "CPUTimeUsed" -> 
         0.0619999999999834, "MemoryUsed" -> 316520, "Outcome" -> 
         "Success"|>], 4179814942758071226 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149849721065`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "0de51e87-630c-4d69-ac40-9c807656958d", "TestID" -> 
         "92a30384-47bd-4a16-a3b5-03e2e7b526f1", "TestFileName" -> "", 
         "EvaluationID" -> "4db4d106-8c7e-4850-a328-e18a9853c3ad", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["q", 
              BlankNullSequence[], "q"], "q"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0660004`5.970061565453649, "CPUTimeUsed" -> 0.0630000000000166, 
         "MemoryUsed" -> 316272, "Outcome" -> "Success"|>], 
      1894751290778237880 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.89481498504901*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "468bfa65-ee22-40df-885c-a77ebafe1a15", "TestID" -> 
         "1fae09f6-b37a-49bf-b1f9-12ae5305f2d2", "TestFileName" -> "", 
         "EvaluationID" -> "cbec9cde-9963-43d9-8e0c-860c3fbb3dc4", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["r", 
              BlankNullSequence[], "r"], "r"]]], "ExpectedOutput" -> 
         HoldForm[{
           "racer", "racketeer", "raconteur", "radar", "radiator", 
            "radiographer", "radiometer", "rafter", "raider", "railroader", 
            "rainmaker", "rainwater", "raiser", "rambler", "rancher", 
            "rancor", "rangefinder", "ranger", "ranker", "ranter", "rapier", 
            "rapper", "rapporteur", "raptor", "rasher", "raster", "ratepayer",
             "rather", "rathskeller", "ratifier", "ratter", "rattler", 
            "raver", "ravisher", "razor", "reactor", "reader", "reamer", 
            "reaper", "reappear", "rear", "reasoner", "receiver", "receptor", 
            "reciter", "reckoner", "recliner", "reconnoiter", "reconquer", 
            "reconsider", "recorder", "recover", "recruiter", "rectangular", 
            "rectifier", "rectilinear", "rector", "recur", "redactor", 
            "redeemer", "rediscover", "reducer", "refer", "refiner", 
            "reflector", "reformer", "refresher", "refrigerator", "refuter", 
            "register", "registrar", "regular", "regulator", "rehear", 
            "reindeer", "rejoinder", "relaxer", "reliever", "remainder", 
            "remember", "reminder", "remover", "render", "renovator", 
            "renter", "reorder", "repair", "repairer", "repeater", "reporter",
             "reproducer", "requester", "rescuer", "researcher", "reservoir", 
            "resister", "resistor", "resonator", "respecter", "respirator", 
            "responder", "restaurateur", "restorer", "restrainer", 
            "resuscitator", "retailer", "retainer", "reticular", "retriever", 
            "reveler", "reviewer", "reviser", "revolver", "rhymer", 
            "rhymester", "ricer", "rider", "rigger", "rigor", "ringer", 
            "ringleader", "ringmaster", "rioter", "ripper", "riser", "river", 
            "riveter", "roadrunner", "roadster", "roamer", "roar", "roarer", 
            "roaster", "robber", "rocker", "roisterer", "roller", "rollover", 
            "romper", "roofer", "roomer", "rooster", "rooter", "roper", 
            "roster", "rotor", "rotter", "rounder", "router", "rover", 
            "rower", "rubber", "rudder", "rugger", "ruler", "rummer", "rumor",
             "runner", "rusher", "rustler"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "racer", "racketeer", "raconteur", "radar", "radiator", 
            "radiographer", "radiometer", "rafter", "raider", "railroader", 
            "rainmaker", "rainwater", "raiser", "rambler", "rancher", 
            "rancor", "rangefinder", "ranger", "ranker", "ranter", "rapier", 
            "rapper", "rapporteur", "raptor", "rasher", "raster", "ratepayer",
             "rather", "rathskeller", "ratifier", "ratter", "rattler", 
            "raver", "ravisher", "razor", "reactor", "reader", "reamer", 
            "reaper", "reappear", "rear", "reasoner", "receiver", "receptor", 
            "reciter", "reckoner", "recliner", "reconnoiter", "reconquer", 
            "reconsider", "recorder", "recover", "recruiter", "rectangular", 
            "rectifier", "rectilinear", "rector", "recur", "redactor", 
            "redeemer", "rediscover", "reducer", "refer", "refiner", 
            "reflector", "reformer", "refresher", "refrigerator", "refuter", 
            "register", "registrar", "regular", "regulator", "rehear", 
            "reindeer", "rejoinder", "relaxer", "reliever", "remainder", 
            "remember", "reminder", "remover", "render", "renovator", 
            "renter", "reorder", "repair", "repairer", "repeater", "reporter",
             "reproducer", "requester", "rescuer", "researcher", "reservoir", 
            "resister", "resistor", "resonator", "respecter", "respirator", 
            "responder", "restaurateur", "restorer", "restrainer", 
            "resuscitator", "retailer", "retainer", "reticular", "retriever", 
            "reveler", "reviewer", "reviser", "revolver", "rhymer", 
            "rhymester", "ricer", "rider", "rigger", "rigor", "ringer", 
            "ringleader", "ringmaster", "rioter", "ripper", "riser", "river", 
            "riveter", "roadrunner", "roadster", "roamer", "roar", "roarer", 
            "roaster", "robber", "rocker", "roisterer", "roller", "rollover", 
            "romper", "roofer", "roomer", "rooster", "rooter", "roper", 
            "roster", "rotor", "rotter", "rounder", "router", "rover", 
            "rower", "rubber", "rudder", "rugger", "ruler", "rummer", "rumor",
             "runner", "rusher", "rustler"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0669961000000000001`5.976564519968978, 
         "CPUTimeUsed" -> 0.0619999999999834, "MemoryUsed" -> 317616, 
         "Outcome" -> "Success"|>], 5515491987338331631 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149851280093`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "a9cc97c8-1f82-44a7-8df9-547d69d71842", "TestID" -> 
         "cd9a8683-eaff-4f94-9e7c-3847f273ce22", "TestFileName" -> "", 
         "EvaluationID" -> "1bb15415-925d-426a-90dc-af862bd157f1", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["s", 
              BlankNullSequence[], "s"], "s"]]], "ExpectedOutput" -> 
         HoldForm[{
           "sacredness", "sacrilegious", "sadness", "safeness", "sagacious", 
            "saintliness", "salacious", "salaciousness", "sales", 
            "sallowness", "saltiness", "salubrious", "sameness", 
            "sanctimonious", "sanctimoniousness", "sandiness", "sands", 
            "saneness", "sans", "sapless", "sarcophagus", "sass", "sassafras",
             "sauciness", "savageness", "savings", "sawbones", "scabies", 
            "scabrous", "scads", "scaleless", "scaliness", "scandalous", 
            "scantiness", "scarceness", "scentless", "schnapps", "schooldays",
             "schoolmistress", "schuss", "scissors", "sclerosis", "scoliosis",
             "scoreless", "scores", "scours", "scraps", "scratchiness", 
            "scrofulous", "scrubs", "scrumptious", "scruples", "scrupulous", 
            "scrupulousness", "sculptress", "scurrilous", "seamless", 
            "seamstress", "seasickness", "seats", "seawards", "seaworthiness",
             "sebaceous", "secateurs", "second-guess", "secretiveness", 
            "sedateness", "seditious", "seductress", "sedulous", "seediness", 
            "seedless", "seemliness", "seems", "self-analysis", 
            "self-awareness", "self-conscious", "self-consciousness", 
            "selfishness", "selfless", "selflessness", "self-righteous", 
            "semantics", "semiconscious", "semidarkness", "semigloss", 
            "semiotics", "semiprecious", "sempstress", "senseless", 
            "senselessness", "sensibleness", "sensitiveness", "sensuous", 
            "sensuousness", "sententious", "separateness", "sepsis", 
            "serendipitous", "series", "serious", "seriousness", "serous", 
            "services", "sevens", "seventies", "shabbiness", "shades", 
            "shadiness", "shagginess", "shakiness", "shallowness", "shambles",
             "shamefulness", "shameless", "shamelessness", "shapeless", 
            "shapelessness", "shapeliness", "sharpness", "shears", 
            "sheepishness", "shekels", "shepherdess", "shiftiness", 
            "shiftless", "shiftlessness", "shingles", "shininess", 
            "shirtsleeves", "shoddiness", "shoeless", "shoes", "shortness", 
            "shorts", "shortsightedness", "showiness", "shrewdness", 
            "shrillness", "shucks", "shyness", "sickness", "sidewards", 
            "sideways", "sightedness", "sightless", "sights", "silents", 
            "siliceous", "silicosis", "silkiness", "silks", "silliness", 
            "simpleness", "simultaneous", "sinfulness", "single-mindedness", 
            "singleness", "singles", "sinless", "sinuous", "sinus", 
            "sinusitis", "sis", "sixties", "sketchiness", "skewness", 
            "skillfulness", "skinheads", "skinless", "skinniness", 
            "skittishness", "skittles", "skywards", "slackness", "slacks", 
            "slanderous", "sleaziness", "sleekness", "sleepiness", 
            "sleepless", "sleeplessness", "sleeveless", "slenderness", 
            "slews", "slickness", "slightness", "sliminess", "slimness", 
            "slipperiness", "sloppiness", "slops", "slothfulness", 
            "slovenliness", "slowness", "sluggishness", "slumberous", 
            "slyness", "smallness", "smartness", "smithereens", "smokeless", 
            "smoothness", "smugness", "sneakiness", "snips", "snobbishness", 
            "snuffers", "snugness", "soapsuds", "soberness", 
            "sociolinguistics", "softness", "sogginess", "solicitous", 
            "solicitousness", "solidness", "solidus", "solitariness", 
            "somberness", "sometimes", "songstress", "sonorous", 
            "sonorousness", "sops", "sorceress", "sordidness", "soreness", 
            "sorrowfulness", "soulfulness", "soulless", "soundless", 
            "soundness", "sourness", "sourpuss", "southwards", "spacious", 
            "spaciousness", "spareness", "spareribs", "sparseness", 
            "specialness", "species", "specious", "speciousness", "specs", 
            "spectacles", "speechless", "speechlessness", "speediness", 
            "spiciness", "spineless", "spinelessness", "spiritless", 
            "spirits", "spirituous", "spitefulness", "splinters", 
            "sponginess", "spontaneous", "spotless", "spotlessness", "spots", 
            "sprightliness", "springiness", "sprinkles", "sprites", 
            "spurious", "spuriousness", "spyglass", "squalidness", 
            "squareness", "squeamishness", "stacks", "staggers", "staidness", 
            "stainless", "stairs", "stakes", "staleness", "stalls", "stapes", 
            "staphylococcus", "starches", "starkness", "starless", "stasis", 
            "stateless", "stateliness", "statics", "statistics", "status", 
            "staunchness", "stays", "steadfastness", "steadiness", 
            "stealthiness", "steelworks", "steepness", "stegosaurus", 
            "stemless", "steps", "sternness", "stertorous", "stewardess", 
            "stickiness", "stiffness", "stillness", "stimulus", "stinginess", 
            "stocks", "stodginess", "stoneless", "stops", "storminess", 
            "stoutness", "straightforwardness", "straightness", "straits", 
            "strangeness", "strangles", "strapless", "strategics", "stratus", 
            "strenuous", "strenuousness", "streptococcus", "stress", 
            "strictness", "strings", "stripes", "stubbornness", "studious", 
            "studiousness", "stuffiness", "stupendous", "sturdiness", 
            "stylishness", "stylus", "subclass", "subconscious", 
            "subconsciousness", "subcutaneous", "submissiveness", 
            "subspecies", "subtropics", "subversiveness", "success", 
            "succinctness", "sucks", "suddenness", "suds", "sugarless", 
            "suitableness", "sulfurous", "sulkiness", "sullenness", 
            "sultriness", "summons", "sumptuous", "sumptuousness", "sundress",
             "sundries", "sunglasses", "sunless", "sunniness", "supercilious",
             "superciliousness", "superfluous", "supergrass", "superstitious",
             "suppleness", "suppress", "sureness", "surliness", "surpass", 
            "surplus", "surreptitious", "surroundings", "suspicious", 
            "sweatpants", "sweats", "sweepstakes", "sweetbreads", "sweetness",
             "swiftness", "syllabus", "symbiosis", "symptomless", 
            "synchronous", "synonymous", "synopsis", "synthesis", 
            "syphilis"}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "sacredness", "sacrilegious", "sadness", "safeness", "sagacious", 
            "saintliness", "salacious", "salaciousness", "sales", 
            "sallowness", "saltiness", "salubrious", "sameness", 
            "sanctimonious", "sanctimoniousness", "sandiness", "sands", 
            "saneness", "sans", "sapless", "sarcophagus", "sass", "sassafras",
             "sauciness", "savageness", "savings", "sawbones", "scabies", 
            "scabrous", "scads", "scaleless", "scaliness", "scandalous", 
            "scantiness", "scarceness", "scentless", "schnapps", "schooldays",
             "schoolmistress", "schuss", "scissors", "sclerosis", "scoliosis",
             "scoreless", "scores", "scours", "scraps", "scratchiness", 
            "scrofulous", "scrubs", "scrumptious", "scruples", "scrupulous", 
            "scrupulousness", "sculptress", "scurrilous", "seamless", 
            "seamstress", "seasickness", "seats", "seawards", "seaworthiness",
             "sebaceous", "secateurs", "second-guess", "secretiveness", 
            "sedateness", "seditious", "seductress", "sedulous", "seediness", 
            "seedless", "seemliness", "seems", "self-analysis", 
            "self-awareness", "self-conscious", "self-consciousness", 
            "selfishness", "selfless", "selflessness", "self-righteous", 
            "semantics", "semiconscious", "semidarkness", "semigloss", 
            "semiotics", "semiprecious", "sempstress", "senseless", 
            "senselessness", "sensibleness", "sensitiveness", "sensuous", 
            "sensuousness", "sententious", "separateness", "sepsis", 
            "serendipitous", "series", "serious", "seriousness", "serous", 
            "services", "sevens", "seventies", "shabbiness", "shades", 
            "shadiness", "shagginess", "shakiness", "shallowness", "shambles",
             "shamefulness", "shameless", "shamelessness", "shapeless", 
            "shapelessness", "shapeliness", "sharpness", "shears", 
            "sheepishness", "shekels", "shepherdess", "shiftiness", 
            "shiftless", "shiftlessness", "shingles", "shininess", 
            "shirtsleeves", "shoddiness", "shoeless", "shoes", "shortness", 
            "shorts", "shortsightedness", "showiness", "shrewdness", 
            "shrillness", "shucks", "shyness", "sickness", "sidewards", 
            "sideways", "sightedness", "sightless", "sights", "silents", 
            "siliceous", "silicosis", "silkiness", "silks", "silliness", 
            "simpleness", "simultaneous", "sinfulness", "single-mindedness", 
            "singleness", "singles", "sinless", "sinuous", "sinus", 
            "sinusitis", "sis", "sixties", "sketchiness", "skewness", 
            "skillfulness", "skinheads", "skinless", "skinniness", 
            "skittishness", "skittles", "skywards", "slackness", "slacks", 
            "slanderous", "sleaziness", "sleekness", "sleepiness", 
            "sleepless", "sleeplessness", "sleeveless", "slenderness", 
            "slews", "slickness", "slightness", "sliminess", "slimness", 
            "slipperiness", "sloppiness", "slops", "slothfulness", 
            "slovenliness", "slowness", "sluggishness", "slumberous", 
            "slyness", "smallness", "smartness", "smithereens", "smokeless", 
            "smoothness", "smugness", "sneakiness", "snips", "snobbishness", 
            "snuffers", "snugness", "soapsuds", "soberness", 
            "sociolinguistics", "softness", "sogginess", "solicitous", 
            "solicitousness", "solidness", "solidus", "solitariness", 
            "somberness", "sometimes", "songstress", "sonorous", 
            "sonorousness", "sops", "sorceress", "sordidness", "soreness", 
            "sorrowfulness", "soulfulness", "soulless", "soundless", 
            "soundness", "sourness", "sourpuss", "southwards", "spacious", 
            "spaciousness", "spareness", "spareribs", "sparseness", 
            "specialness", "species", "specious", "speciousness", "specs", 
            "spectacles", "speechless", "speechlessness", "speediness", 
            "spiciness", "spineless", "spinelessness", "spiritless", 
            "spirits", "spirituous", "spitefulness", "splinters", 
            "sponginess", "spontaneous", "spotless", "spotlessness", "spots", 
            "sprightliness", "springiness", "sprinkles", "sprites", 
            "spurious", "spuriousness", "spyglass", "squalidness", 
            "squareness", "squeamishness", "stacks", "staggers", "staidness", 
            "stainless", "stairs", "stakes", "staleness", "stalls", "stapes", 
            "staphylococcus", "starches", "starkness", "starless", "stasis", 
            "stateless", "stateliness", "statics", "statistics", "status", 
            "staunchness", "stays", "steadfastness", "steadiness", 
            "stealthiness", "steelworks", "steepness", "stegosaurus", 
            "stemless", "steps", "sternness", "stertorous", "stewardess", 
            "stickiness", "stiffness", "stillness", "stimulus", "stinginess", 
            "stocks", "stodginess", "stoneless", "stops", "storminess", 
            "stoutness", "straightforwardness", "straightness", "straits", 
            "strangeness", "strangles", "strapless", "strategics", "stratus", 
            "strenuous", "strenuousness", "streptococcus", "stress", 
            "strictness", "strings", "stripes", "stubbornness", "studious", 
            "studiousness", "stuffiness", "stupendous", "sturdiness", 
            "stylishness", "stylus", "subclass", "subconscious", 
            "subconsciousness", "subcutaneous", "submissiveness", 
            "subspecies", "subtropics", "subversiveness", "success", 
            "succinctness", "sucks", "suddenness", "suds", "sugarless", 
            "suitableness", "sulfurous", "sulkiness", "sullenness", 
            "sultriness", "summons", "sumptuous", "sumptuousness", "sundress",
             "sundries", "sunglasses", "sunless", "sunniness", "supercilious",
             "superciliousness", "superfluous", "supergrass", "superstitious",
             "suppleness", "suppress", "sureness", "surliness", "surpass", 
            "surplus", "surreptitious", "surroundings", "suspicious", 
            "sweatpants", "sweats", "sweepstakes", "sweetbreads", "sweetness",
             "swiftness", "syllabus", "symbiosis", "symptomless", 
            "synchronous", "synonymous", "synopsis", "synthesis", 
            "syphilis"}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0719686`6.007658052302328, "CPUTimeUsed" -> 0.07900000000000773, 
         "MemoryUsed" -> 319472, "Outcome" -> "Success"|>], 
      3939551624122117665 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.89481498520301*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "ca493a6d-9258-42ad-a724-2b21220773d6", "TestID" -> 
         "23648201-d024-415d-8a3d-d96f4c688b97", "TestFileName" -> "", 
         "EvaluationID" -> "4d31ba44-96c0-4636-8a09-468d746d995c", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["t", 
              BlankNullSequence[], "t"], "t"]]], "ExpectedOutput" -> 
         HoldForm[{
           "tablet", "tacit", "tact", "tailcoat", "taillight", "taint", 
            "takeout", "talent", "tangent", "tantamount", "tappet", "taproot",
             "target", "tarot", "tart", "tat", "taunt", "taut", "taxidermist",
             "taxonomist", "teapot", "teat", "technocrat", "technologist", 
            "telecast", "telegraphist", "telephonist", "televangelist", 
            "temperament", "tempest", "tempt", "tenant", "tenderfoot", 
            "tenement", "tenet", "tent", "termagant", "terrorist", "test", 
            "testament", "text", "that", "theft", "theist", "theorist", 
            "theosophist", "therapist", "thereabout", "thermostat", "thicket",
             "thickset", "thirst", "thought", "threat", "thrift", "throat", 
            "throughout", "throughput", "thrust", "thumbprint", "thunderbolt",
             "thwart", "ticket", "tidbit", "tight", "tilt", "timpanist", 
            "tinpot", "tint", "tippet", "toast", "tobacconist", "toilet", 
            "tolerant", "tomcat", "tomtit", "tonight", "toot", "topcoat", 
            "topknot", "topmast", "topmost", "torchlight", "torment", 
            "torrent", "tort", "tot", "tourist", "tournament", "tourniquet", 
            "tout", "towboat", "toxicologist", "tract", "traditionalist", 
            "trait", "transact", "transcendent", "transcendentalist", 
            "transcript", "transect", "transept", "transient", "transit", 
            "translucent", "transmit", "transparent", "transplant", 
            "transport", "transshipment", "treat", "treatment", "trenchant", 
            "trident", "trinket", "triplet", "trisect", "triumphant", 
            "trivalent", "trivet", "trombonist", "trot", "troubleshoot", 
            "trout", "truant", "truculent", "trumpet", "trust", "tryout", 
            "tryst", "tsarist", "tuft", "tugboat", "tumescent", "tumult", 
            "turbojet", "turbot", "turbulent", "turnabout", "turncoat", 
            "turnout", "turret", "tut", "tweet", "twilight", "twilit", 
            "twist", "typecast", "typescript", "typeset", "typist", 
            "tyrant"}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "tablet", "tacit", "tact", "tailcoat", "taillight", "taint", 
            "takeout", "talent", "tangent", "tantamount", "tappet", "taproot",
             "target", "tarot", "tart", "tat", "taunt", "taut", "taxidermist",
             "taxonomist", "teapot", "teat", "technocrat", "technologist", 
            "telecast", "telegraphist", "telephonist", "televangelist", 
            "temperament", "tempest", "tempt", "tenant", "tenderfoot", 
            "tenement", "tenet", "tent", "termagant", "terrorist", "test", 
            "testament", "text", "that", "theft", "theist", "theorist", 
            "theosophist", "therapist", "thereabout", "thermostat", "thicket",
             "thickset", "thirst", "thought", "threat", "thrift", "throat", 
            "throughout", "throughput", "thrust", "thumbprint", "thunderbolt",
             "thwart", "ticket", "tidbit", "tight", "tilt", "timpanist", 
            "tinpot", "tint", "tippet", "toast", "tobacconist", "toilet", 
            "tolerant", "tomcat", "tomtit", "tonight", "toot", "topcoat", 
            "topknot", "topmast", "topmost", "torchlight", "torment", 
            "torrent", "tort", "tot", "tourist", "tournament", "tourniquet", 
            "tout", "towboat", "toxicologist", "tract", "traditionalist", 
            "trait", "transact", "transcendent", "transcendentalist", 
            "transcript", "transect", "transept", "transient", "transit", 
            "translucent", "transmit", "transparent", "transplant", 
            "transport", "transshipment", "treat", "treatment", "trenchant", 
            "trident", "trinket", "triplet", "trisect", "triumphant", 
            "trivalent", "trivet", "trombonist", "trot", "troubleshoot", 
            "trout", "truant", "truculent", "trumpet", "trust", "tryout", 
            "tryst", "tsarist", "tuft", "tugboat", "tumescent", "tumult", 
            "turbojet", "turbot", "turbulent", "turnabout", "turncoat", 
            "turnout", "turret", "tut", "tweet", "twilight", "twilit", 
            "twist", "typecast", "typescript", "typeset", "typist", 
            "tyrant"}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0700325`5.9958146277759425, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 317552, "Outcome" -> "Success"|>], 
      207294804796983540 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149852700105`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "78c14cc5-be3f-41c1-b29c-a5fe12c71e5e", "TestID" -> 
         "065627b9-0c21-4f63-9fb7-b40811b2b0dc", "TestFileName" -> "", 
         "EvaluationID" -> "3b857d34-f3f7-4603-8bb9-b9f8644e3fcd", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["u", 
              BlankNullSequence[], "u"], "u"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0649677`5.963212489886113, "CPUTimeUsed" -> 0.06299999999998818, 
         "MemoryUsed" -> 316272, "Outcome" -> "Success"|>], 
      2523805874410557348 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149853380103`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "3a3aa690-eff8-4c3a-8815-d12d4bb56fe8", "TestID" -> 
         "a6745a96-3231-48de-950f-877cc9e5b771", "TestFileName" -> "", 
         "EvaluationID" -> "05f11502-8fd6-4543-be4c-25e5fa448e34", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["v", 
              BlankNullSequence[], "v"], "v"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0689998`5.989362829742833, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316272, "Outcome" -> "Success"|>], 
      3542320124356640233 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894814985403009*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "b9c5f965-1d11-4fb6-bac9-688b7403cbf2", "TestID" -> 
         "47632c15-39e0-498e-8adb-a0468b2c3383", "TestFileName" -> "", 
         "EvaluationID" -> "2f21a5d0-d3dc-451d-a39a-f3b983a2a6e7", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["w", 
              BlankNullSequence[], "w"], "w"]]], "ExpectedOutput" -> 
         HoldForm[{
           "wallow", "wheelbarrow", "whew", "whipsaw", "widow", "willow", 
            "window", "winnow", "withdraw", "wow"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "wallow", "wheelbarrow", "whew", "whipsaw", "widow", "willow", 
            "window", "winnow", "withdraw", "wow"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0675453`5.980110132758075, "CPUTimeUsed" -> 
         0.06200000000001182, "MemoryUsed" -> 316392, "Outcome" -> 
         "Success"|>], 1604962696265734189 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149854730086`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "52f458ea-19f5-4c2d-97bf-199348032839", "TestID" -> 
         "2030f6c9-1223-4098-8fdb-235171a4a1fa", "TestFileName" -> "", 
         "EvaluationID" -> "d8434837-be1d-4dae-8a52-95a949da0c96", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["x", 
              BlankNullSequence[], "x"], "x"]]], "ExpectedOutput" -> 
         HoldForm[{"xerox"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[{"xerox"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0690006`5.98936786502658, "CPUTimeUsed" -> 
         0.07799999999997453, "MemoryUsed" -> 316320, "Outcome" -> 
         "Success"|>], 9066418295964157671 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948149855390086`*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "c6d9863a-c1dd-4eb6-a01d-69331d0c7675", "TestID" -> 
         "ac79101f-f7be-42e2-9465-8045b3279b85", "TestFileName" -> "", 
         "EvaluationID" -> "5a7a7932-9a34-45e1-8467-b5ddce82a9b7", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["y", 
              BlankNullSequence[], "y"], "y"]]], "ExpectedOutput" -> 
         HoldForm[{
           "yearly", "yearningly", "yeasty", "yeomanry", "yesterday", 
            "youthfully", "yucky", "yummy"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "yearly", "yearningly", "yeasty", "yeomanry", "yesterday", 
            "youthfully", "yucky", "yummy"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0720002`6.007848700635142, "CPUTimeUsed" -> 
         0.0630000000000166, "MemoryUsed" -> 316376, "Outcome" -> 
         "Success"|>], 6891001948135344657 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894814985605012*^9, 
         "SameTest" -> SameQ, "SameMessages" -> Testing`MessageMatchQ, 
         "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
         DirectedInfinity[1], "CreationID" -> 
         "6464a902-153d-4191-a075-62de16c277e3", "TestID" -> 
         "8fc600fd-b907-4c13-93d0-0eedd0a9cf51", "TestFileName" -> "", 
         "EvaluationID" -> "6fa8894b-dc02-444f-b6a1-65ceee884f09", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            Alternatives[
             StringExpression["z", 
              BlankNullSequence[], "z"], "z"]]], "ExpectedOutput" -> 
         HoldForm[{}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0730282`6.014005594109459, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316272, "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {}, "TestsFailedWithMessagesKeys" -> {}, 
    "TestsFailedWithErrorsKeys" -> {}, 
    "TestsSucceededKeys" -> {8637948836429095778, 7030188495849432436, 
     7817378965442041327, 315213161107385227, 5891855242991415957, 
     7636629680652859342, 6655656790479570493, 5336846157401562665, 
     9039367527385296228, 8160050284090485560, 6545121992845681690, 
     3942417062669217328, 7607543890206396316, 3627176750127731731, 
     1285417813365074004, 825502745164472569, 4179814942758071226, 
     1894751290778237880, 5515491987338331631, 3939551624122117665, 
     207294804796983540, 2523805874410557348, 3542320124356640233, 
     1604962696265734189, 9066418295964157671, 6891001948135344657}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8948143393577185`*^9, 3.894815001514103*^9},
 CellLabel->"Out[140]=",
 CellID->126480760,ExpressionUUID->"f3a8092a-154d-429a-a9a5-9b2feecb050e"]
}, Open  ]],

Cell["\<\
Note that the function does not work when the parentheses are left out:\
\>", "ExampleText",
 CellChangeTimes->{{3.8948143624448767`*^9, 3.8948143742993965`*^9}},
 CellID->792129208,ExpressionUUID->"fe40101d-fcb1-40f5-9944-c4c2fd797bcd"],

Cell[BoxData[{
 RowBox[{"MyAlternativeTestFunction", "//", 
  "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyAlternativeTestFunction", "[", 
   RowBox[{"input_", "?", "StringQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"TestCreate", "[", 
    RowBox[{
     RowBox[{"WordListLookup", "[", 
      RowBox[{"input", "~~", "___", "~~", 
       RowBox[{"input", "|", "input"}]}], "]"}], ",", 
     RowBox[{"SameStartEndWords", "[", "input", "]"}], ",", 
     RowBox[{"TestID", "->", "Automatic"}]}], "]"}], "/;", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"Alphabet", "[", "]"}], ",", "input"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.894814382022973*^9, 3.8948143962972913`*^9}, {
  3.8948148282497225`*^9, 3.89481482886841*^9}},
 CellLabel->"In[141]:=",
 CellID->148476170,ExpressionUUID->"9ffe9799-64ed-4fb0-ae85-655584c211a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlternativeTestReport", "=", 
  RowBox[{"TestReport", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"MyAlternativeTestFunction", "[", "letter", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"letter", ",", 
        RowBox[{"Alphabet", "[", "\"\<English\>\"", "]"}]}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"SameTest", "->", "ContainsExactly"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.894814406887008*^9, 3.894814433484027*^9}, {
  3.8948148330920677`*^9, 3.894814841497034*^9}},
 CellLabel->"In[143]:=",
 CellID->831193740,ExpressionUUID->"efc797fd-c683-436b-aaa9-9b37215dc0c0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                  Center, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"96.15%\"", ShowStringCharacters -> False], 
                    0.9615384615384616, AutoDelete -> True], PercentForm], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                  Center, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Tests count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["26", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    StyleBox["\"96.15%\"", ShowStringCharacters -> False], 
                    0.9615384615384616, AutoDelete -> True], PercentForm], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["25", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"Failed with wrong results: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Time elapsed: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "3.0907782`6.225609490261811", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[<|
   "Title" -> Automatic, "Aborted" -> False, 
    "TestResults" -> <|
     5870464352408122024 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150127294703`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "7ce4eb61-3b9a-43c9-8069-ffdc5a4d8b12", "TestID" -> 
         "9bd293c2-4051-4942-9d24-e30dd9534b90", "TestFileName" -> "", 
         "EvaluationID" -> "668c894b-12bd-40a8-a2c0-a9a4cec68d92", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["a", 
             BlankNullSequence[], 
             Alternatives["a", "a"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia",
             "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
            "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
            "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda",
             "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
            "angelica", "angina", "angostura", "anorexia", "antenna", "aorta",
             "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
            "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
            "aspidistra", "asthma", "ataxia", "aura", "aurora", "azalea"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "abracadabra", "abscissa", "acacia", "academia", "acrophobia", 
            "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
            "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
            "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda",
             "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
            "angelica", "angina", "angostura", "anorexia", "antenna", "aorta",
             "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
            "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
            "aspidistra", "asthma", "ataxia", "aura", "aurora", "azalea"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.068999`5.989357794400706, "CPUTimeUsed" -> 0.0619999999999834, 
         "MemoryUsed" -> 316712, "Outcome" -> "Failure"|>], 
      6905909283932701286 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150127994685`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "f708313b-474b-4661-a3d7-8797e52f4c35", "TestID" -> 
         "9098105c-78a2-46c9-829d-37aa955853d1", "TestFileName" -> "", 
         "EvaluationID" -> "6d12d65c-8196-40ad-a741-1ce92de4c227", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["b", 
             BlankNullSequence[], 
             Alternatives["b", "b"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "baobab", "barb", "bathtub", "benumb", "bib", "blab", "blob", 
            "blurb", "bob", "bomb", "breadcrumb", "brewpub", "bulb"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "baobab", "barb", "bathtub", "benumb", "bib", "blab", "blob", 
            "blurb", "bob", "bomb", "breadcrumb", "brewpub", "bulb"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0700008`5.99561800118339, "CPUTimeUsed" -> 0.07900000000000773, 
         "MemoryUsed" -> 316392, "Outcome" -> "Success"|>], 
      5498168132910633050 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894815012871046*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "1b75c6af-db58-4a81-ad69-0d1779b5d895", "TestID" -> 
         "171f6b89-8493-4176-b9d7-500b9087ec56", "TestFileName" -> "", 
         "EvaluationID" -> "f7a35f83-84e3-4f81-a80a-081572418806", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["c", 
             BlankNullSequence[], 
             Alternatives["c", "c"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "calisthenic", "calligraphic", "caloric", "calorific", "cambric", 
            "cannibalistic", "capitalistic", "carbonic", "carcinogenic", 
            "cardiac", "cartographic", "casuistic", "cataclysmic", 
            "cataleptic", "catalytic", "catastrophic", "catatonic", 
            "cathartic", "cathodic", "catholic", "cationic", "caustic", 
            "celeriac", "cenobitic", "centric", "cephalic", "ceramic", 
            "chaotic", "charabanc", "characteristic", "charismatic", 
            "chauvinistic", "chemotherapeutic", "cherubic", "chic", 
            "chimeric", "chiropractic", "chivalric", "choc", "choleric", 
            "choreographic", "chromatic", "chromatographic", "chronic", 
            "cinematic", "citric", "civic", "classic", "claustrophobic", 
            "cleric", "climacteric", "climactic", "climatic", "clinic", 
            "colic", "colonic", "colorimetric", "comic", "communistic", 
            "concentric", "conic", "copacetic", "cosmetic", "cosmic", 
            "critic", "cryogenic", "cryptanalytic", "cryptic", 
            "cryptographic", "cubic", "cupric", "cybernetic", "cyclic", 
            "cyclonic", "cynic", "cystic", "cytoplasmic", "cytotoxic"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "calisthenic", "calligraphic", "caloric", "calorific", "cambric", 
            "cannibalistic", "capitalistic", "carbonic", "carcinogenic", 
            "cardiac", "cartographic", "casuistic", "cataclysmic", 
            "cataleptic", "catalytic", "catastrophic", "catatonic", 
            "cathartic", "cathodic", "catholic", "cationic", "caustic", 
            "celeriac", "cenobitic", "centric", "cephalic", "ceramic", 
            "chaotic", "charabanc", "characteristic", "charismatic", 
            "chauvinistic", "chemotherapeutic", "cherubic", "chic", 
            "chimeric", "chiropractic", "chivalric", "choc", "choleric", 
            "choreographic", "chromatic", "chromatographic", "chronic", 
            "cinematic", "citric", "civic", "classic", "claustrophobic", 
            "cleric", "climacteric", "climactic", "climatic", "clinic", 
            "colic", "colonic", "colorimetric", "comic", "communistic", 
            "concentric", "conic", "copacetic", "cosmetic", "cosmic", 
            "critic", "cryogenic", "cryptanalytic", "cryptic", 
            "cryptographic", "cubic", "cupric", "cybernetic", "cyclic", 
            "cyclonic", "cynic", "cystic", "cytoplasmic", "cytotoxic"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0686077`5.9868878581429295, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 316920, "Outcome" -> "Success"|>], 
      7257690951375376240 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150129430447`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "faa1f929-80ef-4c1a-9766-e9a4180c1bef", "TestID" -> 
         "83bffd2e-ae27-48f7-8020-cc18dfff8f48", "TestFileName" -> "", 
         "EvaluationID" -> "9e4db386-fe31-49c3-89e9-d05a18ab230a", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["d", 
             BlankNullSequence[], 
             Alternatives["d", "d"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "dabbled", "dachshund", "dad", "dairymaid", "damaged", "dandified",
             "dappled", "darkened", "dartboard", "dashboard", "dashed", 
            "dastard", "dated", "daunted", "daybed", "dazed", "dazzled", 
            "dead", "dead-end", "deadened", "deadhead", "deadlocked", 
            "deadwood", "deafened", "deathbed", "debased", "debauched", 
            "debilitated", "decapitated", "decayed", "deceased", 
            "decentralized", "decided", "deciphered", "deckhand", "declared", 
            "declassified", "decorated", "decreased", "decreed", "dedicated", 
            "deed", "defeated", "defend", "defiled", "defined", "deflated", 
            "defoliated", "deformed", "defraud", "degraded", "dehumanized", 
            "dehydrated", "dejected", "delayed", "delighted", "delimited", 
            "delineated", "demand", "demented", "demigod", "demolished", 
            "demonstrated", "demoralized", "denatured", "dented", "denuded", 
            "departed", "depend", "depicted", "depleted", "depopulated", 
            "depraved", "depressed", "deprived", "deranged", "derived", 
            "descend", "described", "desecrated", "deserted", "deserved", 
            "desiccated", "designed", "desired", "despised", "despoiled", 
            "despond", "destined", "destroyed", "detached", "detailed", 
            "detected", "determined", "detested", "devalued", "developed", 
            "devoid", "devoted", "diamond", "dictated", "did", 
            "differentiated", "diffused", "dignified", "dilapidated", 
            "diluted", "diminished", "dimmed", "diploid", "dipped", 
            "directed", "disabled", "disabused", "disadvantaged", 
            "disaffected", "disappointed", "disarranged", "disarrayed", 
            "disband", "discard", "discarded", "discharged", "disciplined", 
            "disclosed", "discombobulated", "discomfited", "discomposed", 
            "disconcerted", "disconnected", "discontented", "discontinued", 
            "discord", "discouraged", "discovered", "discredited", "diseased",
             "disembodied", "disenchanted", "disenfranchised", "disentangled",
             "disfigured", "disfranchised", "disgraced", "disgruntled", 
            "disguised", "disgusted", "disheartened", "dished", "disheveled", 
            "dishonored", "disillusioned", "disinclined", "disinherited", 
            "disinterested", "disjointed", "disliked", "dislocated", 
            "dismantled", "dismayed", "dismissed", "disordered", 
            "disorganized", "disoriented", "dispensed", "dispersed", 
            "dispirited", "displeased", "disposed", "dispossessed", 
            "disputed", "disqualified", "disquieted", "disregard", 
            "disregarded", "disrupted", "dissatisfied", "dissected", 
            "dissipated", "dissolved", "distend", "distinguished", 
            "distorted", "distracted", "distressed", "distributed", 
            "disturbed", "disunited", "disused", "diversified", "diverted", 
            "divided", "dividend", "divorced", "dockyard", "documented", 
            "dogged", "dogsled", "dogwood", "domed", "domesticated", 
            "dominated", "doodad", "doomed", "dooryard", "doped", "dosed", 
            "dotard", "dotted", "doubled", "dowered", "downhearted", 
            "download", "downward", "downwind", "drainboard", "drained", 
            "draped", "dread", "dreaded", "dreamed", "dreamland", 
            "dreamworld", "drenched", "dressed", "dried", "driftwood", 
            "drilled", "drugged", "drunkard", "dryad", "duckweed", "dud", 
            "dullard", "dulled", "dumbfound", "dumbfounded", "dyad", "dyed"}],
          "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "dabbled", "dachshund", "dad", "dairymaid", "damaged", "dandified",
             "dappled", "darkened", "dartboard", "dashboard", "dashed", 
            "dastard", "dated", "daunted", "daybed", "dazed", "dazzled", 
            "dead", "dead-end", "deadened", "deadhead", "deadlocked", 
            "deadwood", "deafened", "deathbed", "debased", "debauched", 
            "debilitated", "decapitated", "decayed", "deceased", 
            "decentralized", "decided", "deciphered", "deckhand", "declared", 
            "declassified", "decorated", "decreased", "decreed", "dedicated", 
            "deed", "defeated", "defend", "defiled", "defined", "deflated", 
            "defoliated", "deformed", "defraud", "degraded", "dehumanized", 
            "dehydrated", "dejected", "delayed", "delighted", "delimited", 
            "delineated", "demand", "demented", "demigod", "demolished", 
            "demonstrated", "demoralized", "denatured", "dented", "denuded", 
            "departed", "depend", "depicted", "depleted", "depopulated", 
            "depraved", "depressed", "deprived", "deranged", "derived", 
            "descend", "described", "desecrated", "deserted", "deserved", 
            "desiccated", "designed", "desired", "despised", "despoiled", 
            "despond", "destined", "destroyed", "detached", "detailed", 
            "detected", "determined", "detested", "devalued", "developed", 
            "devoid", "devoted", "diamond", "dictated", "did", 
            "differentiated", "diffused", "dignified", "dilapidated", 
            "diluted", "diminished", "dimmed", "diploid", "dipped", 
            "directed", "disabled", "disabused", "disadvantaged", 
            "disaffected", "disappointed", "disarranged", "disarrayed", 
            "disband", "discard", "discarded", "discharged", "disciplined", 
            "disclosed", "discombobulated", "discomfited", "discomposed", 
            "disconcerted", "disconnected", "discontented", "discontinued", 
            "discord", "discouraged", "discovered", "discredited", "diseased",
             "disembodied", "disenchanted", "disenfranchised", "disentangled",
             "disfigured", "disfranchised", "disgraced", "disgruntled", 
            "disguised", "disgusted", "disheartened", "dished", "disheveled", 
            "dishonored", "disillusioned", "disinclined", "disinherited", 
            "disinterested", "disjointed", "disliked", "dislocated", 
            "dismantled", "dismayed", "dismissed", "disordered", 
            "disorganized", "disoriented", "dispensed", "dispersed", 
            "dispirited", "displeased", "disposed", "dispossessed", 
            "disputed", "disqualified", "disquieted", "disregard", 
            "disregarded", "disrupted", "dissatisfied", "dissected", 
            "dissipated", "dissolved", "distend", "distinguished", 
            "distorted", "distracted", "distressed", "distributed", 
            "disturbed", "disunited", "disused", "diversified", "diverted", 
            "divided", "dividend", "divorced", "dockyard", "documented", 
            "dogged", "dogsled", "dogwood", "domed", "domesticated", 
            "dominated", "doodad", "doomed", "dooryard", "doped", "dosed", 
            "dotard", "dotted", "doubled", "dowered", "downhearted", 
            "download", "downward", "downwind", "drainboard", "drained", 
            "draped", "dread", "dreaded", "dreamed", "dreamland", 
            "dreamworld", "drenched", "dressed", "dried", "driftwood", 
            "drilled", "drugged", "drunkard", "dryad", "duckweed", "dud", 
            "dullard", "dulled", "dumbfound", "dumbfounded", "dyad", "dyed"}],
          "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         1.2020925`7.230452885377184, "CPUTimeUsed" -> 0.09399999999999409, 
         "MemoryUsed" -> 20528, "Outcome" -> "Success"|>], 
      2876662158707503319 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894815013014045*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "7597c6db-591a-4628-a831-f57fce5b42a8", "TestID" -> 
         "e379a66d-6d65-432e-8a29-1831a2adb1e1", "TestFileName" -> "", 
         "EvaluationID" -> "838fa10f-b195-46eb-be0d-0963e78f731d", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["e", 
             BlankNullSequence[], 
             Alternatives["e", "e"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "eagle", "earache", "earlobe", "earphone", "earpiece", 
            "earthenware", "earthquake", "ease", "eatable", "ebullience", 
            "eclipse", "eclogue", "economize", "edge", "edgewise", "edible", 
            "edifice", "editorialize", "educate", "educative", "educe", 
            "eerie", "efface", "effective", "effectuate", "effeminate", 
            "effervesce", "effervescence", "effete", "efflorescence", 
            "effluence", "effulgence", "effuse", "effusive", "eglantine", 
            "eigenvalue", "eightpence", "elaborate", "elapse", "elate", 
            "elective", "electorate", "electrocute", "electrode", 
            "electrolyte", "electromotive", "electronegative", "electroplate",
             "electroscope", "elegance", "elephantine", "elevate", "elide", 
            "eligible", "eliminate", "elite", "ellipse", "elongate", "elope", 
            "eloquence", "else", "elsewhere", "elucidate", "elude", "elusive",
             "emaciate", "emanate", "emancipate", "emasculate", "embezzle", 
            "embouchure", "embrace", "embrasure", "emcee", "emerge", 
            "emergence", "emigrate", "emigre", "eminence", "emirate", "emote",
             "emotive", "empathize", "emphasize", "empire", "employable", 
            "employee", "emulate", "enable", "enamelware", "encapsulate", 
            "encase", "encircle", "enclave", "enclose", "enclosure", "encode",
             "encore", "encourage", "encumbrance", "endgame", "endive", 
            "endocrine", "endorse", "endoscope", "endue", "endurable", 
            "endurance", "endure", "energize", "enervate", "enfeeble", 
            "enfilade", "enforce", "enforceable", "enfranchise", "engage", 
            "engine", "engorge", "engrave", "enhance", "enjoyable", "enlarge",
             "enlistee", "ennoble", "enrage", "enrapture", "ensconce", 
            "ensemble", "enshrine", "ensilage", "enslave", "ensnare", "ensue",
             "ensure", "entangle", "entente", "enterprise", "enthrone", 
            "enthuse", "entice", "entire", "entitle", "entourage", 
            "entr'acte", "entrance", "entree", "entwine", "enumerable", 
            "enumerate", "enunciate", "envelope", "enviable", "envisage", 
            "enzyme", "epee", "ephedrine", "epicure", "epilogue", 
            "epinephrine", "episcopate", "episode", "epistle", "epitome", 
            "epitomize", "equable", "equalize", "equate", "equine", 
            "equipage", "equipoise", "equitable", "equivalence", "equivocate",
             "eradicable", "eradicate", "erasable", "erase", "erasure", "ere",
             "erectile", "eremite", "ermine", "erode", "erosive", "erstwhile",
             "erudite", "eruptive", "erythrocyte", "escalate", "escapade", 
            "escape", "escapee", "escarole", "escritoire", "espionage", 
            "esplanade", "espouse", "esquire", "essence", "estate", 
            "estimable", "estimate", "estrange", "estuarine", "ethane", 
            "ethylene", "etiquette", "etude", "euchre", "eukaryote", 
            "eulogize", "evacuate", "evacuee", "evade", "evaluate", 
            "evaluative", "evanescence", "evangelize", "evaporate", "evasive",
             "eve", "eventide", "eventuate", "evermore", "everyone", 
            "everyplace", "everywhere", "evidence", "evince", "eviscerate", 
            "evocative", "evoke", "evolve", "ewe", "exacerbate", "exactitude",
             "exaggerate", "examine", "example", "exasperate", "excavate", 
            "excellence", "exceptionable", "excessive", "exchange", 
            "exchangeable", "excise", "excitable", "excite", "exclude", 
            "exclusive", "excommunicate", "excoriate", "excrescence", 
            "excrete", "exculpate", "excursive", "excusable", "excuse", 
            "execrable", "execrate", "executable", "execute", "executive", 
            "exercise", "exfoliate", "exhale", "exhaustible", "exhaustive", 
            "exhilarate", "exhume", "exile", "existence", "exocrine", 
            "exonerate", "exorbitance", "exorcise", "exosphere", "expandable",
             "expanse", "expansible", "expansive", "expatiate", "expatriate", 
            "expectorate", "expedience", "expedite", "expendable", 
            "expenditure", "expense", "expensive", "experience", "expertise", 
            "expiate", "expire", "explainable", "expletive", "explicable", 
            "explicate", "explode", "exploitative", "explore", "explosive", 
            "exportable", "expose", "expostulate", "exposure", "expressible", 
            "expressive", "expropriate", "expunge", "expurgate", "exquisite", 
            "extempore", "extemporize", "extensible", "extensive", 
            "extenuate", "exterminate", "externalize", "extinguishable", 
            "extirpate", "extortionate", "extractable", "extradite", 
            "extraordinaire", "extrapolate", "extravagance", "extreme", 
            "extricate", "extrude", "extrusive", "exuberance", "exudate", 
            "exude", "eye", "eyepiece", "eyesore"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "eagle", "earache", "earlobe", "earphone", "earpiece", 
            "earthenware", "earthquake", "ease", "eatable", "ebullience", 
            "eclipse", "eclogue", "economize", "edge", "edgewise", "edible", 
            "edifice", "editorialize", "educate", "educative", "educe", 
            "eerie", "efface", "effective", "effectuate", "effeminate", 
            "effervesce", "effervescence", "effete", "efflorescence", 
            "effluence", "effulgence", "effuse", "effusive", "eglantine", 
            "eigenvalue", "eightpence", "elaborate", "elapse", "elate", 
            "elective", "electorate", "electrocute", "electrode", 
            "electrolyte", "electromotive", "electronegative", "electroplate",
             "electroscope", "elegance", "elephantine", "elevate", "elide", 
            "eligible", "eliminate", "elite", "ellipse", "elongate", "elope", 
            "eloquence", "else", "elsewhere", "elucidate", "elude", "elusive",
             "emaciate", "emanate", "emancipate", "emasculate", "embezzle", 
            "embouchure", "embrace", "embrasure", "emcee", "emerge", 
            "emergence", "emigrate", "emigre", "eminence", "emirate", "emote",
             "emotive", "empathize", "emphasize", "empire", "employable", 
            "employee", "emulate", "enable", "enamelware", "encapsulate", 
            "encase", "encircle", "enclave", "enclose", "enclosure", "encode",
             "encore", "encourage", "encumbrance", "endgame", "endive", 
            "endocrine", "endorse", "endoscope", "endue", "endurable", 
            "endurance", "endure", "energize", "enervate", "enfeeble", 
            "enfilade", "enforce", "enforceable", "enfranchise", "engage", 
            "engine", "engorge", "engrave", "enhance", "enjoyable", "enlarge",
             "enlistee", "ennoble", "enrage", "enrapture", "ensconce", 
            "ensemble", "enshrine", "ensilage", "enslave", "ensnare", "ensue",
             "ensure", "entangle", "entente", "enterprise", "enthrone", 
            "enthuse", "entice", "entire", "entitle", "entourage", 
            "entr'acte", "entrance", "entree", "entwine", "enumerable", 
            "enumerate", "enunciate", "envelope", "enviable", "envisage", 
            "enzyme", "epee", "ephedrine", "epicure", "epilogue", 
            "epinephrine", "episcopate", "episode", "epistle", "epitome", 
            "epitomize", "equable", "equalize", "equate", "equine", 
            "equipage", "equipoise", "equitable", "equivalence", "equivocate",
             "eradicable", "eradicate", "erasable", "erase", "erasure", "ere",
             "erectile", "eremite", "ermine", "erode", "erosive", "erstwhile",
             "erudite", "eruptive", "erythrocyte", "escalate", "escapade", 
            "escape", "escapee", "escarole", "escritoire", "espionage", 
            "esplanade", "espouse", "esquire", "essence", "estate", 
            "estimable", "estimate", "estrange", "estuarine", "ethane", 
            "ethylene", "etiquette", "etude", "euchre", "eukaryote", 
            "eulogize", "evacuate", "evacuee", "evade", "evaluate", 
            "evaluative", "evanescence", "evangelize", "evaporate", "evasive",
             "eve", "eventide", "eventuate", "evermore", "everyone", 
            "everyplace", "everywhere", "evidence", "evince", "eviscerate", 
            "evocative", "evoke", "evolve", "ewe", "exacerbate", "exactitude",
             "exaggerate", "examine", "example", "exasperate", "excavate", 
            "excellence", "exceptionable", "excessive", "exchange", 
            "exchangeable", "excise", "excitable", "excite", "exclude", 
            "exclusive", "excommunicate", "excoriate", "excrescence", 
            "excrete", "exculpate", "excursive", "excusable", "excuse", 
            "execrable", "execrate", "executable", "execute", "executive", 
            "exercise", "exfoliate", "exhale", "exhaustible", "exhaustive", 
            "exhilarate", "exhume", "exile", "existence", "exocrine", 
            "exonerate", "exorbitance", "exorcise", "exosphere", "expandable",
             "expanse", "expansible", "expansive", "expatiate", "expatriate", 
            "expectorate", "expedience", "expedite", "expendable", 
            "expenditure", "expense", "expensive", "experience", "expertise", 
            "expiate", "expire", "explainable", "expletive", "explicable", 
            "explicate", "explode", "exploitative", "explore", "explosive", 
            "exportable", "expose", "expostulate", "exposure", "expressible", 
            "expressive", "expropriate", "expunge", "expurgate", "exquisite", 
            "extempore", "extemporize", "extensible", "extensive", 
            "extenuate", "exterminate", "externalize", "extinguishable", 
            "extirpate", "extortionate", "extractable", "extradite", 
            "extraordinaire", "extrapolate", "extravagance", "extreme", 
            "extricate", "extrude", "extrusive", "exuberance", "exudate", 
            "exude", "eye", "eyepiece", "eyesore"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.1059992`6.175817585390186, "CPUTimeUsed" -> 
         0.10900000000000887`, "MemoryUsed" -> 11192, "Outcome" -> 
         "Success"|>], 3618101457577776399 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894815013082192*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "fa41b10d-9d1b-42c2-b145-9f630ee8936e", "TestID" -> 
         "1d51c766-c8df-487d-a3f4-072bd938887f", "TestFileName" -> "", 
         "EvaluationID" -> "c90fb6fe-92ba-4b60-99f1-e05cd81b13c6", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["f", 
             BlankNullSequence[], 
             Alternatives["f", "f"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "falloff", "far-off", "fief", "fireproof", "flagstaff", 
            "flameproof", "fluff", "flyleaf", "foodstuff", "foolproof"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "falloff", "far-off", "fief", "fireproof", "flagstaff", 
            "flameproof", "fluff", "flyleaf", "foodstuff", "foolproof"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0740013`6.0197543469936035, "CPUTimeUsed" -> 0.06299999999998818, 
         "MemoryUsed" -> 316368, "Outcome" -> "Success"|>], 
      7998616038470880698 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150131510797`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "5382ba89-a4e0-4510-a509-e1b2c789fbad", "TestID" -> 
         "8dfafa0c-0374-4925-b590-1dc1e8833ec8", "TestFileName" -> "", 
         "EvaluationID" -> "b7f3346c-a0d9-4f52-b35a-6aac8811a8b0", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["g", 
             BlankNullSequence[], 
             Alternatives["g", "g"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "gag", "galling", "galvanizing", "gambling", "gaming", "gang", 
            "gangling", "gaping", "gardening", "gasbag", "gassing", 
            "gathering", "gearing", "gelding", "gesticulating", "getting", 
            "gig", "gilding", "ginseng", "giving", "glaring", "gleaming", 
            "gliding", "glimmering", "glinting", "glistening", "glistering", 
            "glittering", "gloaming", "gloating", "glowering", "glowing", 
            "goading", "going", "goldbricking", "golfing", "gong", "gosling", 
            "gossiping", "governing", "grading", "grafting", "grappling", 
            "grasping", "gratifying", "grating", "grazing", "greening", 
            "greeting", "grieving", "grilling", "grinding", "grinning", 
            "griping", "gripping", "grog", "grooming", "grooving", "groping", 
            "groundbreaking", "groundhog", "grounding", "grouping", 
            "groveling", "growing", "growling", "grudging", "grueling", 
            "grumbling", "guessing", "guiding", "gulag", "gulping", "gumming",
             "gunrunning", "gushing", "guzzling"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "gag", "galling", "galvanizing", "gambling", "gaming", "gang", 
            "gangling", "gaping", "gardening", "gasbag", "gassing", 
            "gathering", "gearing", "gelding", "gesticulating", "getting", 
            "gig", "gilding", "ginseng", "giving", "glaring", "gleaming", 
            "gliding", "glimmering", "glinting", "glistening", "glistering", 
            "glittering", "gloaming", "gloating", "glowering", "glowing", 
            "goading", "going", "goldbricking", "golfing", "gong", "gosling", 
            "gossiping", "governing", "grading", "grafting", "grappling", 
            "grasping", "gratifying", "grating", "grazing", "greening", 
            "greeting", "grieving", "grilling", "grinding", "grinning", 
            "griping", "gripping", "grog", "grooming", "grooving", "groping", 
            "groundbreaking", "groundhog", "grounding", "grouping", 
            "groveling", "growing", "growling", "grudging", "grueling", 
            "grumbling", "guessing", "guiding", "gulag", "gulping", "gumming",
             "gunrunning", "gushing", "guzzling"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0809987`6.058993046496352, "CPUTimeUsed" -> 
         0.07800000000000296, "MemoryUsed" -> 316920, "Outcome" -> 
         "Success"|>], 7397610916449766572 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150132240453`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "47a8eb59-eed3-4622-ba32-cc29886aab98", "TestID" -> 
         "27f10520-766d-4a9a-90da-b2359c6556fc", "TestFileName" -> "", 
         "EvaluationID" -> "1afa19f7-4a5a-43e4-95ad-9233903b1ccd", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["h", 
             BlankNullSequence[], 
             Alternatives["h", "h"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "hairbrush", "haircloth", "hairsbreadth", "hallelujah", 
            "hand-to-mouth", "harsh", "hash", "hashish", "hatch", "haunch", 
            "hawkish", "health", "hearth", "heath", "heathenish", "hemstitch",
             "henceforth", "herewith", "hieroglyph", "high", "high-tech", 
            "hitch", "hi-tech", "hoggish", "hogwash", "holograph", 
            "homeopath", "homestretch", "homograph", "hooch", "hookah", 
            "hopscotch", "horseflesh", "horselaugh", "horseradish", 
            "hotchpotch", "howdah", "hoydenish", "huh", "humph", "hunch", 
            "hundredth", "hush", "hutch", "huzzah", "hyacinth"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "hairbrush", "haircloth", "hairsbreadth", "hallelujah", 
            "hand-to-mouth", "harsh", "hash", "hashish", "hatch", "haunch", 
            "hawkish", "health", "hearth", "heath", "heathenish", "hemstitch",
             "henceforth", "herewith", "hieroglyph", "high", "high-tech", 
            "hitch", "hi-tech", "hoggish", "hogwash", "holograph", 
            "homeopath", "homestretch", "homograph", "hooch", "hookah", 
            "hopscotch", "horseflesh", "horselaugh", "horseradish", 
            "hotchpotch", "howdah", "hoydenish", "huh", "humph", "hunch", 
            "hundredth", "hush", "hutch", "huzzah", "hyacinth"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0780376`6.042818902291216, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316664, "Outcome" -> "Success"|>], 
      8344816341863014118 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894815013294045*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "148dbc1b-f994-4859-9e83-149acf618cb0", "TestID" -> 
         "ce0218d3-426d-435d-8bfe-c1dd55406a22", "TestFileName" -> "", 
         "EvaluationID" -> "f754a2cd-e40d-4521-84b3-410a0e7611cc", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["i", 
             BlankNullSequence[], 
             Alternatives["i", "i"]]]], "ExpectedOutput" -> HoldForm[{}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0749614`6.025352686792245, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316248, "Outcome" -> "Success"|>], 
      2153494685819119248 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894815013361045*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "a323697e-d1fc-415e-8d15-8f94cf1cce18", "TestID" -> 
         "62372a6f-2fac-4b57-a942-f22421460ef1", "TestFileName" -> "", 
         "EvaluationID" -> "27cbbe1c-c3f7-4367-981d-6649ad7ed469", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["j", 
             BlankNullSequence[], 
             Alternatives["j", "j"]]]], "ExpectedOutput" -> HoldForm[{}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0840011`6.074799971046276, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 2336, "Outcome" -> "Success"|>], 3044552111937510254 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150134270806`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "73089d1b-e626-4910-8e91-f8784390e8c9", "TestID" -> 
         "d6ebb35e-9cc6-481f-9c7a-03a40be8e47b", "TestFileName" -> "", 
         "EvaluationID" -> "6ada5779-4c75-4661-9928-ca6f55146a7e", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["k", 
             BlankNullSequence[], 
             Alternatives["k", "k"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "kapok", "kayak", "kick", "kickback", "kinfolk", "kink", 
            "kinsfolk", "kiosk", "kirk", "knack", "knapsack", "knickknack", 
            "knock", "kook", "kopeck"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> 
         HoldForm[{
           "kapok", "kayak", "kick", "kickback", "kinfolk", "kink", 
            "kinsfolk", "kiosk", "kirk", "knack", "knapsack", "knickknack", 
            "knock", "kook", "kopeck"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0769989`6.036999518753269, "CPUTimeUsed" -> 
         0.07799999999997453, "MemoryUsed" -> 316408, "Outcome" -> 
         "Success"|>], 1628613841386749126 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150134920793`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "92633e2e-c6f6-4726-a429-ffd3665bc1b3", "TestID" -> 
         "950e5fe9-8c1a-4af9-89df-5571d28e5aa0", "TestFileName" -> "", 
         "EvaluationID" -> "79a510de-c366-4b76-b9cf-104d258e4e5b", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["l", 
             BlankNullSequence[], 
             Alternatives["l", "l"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "label", "labial", "lachrymal", "lackadaisical", "lacteal", 
            "landfall", "landfill", "lapel", "larval", "laryngeal", "lateral",
             "latitudinal", "laurel", "lawful", "legal", "lentil", "lethal", 
            "level", "lexical", "lexicographical", "libel", "liberal", 
            "libidinal", "lineal", "lingual", "lintel", "literal", "littoral",
             "liturgical", "local", "logical", "logistical", "loll", 
            "longitudinal", "loyal", "lugsail", "lull", "lustful", 
            "lyrical"}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "label", "labial", "lachrymal", "lackadaisical", "lacteal", 
            "landfall", "landfill", "lapel", "larval", "laryngeal", "lateral",
             "latitudinal", "laurel", "lawful", "legal", "lentil", "lethal", 
            "level", "lexical", "lexicographical", "libel", "liberal", 
            "libidinal", "lineal", "lingual", "lintel", "literal", "littoral",
             "liturgical", "local", "logical", "logistical", "loll", 
            "longitudinal", "loyal", "lugsail", "lull", "lustful", 
            "lyrical"}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.072`6.007847494263255, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316600, "Outcome" -> "Success"|>], 
      6111903748028772881 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150135570445`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "afc36357-9351-4085-9671-38725a9e359b", "TestID" -> 
         "f85d457f-de55-4d77-9565-2d76fb129383", "TestFileName" -> "", 
         "EvaluationID" -> "90f4528a-7f0c-4038-96f9-da34d839a6bb", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["m", 
             BlankNullSequence[], 
             Alternatives["m", "m"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "ma'am", "macadam", "macrocosm", "madam", "maelstrom", "magnesium",
             "magnetism", "magnum", "maim", "mainstream", "malapropism", 
            "mammogram", "mannerism", "marjoram", "martyrdom", "materialism", 
            "mausoleum", "maxim", "maximum", "mayhem", "mechanism", "medium", 
            "meerschaum", "memorandum", "mendelevium", "mercantilism", 
            "mesmerism", "metabolism", "metamorphism", "microcosm", 
            "microfilm", "microorganism", "midstream", "midterm", 
            "militarism", "millennium", "milligram", "minim", "minimalism", 
            "minimum", "misinform", "modem", "modernism", "modicum", 
            "molybdenum", "mom", "momentum", "monarchism", "monasticism", 
            "monetarism", "mongolism", "monism", "monogram", "monotheism", 
            "moonbeam", "moratorium", "multiculturalism", "multiform", "mum", 
            "museum", "mushroom", "mysticism"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "ma'am", "macadam", "macrocosm", "madam", "maelstrom", "magnesium",
             "magnetism", "magnum", "maim", "mainstream", "malapropism", 
            "mammogram", "mannerism", "marjoram", "martyrdom", "materialism", 
            "mausoleum", "maxim", "maximum", "mayhem", "mechanism", "medium", 
            "meerschaum", "memorandum", "mendelevium", "mercantilism", 
            "mesmerism", "metabolism", "metamorphism", "microcosm", 
            "microfilm", "microorganism", "midstream", "midterm", 
            "militarism", "millennium", "milligram", "minim", "minimalism", 
            "minimum", "misinform", "modem", "modernism", "modicum", 
            "molybdenum", "mom", "momentum", "monarchism", "monasticism", 
            "monetarism", "mongolism", "monism", "monogram", "monotheism", 
            "moonbeam", "moratorium", "multiculturalism", "multiform", "mum", 
            "museum", "mushroom", "mysticism"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0709995`6.001770288128449, "CPUTimeUsed" -> 
         0.0630000000000166, "MemoryUsed" -> 316792, "Outcome" -> 
         "Success"|>], 3971585116634270286 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150136350455`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "5fe7a20b-fb9e-4737-bec4-931b8073b099", "TestID" -> 
         "67a66269-fa66-4620-b492-8ec514c0caa0", "TestFileName" -> "", 
         "EvaluationID" -> "e90bf52f-d167-4327-b8f4-9a3e571dec75", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["n", 
             BlankNullSequence[], 
             Alternatives["n", "n"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "nan", "napkin", "napoleon", "narration", "nasalization", "nation",
             "nationalization", "naturalization", "navigation", "neaten", 
            "needlewoman", "negation", "negotiation", "nelson", "neon", 
            "neuron", "neurosurgeon", "neutralization", "neutron", "newborn", 
            "newsman", "newspaperman", "newspaperwoman", "newswoman", 
            "newton", "niacin", "nickelodeon", "nightgown", "ninepin", 
            "nineteen", "nitrification", "nitrogen", "nitroglycerin", 
            "nobleman", "noblewoman", "noggin", "nomination", "non", 
            "nonagenarian", "nonaggression", "nonfiction", "nonhuman", 
            "nonintervention", "nonpartisan", "nonperson", "nonprescription", 
            "nonproliferation", "nonsectarian", "nonunion", "noon", 
            "normalization", "northeastern", "northern", "northwestern", 
            "notation", "notification", "notion", "noun", "novelization", 
            "nubbin", "nucleon", "nullification", "numeration", "nun", 
            "nurseryman", "nutation", "nutrition", "nylon"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "nan", "napkin", "napoleon", "narration", "nasalization", "nation",
             "nationalization", "naturalization", "navigation", "neaten", 
            "needlewoman", "negation", "negotiation", "nelson", "neon", 
            "neuron", "neurosurgeon", "neutralization", "neutron", "newborn", 
            "newsman", "newspaperman", "newspaperwoman", "newswoman", 
            "newton", "niacin", "nickelodeon", "nightgown", "ninepin", 
            "nineteen", "nitrification", "nitrogen", "nitroglycerin", 
            "nobleman", "noblewoman", "noggin", "nomination", "non", 
            "nonagenarian", "nonaggression", "nonfiction", "nonhuman", 
            "nonintervention", "nonpartisan", "nonperson", "nonprescription", 
            "nonproliferation", "nonsectarian", "nonunion", "noon", 
            "normalization", "northeastern", "northern", "northwestern", 
            "notation", "notification", "notion", "noun", "novelization", 
            "nubbin", "nucleon", "nullification", "numeration", "nun", 
            "nurseryman", "nutation", "nutrition", "nylon"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0709993`6.001769064753374, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316856, "Outcome" -> "Success"|>], 
      4275688898865658382 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150137090454`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "393d8c53-404f-4d6d-b4ea-c4e72ddeea12", "TestID" -> 
         "f6627e2f-9936-4423-af49-92245fc7716a", "TestFileName" -> "", 
         "EvaluationID" -> "d884f951-d52c-4a01-9fe9-7ad5fcb0caed", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["o", 
             BlankNullSequence[], 
             Alternatives["o", "o"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "obbligato", "octavo", "oho", "oleo", "onto", "oratorio", 
            "oregano", "orzo", "outdo", "outgo", "ouzo", "overdo"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "obbligato", "octavo", "oho", "oleo", "onto", "oratorio", 
            "oregano", "orzo", "outdo", "outgo", "ouzo", "overdo"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0750325`6.025764414735527, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316384, "Outcome" -> "Success"|>], 
      3682355906240398753 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150137780447`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "bd760208-8c76-41cf-994f-4c6781b3e769", "TestID" -> 
         "bd97faed-938d-4220-8d5a-ab7e13f10058", "TestFileName" -> "", 
         "EvaluationID" -> "78b7993f-ce5b-4707-a716-a236b6d4da06", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["p", 
             BlankNullSequence[], 
             Alternatives["p", "p"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "pap", "paperclip", "parsnip", "partisanship", "partnership", 
            "pawnshop", "peep", "penmanship", "pep", "pickup", "pileup", 
            "pip", "plop", "plump", "polyp", "pomp", "pop", "premiership", 
            "prep", "primp", "professorship", "prop", "proprietorship", 
            "pulp", "pump", "pup"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> 
         HoldForm[{
           "pap", "paperclip", "parsnip", "partisanship", "partnership", 
            "pawnshop", "peep", "penmanship", "pep", "pickup", "pileup", 
            "pip", "plop", "plump", "polyp", "pomp", "pop", "premiership", 
            "prep", "primp", "professorship", "prop", "proprietorship", 
            "pulp", "pump", "pup"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0949983`6.128230831465833, "CPUTimeUsed" -> 
         0.09399999999999409, "MemoryUsed" -> 2600, "Outcome" -> "Success"|>],
       1633114634031186815 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894815013843044*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "d2d096a1-c99a-48ce-bbe2-0ee9715e3315", "TestID" -> 
         "8e8e9a2d-ce59-4a32-8b9c-8bf0c1e74b72", "TestFileName" -> "", 
         "EvaluationID" -> "aedd7351-8ef1-424c-9d11-1a8f6729a9be", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["q", 
             BlankNullSequence[], 
             Alternatives["q", "q"]]]], "ExpectedOutput" -> HoldForm[{}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0709983`6.0017629478262995, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 316248, "Outcome" -> "Success"|>], 
      9192968736215559580 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894815013908045*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "f60ab96a-e172-4a53-bd6a-e7a7e5f0188c", "TestID" -> 
         "50ccfae3-1eb4-4ac4-b946-e8718c90a248", "TestFileName" -> "", 
         "EvaluationID" -> "6ef8f1cb-d7f7-4cd0-848d-6d957c90083f", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["r", 
             BlankNullSequence[], 
             Alternatives["r", "r"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "racer", "racketeer", "raconteur", "radar", "radiator", 
            "radiographer", "radiometer", "rafter", "raider", "railroader", 
            "rainmaker", "rainwater", "raiser", "rambler", "rancher", 
            "rancor", "rangefinder", "ranger", "ranker", "ranter", "rapier", 
            "rapper", "rapporteur", "raptor", "rasher", "raster", "ratepayer",
             "rather", "rathskeller", "ratifier", "ratter", "rattler", 
            "raver", "ravisher", "razor", "reactor", "reader", "reamer", 
            "reaper", "reappear", "rear", "reasoner", "receiver", "receptor", 
            "reciter", "reckoner", "recliner", "reconnoiter", "reconquer", 
            "reconsider", "recorder", "recover", "recruiter", "rectangular", 
            "rectifier", "rectilinear", "rector", "recur", "redactor", 
            "redeemer", "rediscover", "reducer", "refer", "refiner", 
            "reflector", "reformer", "refresher", "refrigerator", "refuter", 
            "register", "registrar", "regular", "regulator", "rehear", 
            "reindeer", "rejoinder", "relaxer", "reliever", "remainder", 
            "remember", "reminder", "remover", "render", "renovator", 
            "renter", "reorder", "repair", "repairer", "repeater", "reporter",
             "reproducer", "requester", "rescuer", "researcher", "reservoir", 
            "resister", "resistor", "resonator", "respecter", "respirator", 
            "responder", "restaurateur", "restorer", "restrainer", 
            "resuscitator", "retailer", "retainer", "reticular", "retriever", 
            "reveler", "reviewer", "reviser", "revolver", "rhymer", 
            "rhymester", "ricer", "rider", "rigger", "rigor", "ringer", 
            "ringleader", "ringmaster", "rioter", "ripper", "riser", "river", 
            "riveter", "roadrunner", "roadster", "roamer", "roar", "roarer", 
            "roaster", "robber", "rocker", "roisterer", "roller", "rollover", 
            "romper", "roofer", "roomer", "rooster", "rooter", "roper", 
            "roster", "rotor", "rotter", "rounder", "router", "rover", 
            "rower", "rubber", "rudder", "rugger", "ruler", "rummer", "rumor",
             "runner", "rusher", "rustler"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "racer", "racketeer", "raconteur", "radar", "radiator", 
            "radiographer", "radiometer", "rafter", "raider", "railroader", 
            "rainmaker", "rainwater", "raiser", "rambler", "rancher", 
            "rancor", "rangefinder", "ranger", "ranker", "ranter", "rapier", 
            "rapper", "rapporteur", "raptor", "rasher", "raster", "ratepayer",
             "rather", "rathskeller", "ratifier", "ratter", "rattler", 
            "raver", "ravisher", "razor", "reactor", "reader", "reamer", 
            "reaper", "reappear", "rear", "reasoner", "receiver", "receptor", 
            "reciter", "reckoner", "recliner", "reconnoiter", "reconquer", 
            "reconsider", "recorder", "recover", "recruiter", "rectangular", 
            "rectifier", "rectilinear", "rector", "recur", "redactor", 
            "redeemer", "rediscover", "reducer", "refer", "refiner", 
            "reflector", "reformer", "refresher", "refrigerator", "refuter", 
            "register", "registrar", "regular", "regulator", "rehear", 
            "reindeer", "rejoinder", "relaxer", "reliever", "remainder", 
            "remember", "reminder", "remover", "render", "renovator", 
            "renter", "reorder", "repair", "repairer", "repeater", "reporter",
             "reproducer", "requester", "rescuer", "researcher", "reservoir", 
            "resister", "resistor", "resonator", "respecter", "respirator", 
            "responder", "restaurateur", "restorer", "restrainer", 
            "resuscitator", "retailer", "retainer", "reticular", "retriever", 
            "reveler", "reviewer", "reviser", "revolver", "rhymer", 
            "rhymester", "ricer", "rider", "rigger", "rigor", "ringer", 
            "ringleader", "ringmaster", "rioter", "ripper", "riser", "river", 
            "riveter", "roadrunner", "roadster", "roamer", "roar", "roarer", 
            "roaster", "robber", "rocker", "roisterer", "roller", "rollover", 
            "romper", "roofer", "roomer", "rooster", "rooter", "roper", 
            "roster", "rotor", "rotter", "rounder", "router", "rover", 
            "rower", "rubber", "rudder", "rugger", "ruler", "rummer", "rumor",
             "runner", "rusher", "rustler"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0709957`6.00174704341269, "CPUTimeUsed" -> 
         0.06299999999998818, "MemoryUsed" -> 317592, "Outcome" -> 
         "Success"|>], 1135106655411126263 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894815013977045*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "d5a0b1fd-364a-4dd0-892d-e80441d04935", "TestID" -> 
         "858ef871-3fdb-4081-9d16-747167f304b8", "TestFileName" -> "", 
         "EvaluationID" -> "ae9229b3-b832-4f46-ade2-ddc286c6a39c", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["s", 
             BlankNullSequence[], 
             Alternatives["s", "s"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "sacredness", "sacrilegious", "sadness", "safeness", "sagacious", 
            "saintliness", "salacious", "salaciousness", "sales", 
            "sallowness", "saltiness", "salubrious", "sameness", 
            "sanctimonious", "sanctimoniousness", "sandiness", "sands", 
            "saneness", "sans", "sapless", "sarcophagus", "sass", "sassafras",
             "sauciness", "savageness", "savings", "sawbones", "scabies", 
            "scabrous", "scads", "scaleless", "scaliness", "scandalous", 
            "scantiness", "scarceness", "scentless", "schnapps", "schooldays",
             "schoolmistress", "schuss", "scissors", "sclerosis", "scoliosis",
             "scoreless", "scores", "scours", "scraps", "scratchiness", 
            "scrofulous", "scrubs", "scrumptious", "scruples", "scrupulous", 
            "scrupulousness", "sculptress", "scurrilous", "seamless", 
            "seamstress", "seasickness", "seats", "seawards", "seaworthiness",
             "sebaceous", "secateurs", "second-guess", "secretiveness", 
            "sedateness", "seditious", "seductress", "sedulous", "seediness", 
            "seedless", "seemliness", "seems", "self-analysis", 
            "self-awareness", "self-conscious", "self-consciousness", 
            "selfishness", "selfless", "selflessness", "self-righteous", 
            "semantics", "semiconscious", "semidarkness", "semigloss", 
            "semiotics", "semiprecious", "sempstress", "senseless", 
            "senselessness", "sensibleness", "sensitiveness", "sensuous", 
            "sensuousness", "sententious", "separateness", "sepsis", 
            "serendipitous", "series", "serious", "seriousness", "serous", 
            "services", "sevens", "seventies", "shabbiness", "shades", 
            "shadiness", "shagginess", "shakiness", "shallowness", "shambles",
             "shamefulness", "shameless", "shamelessness", "shapeless", 
            "shapelessness", "shapeliness", "sharpness", "shears", 
            "sheepishness", "shekels", "shepherdess", "shiftiness", 
            "shiftless", "shiftlessness", "shingles", "shininess", 
            "shirtsleeves", "shoddiness", "shoeless", "shoes", "shortness", 
            "shorts", "shortsightedness", "showiness", "shrewdness", 
            "shrillness", "shucks", "shyness", "sickness", "sidewards", 
            "sideways", "sightedness", "sightless", "sights", "silents", 
            "siliceous", "silicosis", "silkiness", "silks", "silliness", 
            "simpleness", "simultaneous", "sinfulness", "single-mindedness", 
            "singleness", "singles", "sinless", "sinuous", "sinus", 
            "sinusitis", "sis", "sixties", "sketchiness", "skewness", 
            "skillfulness", "skinheads", "skinless", "skinniness", 
            "skittishness", "skittles", "skywards", "slackness", "slacks", 
            "slanderous", "sleaziness", "sleekness", "sleepiness", 
            "sleepless", "sleeplessness", "sleeveless", "slenderness", 
            "slews", "slickness", "slightness", "sliminess", "slimness", 
            "slipperiness", "sloppiness", "slops", "slothfulness", 
            "slovenliness", "slowness", "sluggishness", "slumberous", 
            "slyness", "smallness", "smartness", "smithereens", "smokeless", 
            "smoothness", "smugness", "sneakiness", "snips", "snobbishness", 
            "snuffers", "snugness", "soapsuds", "soberness", 
            "sociolinguistics", "softness", "sogginess", "solicitous", 
            "solicitousness", "solidness", "solidus", "solitariness", 
            "somberness", "sometimes", "songstress", "sonorous", 
            "sonorousness", "sops", "sorceress", "sordidness", "soreness", 
            "sorrowfulness", "soulfulness", "soulless", "soundless", 
            "soundness", "sourness", "sourpuss", "southwards", "spacious", 
            "spaciousness", "spareness", "spareribs", "sparseness", 
            "specialness", "species", "specious", "speciousness", "specs", 
            "spectacles", "speechless", "speechlessness", "speediness", 
            "spiciness", "spineless", "spinelessness", "spiritless", 
            "spirits", "spirituous", "spitefulness", "splinters", 
            "sponginess", "spontaneous", "spotless", "spotlessness", "spots", 
            "sprightliness", "springiness", "sprinkles", "sprites", 
            "spurious", "spuriousness", "spyglass", "squalidness", 
            "squareness", "squeamishness", "stacks", "staggers", "staidness", 
            "stainless", "stairs", "stakes", "staleness", "stalls", "stapes", 
            "staphylococcus", "starches", "starkness", "starless", "stasis", 
            "stateless", "stateliness", "statics", "statistics", "status", 
            "staunchness", "stays", "steadfastness", "steadiness", 
            "stealthiness", "steelworks", "steepness", "stegosaurus", 
            "stemless", "steps", "sternness", "stertorous", "stewardess", 
            "stickiness", "stiffness", "stillness", "stimulus", "stinginess", 
            "stocks", "stodginess", "stoneless", "stops", "storminess", 
            "stoutness", "straightforwardness", "straightness", "straits", 
            "strangeness", "strangles", "strapless", "strategics", "stratus", 
            "strenuous", "strenuousness", "streptococcus", "stress", 
            "strictness", "strings", "stripes", "stubbornness", "studious", 
            "studiousness", "stuffiness", "stupendous", "sturdiness", 
            "stylishness", "stylus", "subclass", "subconscious", 
            "subconsciousness", "subcutaneous", "submissiveness", 
            "subspecies", "subtropics", "subversiveness", "success", 
            "succinctness", "sucks", "suddenness", "suds", "sugarless", 
            "suitableness", "sulfurous", "sulkiness", "sullenness", 
            "sultriness", "summons", "sumptuous", "sumptuousness", "sundress",
             "sundries", "sunglasses", "sunless", "sunniness", "supercilious",
             "superciliousness", "superfluous", "supergrass", "superstitious",
             "suppleness", "suppress", "sureness", "surliness", "surpass", 
            "surplus", "surreptitious", "surroundings", "suspicious", 
            "sweatpants", "sweats", "sweepstakes", "sweetbreads", "sweetness",
             "swiftness", "syllabus", "symbiosis", "symptomless", 
            "synchronous", "synonymous", "synopsis", "synthesis", 
            "syphilis"}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "sacredness", "sacrilegious", "sadness", "safeness", "sagacious", 
            "saintliness", "salacious", "salaciousness", "sales", 
            "sallowness", "saltiness", "salubrious", "sameness", 
            "sanctimonious", "sanctimoniousness", "sandiness", "sands", 
            "saneness", "sans", "sapless", "sarcophagus", "sass", "sassafras",
             "sauciness", "savageness", "savings", "sawbones", "scabies", 
            "scabrous", "scads", "scaleless", "scaliness", "scandalous", 
            "scantiness", "scarceness", "scentless", "schnapps", "schooldays",
             "schoolmistress", "schuss", "scissors", "sclerosis", "scoliosis",
             "scoreless", "scores", "scours", "scraps", "scratchiness", 
            "scrofulous", "scrubs", "scrumptious", "scruples", "scrupulous", 
            "scrupulousness", "sculptress", "scurrilous", "seamless", 
            "seamstress", "seasickness", "seats", "seawards", "seaworthiness",
             "sebaceous", "secateurs", "second-guess", "secretiveness", 
            "sedateness", "seditious", "seductress", "sedulous", "seediness", 
            "seedless", "seemliness", "seems", "self-analysis", 
            "self-awareness", "self-conscious", "self-consciousness", 
            "selfishness", "selfless", "selflessness", "self-righteous", 
            "semantics", "semiconscious", "semidarkness", "semigloss", 
            "semiotics", "semiprecious", "sempstress", "senseless", 
            "senselessness", "sensibleness", "sensitiveness", "sensuous", 
            "sensuousness", "sententious", "separateness", "sepsis", 
            "serendipitous", "series", "serious", "seriousness", "serous", 
            "services", "sevens", "seventies", "shabbiness", "shades", 
            "shadiness", "shagginess", "shakiness", "shallowness", "shambles",
             "shamefulness", "shameless", "shamelessness", "shapeless", 
            "shapelessness", "shapeliness", "sharpness", "shears", 
            "sheepishness", "shekels", "shepherdess", "shiftiness", 
            "shiftless", "shiftlessness", "shingles", "shininess", 
            "shirtsleeves", "shoddiness", "shoeless", "shoes", "shortness", 
            "shorts", "shortsightedness", "showiness", "shrewdness", 
            "shrillness", "shucks", "shyness", "sickness", "sidewards", 
            "sideways", "sightedness", "sightless", "sights", "silents", 
            "siliceous", "silicosis", "silkiness", "silks", "silliness", 
            "simpleness", "simultaneous", "sinfulness", "single-mindedness", 
            "singleness", "singles", "sinless", "sinuous", "sinus", 
            "sinusitis", "sis", "sixties", "sketchiness", "skewness", 
            "skillfulness", "skinheads", "skinless", "skinniness", 
            "skittishness", "skittles", "skywards", "slackness", "slacks", 
            "slanderous", "sleaziness", "sleekness", "sleepiness", 
            "sleepless", "sleeplessness", "sleeveless", "slenderness", 
            "slews", "slickness", "slightness", "sliminess", "slimness", 
            "slipperiness", "sloppiness", "slops", "slothfulness", 
            "slovenliness", "slowness", "sluggishness", "slumberous", 
            "slyness", "smallness", "smartness", "smithereens", "smokeless", 
            "smoothness", "smugness", "sneakiness", "snips", "snobbishness", 
            "snuffers", "snugness", "soapsuds", "soberness", 
            "sociolinguistics", "softness", "sogginess", "solicitous", 
            "solicitousness", "solidness", "solidus", "solitariness", 
            "somberness", "sometimes", "songstress", "sonorous", 
            "sonorousness", "sops", "sorceress", "sordidness", "soreness", 
            "sorrowfulness", "soulfulness", "soulless", "soundless", 
            "soundness", "sourness", "sourpuss", "southwards", "spacious", 
            "spaciousness", "spareness", "spareribs", "sparseness", 
            "specialness", "species", "specious", "speciousness", "specs", 
            "spectacles", "speechless", "speechlessness", "speediness", 
            "spiciness", "spineless", "spinelessness", "spiritless", 
            "spirits", "spirituous", "spitefulness", "splinters", 
            "sponginess", "spontaneous", "spotless", "spotlessness", "spots", 
            "sprightliness", "springiness", "sprinkles", "sprites", 
            "spurious", "spuriousness", "spyglass", "squalidness", 
            "squareness", "squeamishness", "stacks", "staggers", "staidness", 
            "stainless", "stairs", "stakes", "staleness", "stalls", "stapes", 
            "staphylococcus", "starches", "starkness", "starless", "stasis", 
            "stateless", "stateliness", "statics", "statistics", "status", 
            "staunchness", "stays", "steadfastness", "steadiness", 
            "stealthiness", "steelworks", "steepness", "stegosaurus", 
            "stemless", "steps", "sternness", "stertorous", "stewardess", 
            "stickiness", "stiffness", "stillness", "stimulus", "stinginess", 
            "stocks", "stodginess", "stoneless", "stops", "storminess", 
            "stoutness", "straightforwardness", "straightness", "straits", 
            "strangeness", "strangles", "strapless", "strategics", "stratus", 
            "strenuous", "strenuousness", "streptococcus", "stress", 
            "strictness", "strings", "stripes", "stubbornness", "studious", 
            "studiousness", "stuffiness", "stupendous", "sturdiness", 
            "stylishness", "stylus", "subclass", "subconscious", 
            "subconsciousness", "subcutaneous", "submissiveness", 
            "subspecies", "subtropics", "subversiveness", "success", 
            "succinctness", "sucks", "suddenness", "suds", "sugarless", 
            "suitableness", "sulfurous", "sulkiness", "sullenness", 
            "sultriness", "summons", "sumptuous", "sumptuousness", "sundress",
             "sundries", "sunglasses", "sunless", "sunniness", "supercilious",
             "superciliousness", "superfluous", "supergrass", "superstitious",
             "suppleness", "suppress", "sureness", "surliness", "surpass", 
            "surplus", "surreptitious", "surroundings", "suspicious", 
            "sweatpants", "sweats", "sweepstakes", "sweetbreads", "sweetness",
             "swiftness", "syllabus", "symbiosis", "symptomless", 
            "synchronous", "synonymous", "synopsis", "synthesis", 
            "syphilis"}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0720008`6.0078523197306914, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 319448, "Outcome" -> "Success"|>], 
      6245562272652519625 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894815014042045*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "dc2bb1a4-0874-4f87-b76e-06de56264851", "TestID" -> 
         "7ff1f606-4f98-4ecb-be17-76b177423a4d", "TestFileName" -> "", 
         "EvaluationID" -> "21e36a0e-637d-4b1d-b77d-c83f0009b08c", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["t", 
             BlankNullSequence[], 
             Alternatives["t", "t"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "tablet", "tacit", "tact", "tailcoat", "taillight", "taint", 
            "takeout", "talent", "tangent", "tantamount", "tappet", "taproot",
             "target", "tarot", "tart", "tat", "taunt", "taut", "taxidermist",
             "taxonomist", "teapot", "teat", "technocrat", "technologist", 
            "telecast", "telegraphist", "telephonist", "televangelist", 
            "temperament", "tempest", "tempt", "tenant", "tenderfoot", 
            "tenement", "tenet", "tent", "termagant", "terrorist", "test", 
            "testament", "text", "that", "theft", "theist", "theorist", 
            "theosophist", "therapist", "thereabout", "thermostat", "thicket",
             "thickset", "thirst", "thought", "threat", "thrift", "throat", 
            "throughout", "throughput", "thrust", "thumbprint", "thunderbolt",
             "thwart", "ticket", "tidbit", "tight", "tilt", "timpanist", 
            "tinpot", "tint", "tippet", "toast", "tobacconist", "toilet", 
            "tolerant", "tomcat", "tomtit", "tonight", "toot", "topcoat", 
            "topknot", "topmast", "topmost", "torchlight", "torment", 
            "torrent", "tort", "tot", "tourist", "tournament", "tourniquet", 
            "tout", "towboat", "toxicologist", "tract", "traditionalist", 
            "trait", "transact", "transcendent", "transcendentalist", 
            "transcript", "transect", "transept", "transient", "transit", 
            "translucent", "transmit", "transparent", "transplant", 
            "transport", "transshipment", "treat", "treatment", "trenchant", 
            "trident", "trinket", "triplet", "trisect", "triumphant", 
            "trivalent", "trivet", "trombonist", "trot", "troubleshoot", 
            "trout", "truant", "truculent", "trumpet", "trust", "tryout", 
            "tryst", "tsarist", "tuft", "tugboat", "tumescent", "tumult", 
            "turbojet", "turbot", "turbulent", "turnabout", "turncoat", 
            "turnout", "turret", "tut", "tweet", "twilight", "twilit", 
            "twist", "typecast", "typescript", "typeset", "typist", 
            "tyrant"}], "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "tablet", "tacit", "tact", "tailcoat", "taillight", "taint", 
            "takeout", "talent", "tangent", "tantamount", "tappet", "taproot",
             "target", "tarot", "tart", "tat", "taunt", "taut", "taxidermist",
             "taxonomist", "teapot", "teat", "technocrat", "technologist", 
            "telecast", "telegraphist", "telephonist", "televangelist", 
            "temperament", "tempest", "tempt", "tenant", "tenderfoot", 
            "tenement", "tenet", "tent", "termagant", "terrorist", "test", 
            "testament", "text", "that", "theft", "theist", "theorist", 
            "theosophist", "therapist", "thereabout", "thermostat", "thicket",
             "thickset", "thirst", "thought", "threat", "thrift", "throat", 
            "throughout", "throughput", "thrust", "thumbprint", "thunderbolt",
             "thwart", "ticket", "tidbit", "tight", "tilt", "timpanist", 
            "tinpot", "tint", "tippet", "toast", "tobacconist", "toilet", 
            "tolerant", "tomcat", "tomtit", "tonight", "toot", "topcoat", 
            "topknot", "topmast", "topmost", "torchlight", "torment", 
            "torrent", "tort", "tot", "tourist", "tournament", "tourniquet", 
            "tout", "towboat", "toxicologist", "tract", "traditionalist", 
            "trait", "transact", "transcendent", "transcendentalist", 
            "transcript", "transect", "transept", "transient", "transit", 
            "translucent", "transmit", "transparent", "transplant", 
            "transport", "transshipment", "treat", "treatment", "trenchant", 
            "trident", "trinket", "triplet", "trisect", "triumphant", 
            "trivalent", "trivet", "trombonist", "trot", "troubleshoot", 
            "trout", "truant", "truculent", "trumpet", "trust", "tryout", 
            "tryst", "tsarist", "tuft", "tugboat", "tumescent", "tumult", 
            "turbojet", "turbot", "turbulent", "turnabout", "turncoat", 
            "turnout", "turret", "tut", "tweet", "twilight", "twilit", 
            "twist", "typecast", "typescript", "typeset", "typist", 
            "tyrant"}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0690002`5.989365347392004, "CPUTimeUsed" -> 0.06200000000001182, 
         "MemoryUsed" -> 317528, "Outcome" -> "Success"|>], 
      1677866068586115521 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150141070447`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "85fc79e5-2e65-45ec-b416-78850b4e427e", "TestID" -> 
         "f8fe73cf-eb02-49cf-880b-974aa426ac77", "TestFileName" -> "", 
         "EvaluationID" -> "ce911df7-3296-4c83-9993-c54d8ecf7f0a", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["u", 
             BlankNullSequence[], 
             Alternatives["u", "u"]]]], "ExpectedOutput" -> HoldForm[{}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0709999`6.001772734868263, "CPUTimeUsed" -> 0.07799999999997453, 
         "MemoryUsed" -> 316248, "Outcome" -> "Success"|>], 
      270716121874098492 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150141720457`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "b5cf3e02-7001-49c0-be85-b2060fcef928", "TestID" -> 
         "865a2eb6-7e3d-46ae-a16b-14fcb905fcfa", "TestFileName" -> "", 
         "EvaluationID" -> "abf921dc-ff58-43e0-abd7-6d9d5523b358", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["v", 
             BlankNullSequence[], 
             Alternatives["v", "v"]]]], "ExpectedOutput" -> HoldForm[{}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.0840374`6.074987605307928, "CPUTimeUsed" -> 0.07800000000000296, 
         "MemoryUsed" -> 2336, "Outcome" -> "Success"|>], 972260430117039782 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150142380447`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "c312b6d8-f1ae-4ef6-a449-8d9841dfb38c", "TestID" -> 
         "0daa9216-c2d5-4a24-87ec-5a8e609b51c9", "TestFileName" -> "", 
         "EvaluationID" -> "4bff27d7-cbab-41b4-bbf7-79f682c34a92", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["w", 
             BlankNullSequence[], 
             Alternatives["w", "w"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "wallow", "wheelbarrow", "whew", "whipsaw", "widow", "willow", 
            "window", "winnow", "withdraw", "wow"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "wallow", "wheelbarrow", "whew", "whipsaw", "widow", "willow", 
            "window", "winnow", "withdraw", "wow"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0700001`5.99561365826649, "CPUTimeUsed" -> 
         0.07900000000000773, "MemoryUsed" -> 316368, "Outcome" -> 
         "Success"|>], 5342487481078484401 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.894815014302062*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "9ac20e76-353b-4281-9d30-0b6a541aaea7", "TestID" -> 
         "d60b0d8b-ee0c-472b-89d0-69d976443dd6", "TestFileName" -> "", 
         "EvaluationID" -> "c3b59718-5e57-4f9a-8237-2c513aacfa1c", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["x", 
             BlankNullSequence[], 
             Alternatives["x", "x"]]]], "ExpectedOutput" -> 
         HoldForm[{"xerox"}], "ExpectedMessages" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[{"xerox"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0680002`5.983025187873056, "CPUTimeUsed" -> 
         0.06200000000001182, "MemoryUsed" -> 316296, "Outcome" -> 
         "Success"|>], 6441995616051760503 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150143655934`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "e1435b98-9750-4905-8bd4-5d68b0d13837", "TestID" -> 
         "4c6d0052-1c11-4a54-8a89-624ca437c930", "TestFileName" -> "", 
         "EvaluationID" -> "1c2a9c67-83bf-4bc4-a55d-1fb06122d771", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["y", 
             BlankNullSequence[], 
             Alternatives["y", "y"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "yearly", "yearningly", "yeasty", "yeomanry", "yesterday", 
            "youthfully", "yucky", "yummy"}], "ExpectedMessages" -> 
         HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "yearly", "yearningly", "yeasty", "yeomanry", "yesterday", 
            "youthfully", "yucky", "yummy"}], "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 0.0719988`6.007840255961572, "CPUTimeUsed" -> 
         0.07800000000000296, "MemoryUsed" -> 316352, "Outcome" -> 
         "Success"|>], 972280651678100484 -> 
      TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150144266148`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "782e1e0c-1ba6-4065-86b7-60206da7b9cc", "TestID" -> 
         "bbd1dd15-cb24-459b-a844-ffab8df927f3", "TestFileName" -> "", 
         "EvaluationID" -> "a64d5399-0119-43a2-86af-a082f26c7503", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["z", 
             BlankNullSequence[], 
             Alternatives["z", "z"]]]], "ExpectedOutput" -> HoldForm[{}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> HoldForm[{}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.074019`6.019858211292842, "CPUTimeUsed" -> 0.06299999999998818, 
         "MemoryUsed" -> 316248, "Outcome" -> "Success"|>]|>, 
    "FailureResults" -> <||>, "TestsNotEvaluatedKeys" -> {}, 
    "TestsFailedWithMessagesKeys" -> {}, "TestsFailedWithErrorsKeys" -> {}, 
    "TestsFailedWrongResultsKeys" -> {5870464352408122024}, 
    "TestsSucceededKeys" -> {6905909283932701286, 5498168132910633050, 
     7257690951375376240, 2876662158707503319, 3618101457577776399, 
     7998616038470880698, 7397610916449766572, 8344816341863014118, 
     2153494685819119248, 3044552111937510254, 1628613841386749126, 
     6111903748028772881, 3971585116634270286, 4275688898865658382, 
     3682355906240398753, 1633114634031186815, 9192968736215559580, 
     1135106655411126263, 6245562272652519625, 1677866068586115521, 
     270716121874098492, 972260430117039782, 5342487481078484401, 
     6441995616051760503, 972280651678100484}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.894814415421441*^9, 3.894814438550494*^9}, {
   3.8948148250923414`*^9, 3.894814847167557*^9}, 3.8948150176043687`*^9},
 CellLabel->"Out[143]=",
 CellID->28544744,ExpressionUUID->"f2e900e4-86ac-418a-b2dc-51c3d5f9dc04"]
}, Open  ]],

Cell["What tests failed?", "ExampleText",
 CellChangeTimes->{{3.8948144368405285`*^9, 3.894814440063528*^9}},
 CellID->104083403,ExpressionUUID->"9176406b-6e6b-42b5-ac96-a76d5841c84d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlternativeTestReport", "[", "\"\<TestsFailed\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8948144417363253`*^9, 3.894814446065584*^9}},
 CellLabel->"In[144]:=",
 CellID->20919449,ExpressionUUID->"85b55346-a53b-47f3-840a-45f654b0402d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"TestsFailedWrongResults\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"5870464352408122024", "\[Rule]", 
      InterpretationBox[
       RowBox[{
        TagBox["TestObject",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["9bd293c2-4051-4942-9d24-e30dd9534b90"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{
                   InsetBox[
                    BoxData[
                    FormBox[
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
                  PlotRange -> {{0, 1}, {0, 1}}, Background -> 
                  GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                  FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Failure\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["9bd293c2-4051-4942-9d24-e30dd9534b90"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"WordListLookup", "[", 
                    RowBox[{"\"a\"", "~~", "___", "~~", 
                    RowBox[{"\"a\"", "|", "\"a\""}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"WordListLookup", "[", 
                    RowBox[{"\"a\"", "~~", "___", "~~", 
                    RowBox[{"\"a\"", "|", "\"a\""}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    PeterBurbery`LittleChildPaclet`WordListLookup[
                    StringExpression["a", 
                    BlankNullSequence[], 
                    Alternatives["a", "a"]]]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    RowBox[{"\"a\"", ",", "\"abracadabra\"", ",", 
                    "\"abscissa\"", ",", "\"acacia\"", ",", "\"academia\"", 
                    ",", "\"acrophobia\"", ",", "\"agenda\"", ",", 
                    "\"agoraphobia\"", ",", "\"aha\"", ",", "\"alfalfa\"", 
                    ",", "\"alga\"", ",", "\"algebra\"", ",", "\"alleluia\"", 
                    ",", "\"aloha\"", ",", "\"alpaca\"", ",", "\"alpha\"", 
                    ",", "\"alumina\"", ",", "\"alumna\"", ",", 
                    "\"ambrosia\"", ",", "\"ammonia\"", ",", "\"amnesia\"", 
                    ",", "\"amoeba\"", ",", "\"amphora\"", ",", 
                    "\"anaconda\"", ",", "\"analgesia\"", ",", "\"anaphora\"",
                     ",", "\"anathema\"", ",", "\"anemia\"", ",", 
                    "\"anesthesia\"", ",", "\"angelica\"", ",", "\"angina\"", 
                    ",", "\"angostura\"", ",", "\"anorexia\"", ",", 
                    "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", ",", 
                    "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", ",", 
                    "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"a\"", ",", "\"abracadabra\"", ",", 
                    "\"abscissa\"", ",", "\"acacia\"", ",", "\"academia\"", 
                    ",", "\"acrophobia\"", ",", "\"agenda\"", ",", 
                    "\"agoraphobia\"", ",", "\"aha\"", ",", "\"alfalfa\"", 
                    ",", "\"alga\"", ",", "\"algebra\"", ",", "\"alleluia\"", 
                    ",", "\"aloha\"", ",", "\"alpaca\"", ",", "\"alpha\"", 
                    ",", "\"alumina\"", ",", "\"alumna\"", ",", 
                    "\"ambrosia\"", ",", "\"ammonia\"", ",", "\"amnesia\"", 
                    ",", "\"amoeba\"", ",", "\"amphora\"", ",", 
                    "\"anaconda\"", ",", "\"analgesia\"", ",", "\"anaphora\"",
                     ",", "\"anathema\"", ",", "\"anemia\"", ",", 
                    "\"anesthesia\"", ",", "\"angelica\"", ",", "\"angina\"", 
                    ",", "\"angostura\"", ",", "\"anorexia\"", ",", 
                    "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", ",", 
                    "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", ",", 
                    "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{"a", "abracadabra", "abscissa", "acacia", 
                    "academia", "acrophobia", "agenda", "agoraphobia", "aha", 
                    "alfalfa", "alga", "algebra", "alleluia", "aloha", 
                    "alpaca", "alpha", "alumina", "alumna", "ambrosia", 
                    "ammonia", "amnesia", "amoeba", "amphora", "anaconda", 
                    "analgesia", "anaphora", "anathema", "anemia", 
                    "anesthesia", "angelica", "angina", "angostura", 
                    "anorexia", "antenna", "aorta", "aphasia", "apnea", 
                    "apologia", "aqua", "area", "arena", "aria", "armada", 
                    "aroma", "arrhythmia", "arugula", "asphyxia", 
                    "aspidistra", "asthma", "ataxia", "aura", "aurora", 
                    "azalea"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    RowBox[{"\"abracadabra\"", ",", "\"abscissa\"", ",", 
                    "\"acacia\"", ",", "\"academia\"", ",", "\"acrophobia\"", 
                    ",", "\"agenda\"", ",", "\"agoraphobia\"", ",", "\"aha\"",
                     ",", "\"alfalfa\"", ",", "\"alga\"", ",", "\"algebra\"", 
                    ",", "\"alleluia\"", ",", "\"aloha\"", ",", "\"alpaca\"", 
                    ",", "\"alpha\"", ",", "\"alumina\"", ",", "\"alumna\"", 
                    ",", "\"ambrosia\"", ",", "\"ammonia\"", ",", 
                    "\"amnesia\"", ",", "\"amoeba\"", ",", "\"amphora\"", ",",
                     "\"anaconda\"", ",", "\"analgesia\"", ",", 
                    "\"anaphora\"", ",", "\"anathema\"", ",", "\"anemia\"", 
                    ",", "\"anesthesia\"", ",", "\"angelica\"", ",", 
                    "\"angina\"", ",", "\"angostura\"", ",", "\"anorexia\"", 
                    ",", "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", 
                    ",", "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", 
                    ",", "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"abracadabra\"", ",", "\"abscissa\"", ",", 
                    "\"acacia\"", ",", "\"academia\"", ",", "\"acrophobia\"", 
                    ",", "\"agenda\"", ",", "\"agoraphobia\"", ",", "\"aha\"",
                     ",", "\"alfalfa\"", ",", "\"alga\"", ",", "\"algebra\"", 
                    ",", "\"alleluia\"", ",", "\"aloha\"", ",", "\"alpaca\"", 
                    ",", "\"alpha\"", ",", "\"alumina\"", ",", "\"alumna\"", 
                    ",", "\"ambrosia\"", ",", "\"ammonia\"", ",", 
                    "\"amnesia\"", ",", "\"amoeba\"", ",", "\"amphora\"", ",",
                     "\"anaconda\"", ",", "\"analgesia\"", ",", 
                    "\"anaphora\"", ",", "\"anathema\"", ",", "\"anemia\"", 
                    ",", "\"anesthesia\"", ",", "\"angelica\"", ",", 
                    "\"angina\"", ",", "\"angostura\"", ",", "\"anorexia\"", 
                    ",", "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", 
                    ",", "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", 
                    ",", "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{"abracadabra", "abscissa", "acacia", 
                    "academia", "acrophobia", "agenda", "agoraphobia", "aha", 
                    "alfalfa", "alga", "algebra", "alleluia", "aloha", 
                    "alpaca", "alpha", "alumina", "alumna", "ambrosia", 
                    "ammonia", "amnesia", "amoeba", "amphora", "anaconda", 
                    "analgesia", "anaphora", "anathema", "anemia", 
                    "anesthesia", "angelica", "angina", "angostura", 
                    "anorexia", "antenna", "aorta", "aphasia", "apnea", 
                    "apologia", "aqua", "area", "arena", "aria", "armada", 
                    "aroma", "arrhythmia", "arugula", "asphyxia", 
                    "aspidistra", "asthma", "ataxia", "aura", "aurora", 
                    "azalea"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       TestObject[<|
        "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150127294703`*^9, 
         "SameTest" -> ContainsExactly, "SameMessages" -> 
         Testing`MessageMatchQ, "MemoryConstraint" -> DirectedInfinity[1], 
         "TimeConstraint" -> DirectedInfinity[1], "CreationID" -> 
         "7ce4eb61-3b9a-43c9-8069-ffdc5a4d8b12", "TestID" -> 
         "9bd293c2-4051-4942-9d24-e30dd9534b90", "TestFileName" -> "", 
         "EvaluationID" -> "668c894b-12bd-40a8-a2c0-a9a4cec68d92", "Input" -> 
         HoldForm[
           PeterBurbery`LittleChildPaclet`WordListLookup[
            StringExpression["a", 
             BlankNullSequence[], 
             Alternatives["a", "a"]]]], "ExpectedOutput" -> 
         HoldForm[{
           "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia",
             "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
            "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
            "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda",
             "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
            "angelica", "angina", "angostura", "anorexia", "antenna", "aorta",
             "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
            "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
            "aspidistra", "asthma", "ataxia", "aura", "aurora", "azalea"}], 
         "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
         HoldForm[{
           "abracadabra", "abscissa", "acacia", "academia", "acrophobia", 
            "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
            "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
            "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda",
             "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
            "angelica", "angina", "angostura", "anorexia", "antenna", "aorta",
             "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
            "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
            "aspidistra", "asthma", "ataxia", "aura", "aurora", "azalea"}], 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         0.068999`5.989357794400706, "CPUTimeUsed" -> 0.0619999999999834, 
         "MemoryUsed" -> 316712, "Outcome" -> "Failure"|>],
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"TestsFailedWithMessages\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"TestsFailedWithErrors\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8948144463095503`*^9, 3.8948148565534177`*^9, 
  3.894815033025411*^9},
 CellLabel->"Out[144]=",
 CellID->364970126,ExpressionUUID->"fb14a08e-2633-4222-b252-15c0d22f0efd"]
}, Open  ]],

Cell["What is the difference in the output?", "ExampleText",
 CellChangeTimes->{{3.894814484100189*^9, 3.894814490135462*^9}},
 CellID->872818384,ExpressionUUID->"ede939d4-d6ec-46ac-83ff-c2a6f090090f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AlternativeTestReport", "[", "\"\<TestsFailed\>\"", "]"}], "[", 
  "\"\<TestsFailedWrongResults\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.894814491617163*^9, 3.894814517361026*^9}},
 CellLabel->"In[145]:=",
 CellID->474197475,ExpressionUUID->"817dc76c-37ae-41d8-be75-32499c8c3012"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"5870464352408122024", "\[Rule]", 
   InterpretationBox[
    RowBox[{
     TagBox["TestObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
               PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Failure\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["9bd293c2-4051-4942-9d24-e30dd9534b90"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                    Center, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
               PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Failure\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    PaneSelectorBox[{
                    False -> TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["9bd293c2-4051-4942-9d24-e30dd9534b90"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"WordListLookup", "[", 
                    RowBox[{"\"a\"", "~~", "___", "~~", 
                    RowBox[{"\"a\"", "|", "\"a\""}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"WordListLookup", "[", 
                    RowBox[{"\"a\"", "~~", "___", "~~", 
                    RowBox[{"\"a\"", "|", "\"a\""}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    PeterBurbery`LittleChildPaclet`WordListLookup[
                    StringExpression["a", 
                    BlankNullSequence[], 
                    Alternatives["a", "a"]]]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    
                    RowBox[{
                    "\"a\"", ",", "\"abracadabra\"", ",", "\"abscissa\"", ",",
                     "\"acacia\"", ",", "\"academia\"", ",", "\"acrophobia\"",
                     ",", "\"agenda\"", ",", "\"agoraphobia\"", ",", 
                    "\"aha\"", ",", "\"alfalfa\"", ",", "\"alga\"", ",", 
                    "\"algebra\"", ",", "\"alleluia\"", ",", "\"aloha\"", ",",
                     "\"alpaca\"", ",", "\"alpha\"", ",", "\"alumina\"", ",", 
                    "\"alumna\"", ",", "\"ambrosia\"", ",", "\"ammonia\"", 
                    ",", "\"amnesia\"", ",", "\"amoeba\"", ",", "\"amphora\"",
                     ",", "\"anaconda\"", ",", "\"analgesia\"", ",", 
                    "\"anaphora\"", ",", "\"anathema\"", ",", "\"anemia\"", 
                    ",", "\"anesthesia\"", ",", "\"angelica\"", ",", 
                    "\"angina\"", ",", "\"angostura\"", ",", "\"anorexia\"", 
                    ",", "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", 
                    ",", "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", 
                    ",", "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"a\"", ",", "\"abracadabra\"", ",", 
                    "\"abscissa\"", ",", "\"acacia\"", ",", "\"academia\"", 
                    ",", "\"acrophobia\"", ",", "\"agenda\"", ",", 
                    "\"agoraphobia\"", ",", "\"aha\"", ",", "\"alfalfa\"", 
                    ",", "\"alga\"", ",", "\"algebra\"", ",", "\"alleluia\"", 
                    ",", "\"aloha\"", ",", "\"alpaca\"", ",", "\"alpha\"", 
                    ",", "\"alumina\"", ",", "\"alumna\"", ",", 
                    "\"ambrosia\"", ",", "\"ammonia\"", ",", "\"amnesia\"", 
                    ",", "\"amoeba\"", ",", "\"amphora\"", ",", 
                    "\"anaconda\"", ",", "\"analgesia\"", ",", "\"anaphora\"",
                     ",", "\"anathema\"", ",", "\"anemia\"", ",", 
                    "\"anesthesia\"", ",", "\"angelica\"", ",", "\"angina\"", 
                    ",", "\"angostura\"", ",", "\"anorexia\"", ",", 
                    "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", ",", 
                    "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", ",", 
                    "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{
                    "a", "abracadabra", "abscissa", "acacia", "academia", 
                    "acrophobia", "agenda", "agoraphobia", "aha", "alfalfa", 
                    "alga", "algebra", "alleluia", "aloha", "alpaca", "alpha",
                     "alumina", "alumna", "ambrosia", "ammonia", "amnesia", 
                    "amoeba", "amphora", "anaconda", "analgesia", "anaphora", 
                    "anathema", "anemia", "anesthesia", "angelica", "angina", 
                    "angostura", "anorexia", "antenna", "aorta", "aphasia", 
                    "apnea", "apologia", "aqua", "area", "arena", "aria", 
                    "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
                    "aspidistra", "asthma", "ataxia", "aura", "aurora", 
                    "azalea"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    
                    RowBox[{
                    "\"abracadabra\"", ",", "\"abscissa\"", ",", "\"acacia\"",
                     ",", "\"academia\"", ",", "\"acrophobia\"", ",", 
                    "\"agenda\"", ",", "\"agoraphobia\"", ",", "\"aha\"", ",",
                     "\"alfalfa\"", ",", "\"alga\"", ",", "\"algebra\"", ",", 
                    "\"alleluia\"", ",", "\"aloha\"", ",", "\"alpaca\"", ",", 
                    "\"alpha\"", ",", "\"alumina\"", ",", "\"alumna\"", ",", 
                    "\"ambrosia\"", ",", "\"ammonia\"", ",", "\"amnesia\"", 
                    ",", "\"amoeba\"", ",", "\"amphora\"", ",", 
                    "\"anaconda\"", ",", "\"analgesia\"", ",", "\"anaphora\"",
                     ",", "\"anathema\"", ",", "\"anemia\"", ",", 
                    "\"anesthesia\"", ",", "\"angelica\"", ",", "\"angina\"", 
                    ",", "\"angostura\"", ",", "\"anorexia\"", ",", 
                    "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", ",", 
                    "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", ",", 
                    "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"abracadabra\"", ",", "\"abscissa\"", ",", 
                    "\"acacia\"", ",", "\"academia\"", ",", "\"acrophobia\"", 
                    ",", "\"agenda\"", ",", "\"agoraphobia\"", ",", "\"aha\"",
                     ",", "\"alfalfa\"", ",", "\"alga\"", ",", "\"algebra\"", 
                    ",", "\"alleluia\"", ",", "\"aloha\"", ",", "\"alpaca\"", 
                    ",", "\"alpha\"", ",", "\"alumina\"", ",", "\"alumna\"", 
                    ",", "\"ambrosia\"", ",", "\"ammonia\"", ",", 
                    "\"amnesia\"", ",", "\"amoeba\"", ",", "\"amphora\"", ",",
                     "\"anaconda\"", ",", "\"analgesia\"", ",", 
                    "\"anaphora\"", ",", "\"anathema\"", ",", "\"anemia\"", 
                    ",", "\"anesthesia\"", ",", "\"angelica\"", ",", 
                    "\"angina\"", ",", "\"angostura\"", ",", "\"anorexia\"", 
                    ",", "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", 
                    ",", "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", 
                    ",", "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{
                    "abracadabra", "abscissa", "acacia", "academia", 
                    "acrophobia", "agenda", "agoraphobia", "aha", "alfalfa", 
                    "alga", "algebra", "alleluia", "aloha", "alpaca", "alpha",
                     "alumina", "alumna", "ambrosia", "ammonia", "amnesia", 
                    "amoeba", "amphora", "anaconda", "analgesia", "anaphora", 
                    "anathema", "anemia", "anesthesia", "angelica", "angina", 
                    "angostura", "anorexia", "antenna", "aorta", "aphasia", 
                    "apnea", "apologia", "aqua", "area", "arena", "aria", 
                    "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
                    "aspidistra", "asthma", "ataxia", "aura", "aurora", 
                    "azalea"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TestObject[<|
     "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150127294703`*^9, 
      "SameTest" -> ContainsExactly, "SameMessages" -> Testing`MessageMatchQ, 
      "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
      DirectedInfinity[1], "CreationID" -> 
      "7ce4eb61-3b9a-43c9-8069-ffdc5a4d8b12", "TestID" -> 
      "9bd293c2-4051-4942-9d24-e30dd9534b90", "TestFileName" -> "", 
      "EvaluationID" -> "668c894b-12bd-40a8-a2c0-a9a4cec68d92", "Input" -> 
      HoldForm[
        PeterBurbery`LittleChildPaclet`WordListLookup[
         StringExpression["a", 
          BlankNullSequence[], 
          Alternatives["a", "a"]]]], "ExpectedOutput" -> 
      HoldForm[{
        "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia", 
         "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
         "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
         "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda", 
         "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
         "angelica", "angina", "angostura", "anorexia", "antenna", "aorta", 
         "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
         "armada", "aroma", "arrhythmia", "arugula", "asphyxia", "aspidistra",
          "asthma", "ataxia", "aura", "aurora", "azalea"}], 
      "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
      HoldForm[{
        "abracadabra", "abscissa", "acacia", "academia", "acrophobia", 
         "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
         "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
         "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda", 
         "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
         "angelica", "angina", "angostura", "anorexia", "antenna", "aorta", 
         "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
         "armada", "aroma", "arrhythmia", "arugula", "asphyxia", "aspidistra",
          "asthma", "ataxia", "aura", "aurora", "azalea"}], 
      "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      0.068999`5.989357794400706, "CPUTimeUsed" -> 0.0619999999999834, 
      "MemoryUsed" -> 316712, "Outcome" -> "Failure"|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.894814499900259*^9, 3.894814518029588*^9}, 
   3.8948148641453724`*^9, 3.894815035780241*^9},
 CellLabel->"Out[145]=",
 CellID->26609597,ExpressionUUID->"03fea6e1-2e8f-4566-add3-f2d6f545b65e"]
}, Open  ]],

Cell["Get the Values:", "ExampleText",
 CellChangeTimes->{{3.894814521947077*^9, 3.894814525737331*^9}},
 CellID->25484150,ExpressionUUID->"3846d2a5-91e8-4fc1-9112-2ad5b720534d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "[", 
  RowBox[{
   RowBox[{"AlternativeTestReport", "[", "\"\<TestsFailed\>\"", "]"}], "[", 
   "\"\<TestsFailedWrongResults\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.894814526357331*^9, 3.89481452726291*^9}},
 CellLabel->"In[146]:=",
 CellID->33481653,ExpressionUUID->"72b4f262-8eaa-435a-93d8-f99342bcfff1"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["TestObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               InsetBox[
                BoxData[
                 FormBox[
                  PaneBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                   Center, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
              PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
              Axes -> False, AspectRatio -> 1, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Failure\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   PaneSelectorBox[{
                    False -> TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["9bd293c2-4051-4942-9d24-e30dd9534b90"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               InsetBox[
                BoxData[
                 FormBox[
                  PaneBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                   Center, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
              PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
              Axes -> False, AspectRatio -> 1, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Failure\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   PaneSelectorBox[{
                    False -> TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["9bd293c2-4051-4942-9d24-e30dd9534b90"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"WordListLookup", "[", 
                    RowBox[{"\"a\"", "~~", "___", "~~", 
                    RowBox[{"\"a\"", "|", "\"a\""}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"WordListLookup", "[", 
                    RowBox[{"\"a\"", "~~", "___", "~~", 
                    RowBox[{"\"a\"", "|", "\"a\""}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    PeterBurbery`LittleChildPaclet`WordListLookup[
                    StringExpression["a", 
                    BlankNullSequence[], 
                    Alternatives["a", "a"]]]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    
                    RowBox[{
                    "\"a\"", ",", "\"abracadabra\"", ",", "\"abscissa\"", ",",
                     "\"acacia\"", ",", "\"academia\"", ",", "\"acrophobia\"",
                     ",", "\"agenda\"", ",", "\"agoraphobia\"", ",", 
                    "\"aha\"", ",", "\"alfalfa\"", ",", "\"alga\"", ",", 
                    "\"algebra\"", ",", "\"alleluia\"", ",", "\"aloha\"", ",",
                     "\"alpaca\"", ",", "\"alpha\"", ",", "\"alumina\"", ",", 
                    "\"alumna\"", ",", "\"ambrosia\"", ",", "\"ammonia\"", 
                    ",", "\"amnesia\"", ",", "\"amoeba\"", ",", "\"amphora\"",
                     ",", "\"anaconda\"", ",", "\"analgesia\"", ",", 
                    "\"anaphora\"", ",", "\"anathema\"", ",", "\"anemia\"", 
                    ",", "\"anesthesia\"", ",", "\"angelica\"", ",", 
                    "\"angina\"", ",", "\"angostura\"", ",", "\"anorexia\"", 
                    ",", "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", 
                    ",", "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", 
                    ",", "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"a\"", ",", "\"abracadabra\"", ",", 
                    "\"abscissa\"", ",", "\"acacia\"", ",", "\"academia\"", 
                    ",", "\"acrophobia\"", ",", "\"agenda\"", ",", 
                    "\"agoraphobia\"", ",", "\"aha\"", ",", "\"alfalfa\"", 
                    ",", "\"alga\"", ",", "\"algebra\"", ",", "\"alleluia\"", 
                    ",", "\"aloha\"", ",", "\"alpaca\"", ",", "\"alpha\"", 
                    ",", "\"alumina\"", ",", "\"alumna\"", ",", 
                    "\"ambrosia\"", ",", "\"ammonia\"", ",", "\"amnesia\"", 
                    ",", "\"amoeba\"", ",", "\"amphora\"", ",", 
                    "\"anaconda\"", ",", "\"analgesia\"", ",", "\"anaphora\"",
                     ",", "\"anathema\"", ",", "\"anemia\"", ",", 
                    "\"anesthesia\"", ",", "\"angelica\"", ",", "\"angina\"", 
                    ",", "\"angostura\"", ",", "\"anorexia\"", ",", 
                    "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", ",", 
                    "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", ",", 
                    "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{
                    "a", "abracadabra", "abscissa", "acacia", "academia", 
                    "acrophobia", "agenda", "agoraphobia", "aha", "alfalfa", 
                    "alga", "algebra", "alleluia", "aloha", "alpaca", "alpha",
                     "alumina", "alumna", "ambrosia", "ammonia", "amnesia", 
                    "amoeba", "amphora", "anaconda", "analgesia", "anaphora", 
                    "anathema", "anemia", "anesthesia", "angelica", "angina", 
                    "angostura", "anorexia", "antenna", "aorta", "aphasia", 
                    "apnea", "apologia", "aqua", "area", "arena", "aria", 
                    "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
                    "aspidistra", "asthma", "ataxia", "aura", "aurora", 
                    "azalea"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                   "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   PaneBox[
                    TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    
                    RowBox[{
                    "\"abracadabra\"", ",", "\"abscissa\"", ",", "\"acacia\"",
                     ",", "\"academia\"", ",", "\"acrophobia\"", ",", 
                    "\"agenda\"", ",", "\"agoraphobia\"", ",", "\"aha\"", ",",
                     "\"alfalfa\"", ",", "\"alga\"", ",", "\"algebra\"", ",", 
                    "\"alleluia\"", ",", "\"aloha\"", ",", "\"alpaca\"", ",", 
                    "\"alpha\"", ",", "\"alumina\"", ",", "\"alumna\"", ",", 
                    "\"ambrosia\"", ",", "\"ammonia\"", ",", "\"amnesia\"", 
                    ",", "\"amoeba\"", ",", "\"amphora\"", ",", 
                    "\"anaconda\"", ",", "\"analgesia\"", ",", "\"anaphora\"",
                     ",", "\"anathema\"", ",", "\"anemia\"", ",", 
                    "\"anesthesia\"", ",", "\"angelica\"", ",", "\"angina\"", 
                    ",", "\"angostura\"", ",", "\"anorexia\"", ",", 
                    "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", ",", 
                    "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", ",", 
                    "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"abracadabra\"", ",", "\"abscissa\"", ",", 
                    "\"acacia\"", ",", "\"academia\"", ",", "\"acrophobia\"", 
                    ",", "\"agenda\"", ",", "\"agoraphobia\"", ",", "\"aha\"",
                     ",", "\"alfalfa\"", ",", "\"alga\"", ",", "\"algebra\"", 
                    ",", "\"alleluia\"", ",", "\"aloha\"", ",", "\"alpaca\"", 
                    ",", "\"alpha\"", ",", "\"alumina\"", ",", "\"alumna\"", 
                    ",", "\"ambrosia\"", ",", "\"ammonia\"", ",", 
                    "\"amnesia\"", ",", "\"amoeba\"", ",", "\"amphora\"", ",",
                     "\"anaconda\"", ",", "\"analgesia\"", ",", 
                    "\"anaphora\"", ",", "\"anathema\"", ",", "\"anemia\"", 
                    ",", "\"anesthesia\"", ",", "\"angelica\"", ",", 
                    "\"angina\"", ",", "\"angostura\"", ",", "\"anorexia\"", 
                    ",", "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", 
                    ",", "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", 
                    ",", "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{
                    "abracadabra", "abscissa", "acacia", "academia", 
                    "acrophobia", "agenda", "agoraphobia", "aha", "alfalfa", 
                    "alga", "algebra", "alleluia", "aloha", "alpaca", "alpha",
                     "alumina", "alumna", "ambrosia", "ammonia", "amnesia", 
                    "amoeba", "amphora", "anaconda", "analgesia", "anaphora", 
                    "anathema", "anemia", "anesthesia", "angelica", "angina", 
                    "angostura", "anorexia", "antenna", "aorta", "aphasia", 
                    "apnea", "apologia", "aqua", "area", "arena", "aria", 
                    "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
                    "aspidistra", "asthma", "ataxia", "aura", "aurora", 
                    "azalea"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                   "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   TestObject[<|
    "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150127294703`*^9, 
     "SameTest" -> ContainsExactly, "SameMessages" -> Testing`MessageMatchQ, 
     "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
     DirectedInfinity[1], "CreationID" -> 
     "7ce4eb61-3b9a-43c9-8069-ffdc5a4d8b12", "TestID" -> 
     "9bd293c2-4051-4942-9d24-e30dd9534b90", "TestFileName" -> "", 
     "EvaluationID" -> "668c894b-12bd-40a8-a2c0-a9a4cec68d92", "Input" -> 
     HoldForm[
       PeterBurbery`LittleChildPaclet`WordListLookup[
        StringExpression["a", 
         BlankNullSequence[], 
         Alternatives["a", "a"]]]], "ExpectedOutput" -> 
     HoldForm[{
       "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia", 
        "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
        "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
        "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda", 
        "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
        "angelica", "angina", "angostura", "anorexia", "antenna", "aorta", 
        "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
        "armada", "aroma", "arrhythmia", "arugula", "asphyxia", "aspidistra", 
        "asthma", "ataxia", "aura", "aurora", "azalea"}], "ExpectedMessages" -> 
     HoldForm[{}], "ActualOutput" -> 
     HoldForm[{
       "abracadabra", "abscissa", "acacia", "academia", "acrophobia", 
        "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
        "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
        "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda", 
        "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
        "angelica", "angina", "angostura", "anorexia", "antenna", "aorta", 
        "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
        "armada", "aroma", "arrhythmia", "arugula", "asphyxia", "aspidistra", 
        "asthma", "ataxia", "aura", "aurora", "azalea"}], 
     "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 0.068999`5.989357794400706,
      "CPUTimeUsed" -> 0.0619999999999834, "MemoryUsed" -> 316712, "Outcome" -> 
     "Failure"|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.8948145275569105`*^9, 3.8948148677206235`*^9, 
  3.8948150408957806`*^9},
 CellLabel->"Out[146]=",
 CellID->41747444,ExpressionUUID->"ed2c6a51-e459-4607-a463-19f4f93cceb5"]
}, Open  ]],

Cell["Get the first Value:", "ExampleText",
 CellChangeTimes->{{3.894814534186421*^9, 3.894814536918147*^9}},
 CellID->117849955,ExpressionUUID->"42f61bbd-37b6-43ff-8906-71161d185534"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"Values", "[", 
   RowBox[{
    RowBox[{"AlternativeTestReport", "[", "\"\<TestsFailed\>\"", "]"}], "[", 
    "\"\<TestsFailedWrongResults\>\"", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.894814537845376*^9, 3.8948145393738203`*^9}},
 CellLabel->"In[147]:=",
 CellID->7971185,ExpressionUUID->"8d763716-0005-4165-ad68-2d1bc1712efc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                  Center, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Failure\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["9bd293c2-4051-4942-9d24-e30dd9534b90"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              InsetBox[
               BoxData[
                FormBox[
                 PaneBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "TestFailureIcon"]], Alignment -> 
                  Center, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
             PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Outcome: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Failure\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Test ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    "\"9bd293c2-4051-4942-9d24-e30dd9534b90\"", HoldForm], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated["9bd293c2-4051-4942-9d24-e30dd9534b90"]], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], Background -> GrayLevel[0.85], 
                    StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    PaneSelectorBox[{False -> RowBox[{"WordListLookup", "[", 
                    RowBox[{"\"a\"", "~~", "___", "~~", 
                    RowBox[{"\"a\"", "|", "\"a\""}]}], "]"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"WordListLookup", "[", 
                    RowBox[{"\"a\"", "~~", "___", "~~", 
                    RowBox[{"\"a\"", "|", "\"a\""}]}], "]"}], 
                    "\"Copy to clipboard.\"", TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    Unevaluated[
                    PeterBurbery`LittleChildPaclet`WordListLookup[
                    StringExpression["a", 
                    BlankNullSequence[], 
                    Alternatives["a", "a"]]]]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    Background -> GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expected output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    
                    RowBox[{
                    "\"a\"", ",", "\"abracadabra\"", ",", "\"abscissa\"", ",",
                     "\"acacia\"", ",", "\"academia\"", ",", "\"acrophobia\"",
                     ",", "\"agenda\"", ",", "\"agoraphobia\"", ",", 
                    "\"aha\"", ",", "\"alfalfa\"", ",", "\"alga\"", ",", 
                    "\"algebra\"", ",", "\"alleluia\"", ",", "\"aloha\"", ",",
                     "\"alpaca\"", ",", "\"alpha\"", ",", "\"alumina\"", ",", 
                    "\"alumna\"", ",", "\"ambrosia\"", ",", "\"ammonia\"", 
                    ",", "\"amnesia\"", ",", "\"amoeba\"", ",", "\"amphora\"",
                     ",", "\"anaconda\"", ",", "\"analgesia\"", ",", 
                    "\"anaphora\"", ",", "\"anathema\"", ",", "\"anemia\"", 
                    ",", "\"anesthesia\"", ",", "\"angelica\"", ",", 
                    "\"angina\"", ",", "\"angostura\"", ",", "\"anorexia\"", 
                    ",", "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", 
                    ",", "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", 
                    ",", "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"a\"", ",", "\"abracadabra\"", ",", 
                    "\"abscissa\"", ",", "\"acacia\"", ",", "\"academia\"", 
                    ",", "\"acrophobia\"", ",", "\"agenda\"", ",", 
                    "\"agoraphobia\"", ",", "\"aha\"", ",", "\"alfalfa\"", 
                    ",", "\"alga\"", ",", "\"algebra\"", ",", "\"alleluia\"", 
                    ",", "\"aloha\"", ",", "\"alpaca\"", ",", "\"alpha\"", 
                    ",", "\"alumina\"", ",", "\"alumna\"", ",", 
                    "\"ambrosia\"", ",", "\"ammonia\"", ",", "\"amnesia\"", 
                    ",", "\"amoeba\"", ",", "\"amphora\"", ",", 
                    "\"anaconda\"", ",", "\"analgesia\"", ",", "\"anaphora\"",
                     ",", "\"anathema\"", ",", "\"anemia\"", ",", 
                    "\"anesthesia\"", ",", "\"angelica\"", ",", "\"angina\"", 
                    ",", "\"angostura\"", ",", "\"anorexia\"", ",", 
                    "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", ",", 
                    "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", ",", 
                    "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{
                    "a", "abracadabra", "abscissa", "acacia", "academia", 
                    "acrophobia", "agenda", "agoraphobia", "aha", "alfalfa", 
                    "alga", "algebra", "alleluia", "aloha", "alpaca", "alpha",
                     "alumina", "alumna", "ambrosia", "ammonia", "amnesia", 
                    "amoeba", "amphora", "anaconda", "analgesia", "anaphora", 
                    "anathema", "anemia", "anesthesia", "angelica", "angina", 
                    "angostura", "anorexia", "antenna", "aorta", "aphasia", 
                    "apnea", "apologia", "aqua", "area", "arena", "aria", 
                    "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
                    "aspidistra", "asthma", "ataxia", "aura", "aurora", 
                    "azalea"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Actual output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    PaneSelectorBox[{False -> RowBox[{"{", 
                    
                    RowBox[{
                    "\"abracadabra\"", ",", "\"abscissa\"", ",", "\"acacia\"",
                     ",", "\"academia\"", ",", "\"acrophobia\"", ",", 
                    "\"agenda\"", ",", "\"agoraphobia\"", ",", "\"aha\"", ",",
                     "\"alfalfa\"", ",", "\"alga\"", ",", "\"algebra\"", ",", 
                    "\"alleluia\"", ",", "\"aloha\"", ",", "\"alpaca\"", ",", 
                    "\"alpha\"", ",", "\"alumina\"", ",", "\"alumna\"", ",", 
                    "\"ambrosia\"", ",", "\"ammonia\"", ",", "\"amnesia\"", 
                    ",", "\"amoeba\"", ",", "\"amphora\"", ",", 
                    "\"anaconda\"", ",", "\"analgesia\"", ",", "\"anaphora\"",
                     ",", "\"anathema\"", ",", "\"anemia\"", ",", 
                    "\"anesthesia\"", ",", "\"angelica\"", ",", "\"angina\"", 
                    ",", "\"angostura\"", ",", "\"anorexia\"", ",", 
                    "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", ",", 
                    "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", ",", 
                    "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], True -> StyleBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"abracadabra\"", ",", "\"abscissa\"", ",", 
                    "\"acacia\"", ",", "\"academia\"", ",", "\"acrophobia\"", 
                    ",", "\"agenda\"", ",", "\"agoraphobia\"", ",", "\"aha\"",
                     ",", "\"alfalfa\"", ",", "\"alga\"", ",", "\"algebra\"", 
                    ",", "\"alleluia\"", ",", "\"aloha\"", ",", "\"alpaca\"", 
                    ",", "\"alpha\"", ",", "\"alumina\"", ",", "\"alumna\"", 
                    ",", "\"ambrosia\"", ",", "\"ammonia\"", ",", 
                    "\"amnesia\"", ",", "\"amoeba\"", ",", "\"amphora\"", ",",
                     "\"anaconda\"", ",", "\"analgesia\"", ",", 
                    "\"anaphora\"", ",", "\"anathema\"", ",", "\"anemia\"", 
                    ",", "\"anesthesia\"", ",", "\"angelica\"", ",", 
                    "\"angina\"", ",", "\"angostura\"", ",", "\"anorexia\"", 
                    ",", "\"antenna\"", ",", "\"aorta\"", ",", "\"aphasia\"", 
                    ",", "\"apnea\"", ",", "\"apologia\"", ",", "\"aqua\"", 
                    ",", "\"area\"", ",", "\"arena\"", ",", "\"aria\"", ",", 
                    "\"armada\"", ",", "\"aroma\"", ",", "\"arrhythmia\"", 
                    ",", "\"arugula\"", ",", "\"asphyxia\"", ",", 
                    "\"aspidistra\"", ",", "\"asthma\"", ",", "\"ataxia\"", 
                    ",", "\"aura\"", ",", "\"aurora\"", ",", "\"azalea\""}], 
                    "}"}], "\"Copy to clipboard.\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Copy to clipboard.", "Tooltip"]& ], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    
                    Unevaluated[{
                    "abracadabra", "abscissa", "acacia", "academia", 
                    "acrophobia", "agenda", "agoraphobia", "aha", "alfalfa", 
                    "alga", "algebra", "alleluia", "aloha", "alpaca", "alpha",
                     "alumina", "alumna", "ambrosia", "ammonia", "amnesia", 
                    "amoeba", "amphora", "anaconda", "analgesia", "anaphora", 
                    "anathema", "anemia", "anesthesia", "angelica", "angina", 
                    "angostura", "anorexia", "antenna", "aorta", "aphasia", 
                    "apnea", "apologia", "aqua", "area", "arena", "aria", 
                    "armada", "aroma", "arrhythmia", "arugula", "asphyxia", 
                    "aspidistra", "asthma", "ataxia", "aura", "aurora", 
                    "azalea"}]], Method -> "Preemptive", PassEventsDown -> 
                    Automatic, PassEventsUp -> True}]], Background -> 
                    GrayLevel[0.85], StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], Short[#, 
                    Rational[2, 3]]& ], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TestObject[<|
   "MetaInformation" -> None, "AbsoluteTime" -> 3.8948150127294703`*^9, 
    "SameTest" -> ContainsExactly, "SameMessages" -> Testing`MessageMatchQ, 
    "MemoryConstraint" -> DirectedInfinity[1], "TimeConstraint" -> 
    DirectedInfinity[1], "CreationID" -> 
    "7ce4eb61-3b9a-43c9-8069-ffdc5a4d8b12", "TestID" -> 
    "9bd293c2-4051-4942-9d24-e30dd9534b90", "TestFileName" -> "", 
    "EvaluationID" -> "668c894b-12bd-40a8-a2c0-a9a4cec68d92", "Input" -> 
    HoldForm[
      PeterBurbery`LittleChildPaclet`WordListLookup[
       StringExpression["a", 
        BlankNullSequence[], 
        Alternatives["a", "a"]]]], "ExpectedOutput" -> 
    HoldForm[{
      "a", "abracadabra", "abscissa", "acacia", "academia", "acrophobia", 
       "agenda", "agoraphobia", "aha", "alfalfa", "alga", "algebra", 
       "alleluia", "aloha", "alpaca", "alpha", "alumina", "alumna", 
       "ambrosia", "ammonia", "amnesia", "amoeba", "amphora", "anaconda", 
       "analgesia", "anaphora", "anathema", "anemia", "anesthesia", 
       "angelica", "angina", "angostura", "anorexia", "antenna", "aorta", 
       "aphasia", "apnea", "apologia", "aqua", "area", "arena", "aria", 
       "armada", "aroma", "arrhythmia", "arugula", "asphyxia", "aspidistra", 
       "asthma", "ataxia", "aura", "aurora", "azalea"}], "ExpectedMessages" -> 
    HoldForm[{}], "ActualOutput" -> 
    HoldForm[{
      "abracadabra", "abscissa", "acacia", "academia", "acrophobia", "agenda",
        "agoraphobia", "aha", "alfalfa", "alga", "algebra", "alleluia", 
       "aloha", "alpaca", "alpha", "alumina", "alumna", "ambrosia", "ammonia",
        "amnesia", "amoeba", "amphora", "anaconda", "analgesia", "anaphora", 
       "anathema", "anemia", "anesthesia", "angelica", "angina", "angostura", 
       "anorexia", "antenna", "aorta", "aphasia", "apnea", "apologia", "aqua",
        "area", "arena", "aria", "armada", "aroma", "arrhythmia", "arugula", 
       "asphyxia", "aspidistra", "asthma", "ataxia", "aura", "aurora", 
       "azalea"}], "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    0.068999`5.989357794400706, "CPUTimeUsed" -> 0.0619999999999834, 
    "MemoryUsed" -> 316712, "Outcome" -> "Failure"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8948145397457867`*^9, 3.8948148704276557`*^9, 
  3.894815044575163*^9},
 CellLabel->"Out[147]=",
 CellID->253894936,ExpressionUUID->"6154a9b4-2368-4ac3-b63f-248ad7d63a9c"]
}, Open  ]],

Cell["Get details:", "ExampleText",
 CellChangeTimes->{{3.894814543018338*^9, 3.894814562724945*^9}},
 CellID->92143258,ExpressionUUID->"ef3c8b1d-c8ff-4470-aa98-e311b3a44987"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"First", "[", 
   RowBox[{"Values", "[", 
    RowBox[{
     RowBox[{"AlternativeTestReport", "[", "\"\<TestsFailed\>\"", "]"}], "[", 
     "\"\<TestsFailedWrongResults\>\"", "]"}], "]"}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Input\>\"", ",", "\"\<ExpectedOutput\>\"", ",", "\"\<Outcome\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.894814537845376*^9, 3.894814571963524*^9}},
 CellLabel->"In[148]:=",
 CellID->606635904,ExpressionUUID->"fe910c23-4892-4772-9eff-619c1fb1e211"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Input\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"WordListLookup", "[", 
      RowBox[{"\<\"a\"\>", "~~", "___", "~~", 
       RowBox[{"\<\"a\"\>", "|", "\<\"a\"\>"}]}], "]"}],
     HoldForm]}], ",", 
   RowBox[{"\<\"ExpectedOutput\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"{", 
      RowBox[{"\<\"a\"\>", ",", "\<\"abracadabra\"\>", 
       ",", "\<\"abscissa\"\>", ",", "\<\"acacia\"\>", 
       ",", "\<\"academia\"\>", ",", "\<\"acrophobia\"\>", 
       ",", "\<\"agenda\"\>", ",", "\<\"agoraphobia\"\>", ",", "\<\"aha\"\>", 
       ",", "\<\"alfalfa\"\>", ",", "\<\"alga\"\>", ",", "\<\"algebra\"\>", 
       ",", "\<\"alleluia\"\>", ",", "\<\"aloha\"\>", ",", "\<\"alpaca\"\>", 
       ",", "\<\"alpha\"\>", ",", "\<\"alumina\"\>", ",", "\<\"alumna\"\>", 
       ",", "\<\"ambrosia\"\>", ",", "\<\"ammonia\"\>", 
       ",", "\<\"amnesia\"\>", ",", "\<\"amoeba\"\>", ",", "\<\"amphora\"\>", 
       ",", "\<\"anaconda\"\>", ",", "\<\"analgesia\"\>", 
       ",", "\<\"anaphora\"\>", ",", "\<\"anathema\"\>", 
       ",", "\<\"anemia\"\>", ",", "\<\"anesthesia\"\>", 
       ",", "\<\"angelica\"\>", ",", "\<\"angina\"\>", 
       ",", "\<\"angostura\"\>", ",", "\<\"anorexia\"\>", 
       ",", "\<\"antenna\"\>", ",", "\<\"aorta\"\>", ",", "\<\"aphasia\"\>", 
       ",", "\<\"apnea\"\>", ",", "\<\"apologia\"\>", ",", "\<\"aqua\"\>", 
       ",", "\<\"area\"\>", ",", "\<\"arena\"\>", ",", "\<\"aria\"\>", 
       ",", "\<\"armada\"\>", ",", "\<\"aroma\"\>", ",", "\<\"arrhythmia\"\>",
        ",", "\<\"arugula\"\>", ",", "\<\"asphyxia\"\>", 
       ",", "\<\"aspidistra\"\>", ",", "\<\"asthma\"\>", 
       ",", "\<\"ataxia\"\>", ",", "\<\"aura\"\>", ",", "\<\"aurora\"\>", 
       ",", "\<\"azalea\"\>"}], "}"}],
     HoldForm]}], ",", 
   RowBox[{"\<\"Outcome\"\>", "\[Rule]", "\<\"Failure\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8948145722597265`*^9, 3.894814882270136*^9, 
  3.8948150487386947`*^9},
 CellLabel->"Out[148]=",
 CellID->481464566,ExpressionUUID->"c2b11657-29c6-40ff-8919-a99d3d62ac93"]
}, Open  ]],

Cell["Compare the outputs:", "ExampleText",
 CellChangeTimes->{{3.8948149316189365`*^9, 3.8948149603692455`*^9}},
 CellID->586393327,ExpressionUUID->"71b50be3-153c-4a9e-abdf-417d88e9f3d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordListLookup", "[", 
  RowBox[{"\"\<a\>\"", "~~", "___", "~~", 
   RowBox[{"\"\<a\>\"", "|", "\"\<a\>\""}]}], "]"}]], "Input",
 CellLabel->"In[129]:=",
 CellID->39491818,ExpressionUUID->"847f635c-9770-48e5-92d1-03ed0c73524e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"abracadabra\"\>", ",", "\<\"abscissa\"\>", 
   ",", "\<\"acacia\"\>", ",", "\<\"academia\"\>", ",", "\<\"acrophobia\"\>", 
   ",", "\<\"agenda\"\>", ",", "\<\"agoraphobia\"\>", ",", "\<\"aha\"\>", 
   ",", "\<\"alfalfa\"\>", ",", "\<\"alga\"\>", ",", "\<\"algebra\"\>", 
   ",", "\<\"alleluia\"\>", ",", "\<\"aloha\"\>", ",", "\<\"alpaca\"\>", 
   ",", "\<\"alpha\"\>", ",", "\<\"alumina\"\>", ",", "\<\"alumna\"\>", 
   ",", "\<\"ambrosia\"\>", ",", "\<\"ammonia\"\>", ",", "\<\"amnesia\"\>", 
   ",", "\<\"amoeba\"\>", ",", "\<\"amphora\"\>", ",", "\<\"anaconda\"\>", 
   ",", "\<\"analgesia\"\>", ",", "\<\"anaphora\"\>", ",", "\<\"anathema\"\>",
    ",", "\<\"anemia\"\>", ",", "\<\"anesthesia\"\>", ",", "\<\"angelica\"\>",
    ",", "\<\"angina\"\>", ",", "\<\"angostura\"\>", ",", "\<\"anorexia\"\>", 
   ",", "\<\"antenna\"\>", ",", "\<\"aorta\"\>", ",", "\<\"aphasia\"\>", 
   ",", "\<\"apnea\"\>", ",", "\<\"apologia\"\>", ",", "\<\"aqua\"\>", 
   ",", "\<\"area\"\>", ",", "\<\"arena\"\>", ",", "\<\"aria\"\>", 
   ",", "\<\"armada\"\>", ",", "\<\"aroma\"\>", ",", "\<\"arrhythmia\"\>", 
   ",", "\<\"arugula\"\>", ",", "\<\"asphyxia\"\>", ",", "\<\"aspidistra\"\>",
    ",", "\<\"asthma\"\>", ",", "\<\"ataxia\"\>", ",", "\<\"aura\"\>", 
   ",", "\<\"aurora\"\>", ",", "\<\"azalea\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8948149397705145`*^9},
 CellLabel->"Out[129]=",
 CellID->590546159,ExpressionUUID->"6d05e2cd-f518-4879-b932-fec1db91cc5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordListLookup", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\"\<a\>\"", "~~", "___", "~~", "\"\<a\>\""}], ")"}], "|", 
   "\"\<a\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8948149456296263`*^9, 3.894814950862995*^9}},
 CellLabel->"In[130]:=",
 CellID->299442449,ExpressionUUID->"976ac736-6f4c-4a7d-a24d-ae3ce53c05a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"abracadabra\"\>", ",", "\<\"abscissa\"\>", 
   ",", "\<\"acacia\"\>", ",", "\<\"academia\"\>", ",", "\<\"acrophobia\"\>", 
   ",", "\<\"agenda\"\>", ",", "\<\"agoraphobia\"\>", ",", "\<\"aha\"\>", 
   ",", "\<\"alfalfa\"\>", ",", "\<\"alga\"\>", ",", "\<\"algebra\"\>", 
   ",", "\<\"alleluia\"\>", ",", "\<\"aloha\"\>", ",", "\<\"alpaca\"\>", 
   ",", "\<\"alpha\"\>", ",", "\<\"alumina\"\>", ",", "\<\"alumna\"\>", 
   ",", "\<\"ambrosia\"\>", ",", "\<\"ammonia\"\>", ",", "\<\"amnesia\"\>", 
   ",", "\<\"amoeba\"\>", ",", "\<\"amphora\"\>", ",", "\<\"anaconda\"\>", 
   ",", "\<\"analgesia\"\>", ",", "\<\"anaphora\"\>", ",", "\<\"anathema\"\>",
    ",", "\<\"anemia\"\>", ",", "\<\"anesthesia\"\>", ",", "\<\"angelica\"\>",
    ",", "\<\"angina\"\>", ",", "\<\"angostura\"\>", ",", "\<\"anorexia\"\>", 
   ",", "\<\"antenna\"\>", ",", "\<\"aorta\"\>", ",", "\<\"aphasia\"\>", 
   ",", "\<\"apnea\"\>", ",", "\<\"apologia\"\>", ",", "\<\"aqua\"\>", 
   ",", "\<\"area\"\>", ",", "\<\"arena\"\>", ",", "\<\"aria\"\>", 
   ",", "\<\"armada\"\>", ",", "\<\"aroma\"\>", ",", "\<\"arrhythmia\"\>", 
   ",", "\<\"arugula\"\>", ",", "\<\"asphyxia\"\>", ",", "\<\"aspidistra\"\>",
    ",", "\<\"asthma\"\>", ",", "\<\"ataxia\"\>", ",", "\<\"aura\"\>", 
   ",", "\<\"aurora\"\>", ",", "\<\"azalea\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.894814951302082*^9},
 CellLabel->"Out[130]=",
 CellID->694897660,ExpressionUUID->"3ec650ca-085b-4eea-b516-4b7bee4413f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameStartEndWords", "[", "\"\<a\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.894814963119756*^9, 3.89481496629683*^9}},
 CellLabel->"In[131]:=",
 CellID->439271586,ExpressionUUID->"e291f30e-a82e-4669-b342-c673ca61a809"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"abracadabra\"\>", ",", "\<\"abscissa\"\>", 
   ",", "\<\"acacia\"\>", ",", "\<\"academia\"\>", ",", "\<\"acrophobia\"\>", 
   ",", "\<\"agenda\"\>", ",", "\<\"agoraphobia\"\>", ",", "\<\"aha\"\>", 
   ",", "\<\"alfalfa\"\>", ",", "\<\"alga\"\>", ",", "\<\"algebra\"\>", 
   ",", "\<\"alleluia\"\>", ",", "\<\"aloha\"\>", ",", "\<\"alpaca\"\>", 
   ",", "\<\"alpha\"\>", ",", "\<\"alumina\"\>", ",", "\<\"alumna\"\>", 
   ",", "\<\"ambrosia\"\>", ",", "\<\"ammonia\"\>", ",", "\<\"amnesia\"\>", 
   ",", "\<\"amoeba\"\>", ",", "\<\"amphora\"\>", ",", "\<\"anaconda\"\>", 
   ",", "\<\"analgesia\"\>", ",", "\<\"anaphora\"\>", ",", "\<\"anathema\"\>",
    ",", "\<\"anemia\"\>", ",", "\<\"anesthesia\"\>", ",", "\<\"angelica\"\>",
    ",", "\<\"angina\"\>", ",", "\<\"angostura\"\>", ",", "\<\"anorexia\"\>", 
   ",", "\<\"antenna\"\>", ",", "\<\"aorta\"\>", ",", "\<\"aphasia\"\>", 
   ",", "\<\"apnea\"\>", ",", "\<\"apologia\"\>", ",", "\<\"aqua\"\>", 
   ",", "\<\"area\"\>", ",", "\<\"arena\"\>", ",", "\<\"aria\"\>", 
   ",", "\<\"armada\"\>", ",", "\<\"aroma\"\>", ",", "\<\"arrhythmia\"\>", 
   ",", "\<\"arugula\"\>", ",", "\<\"asphyxia\"\>", ",", "\<\"aspidistra\"\>",
    ",", "\<\"asthma\"\>", ",", "\<\"ataxia\"\>", ",", "\<\"aura\"\>", 
   ",", "\<\"aurora\"\>", ",", "\<\"azalea\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8948149666918645`*^9},
 CellLabel->"Out[131]=",
 CellID->419435288,ExpressionUUID->"2abdbc7c-de19-4563-bc6b-4ff46770e064"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "ee72054a-2669-4160-a682-035f8e7db723"],
  $Line = 0; Null]], "ExampleSection",
 CellID->37717485,ExpressionUUID->"bb32d078-35d9-483c-bf10-681ce382fbb0"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "d7fb8d13-05db-4b39-9c7e-f6f4eb92a261"],
  $Line = 0; Null]], "ExampleSection",
 CellID->46913625,ExpressionUUID->"dfb02dfa-631d-48ad-8367-ec1d45759fd4"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "33320c81-f944-4196-81da-41fca9d02c16"],
  $Line = 0; Null]], "ExampleSection",
 CellID->793620505,ExpressionUUID->"c99a43f8-5725-4922-923d-f42b17fde303"],

Cell["\<\
Make Word Cloud weighing each letter by how many words this function returns:\
\>", "ExampleText",
 CellChangeTimes->{{3.8948138125590973`*^9, 3.894813835649822*^9}},
 CellID->43350099,ExpressionUUID->"1bf6d214-f38b-45cf-b9af-eb4f9458517d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{"w", "\[Function]", 
     RowBox[{"Length", "[", 
      RowBox[{"SameStartEndWords", "[", "w", "]"}], "]"}]}], "]"}], "[", 
   RowBox[{"Alphabet", "[", "\"\<English\>\"", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.894813836776868*^9, 3.894813862347378*^9}},
 CellLabel->"In[58]:=",
 CellID->187758445,ExpressionUUID->"79c8029f-ad3c-42ad-9370-53e13d763e58"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.8235294117647058],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"e\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.7247418051189941],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-27., 3.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"d\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.5451279748540637],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {26., 2.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"g\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2541535698248765],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0., 27.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"r\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.40323304894476875`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {14., 24.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"t\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.38886394252357437`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-14., 25.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"m\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.22721149528513696`],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {23., -20.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"c\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2559497081275258],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., -33.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"p\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.162550516389762],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-18., -26.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"n\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2379883251010328],
     FontColor->RGBColor[1, 0.75, 0]], {-26., 22.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"a\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.21104625056129322`],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {21., 18.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"h\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.19847328244274806`],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {11., -34.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"w\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13381230354737314`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {0., 37.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"y\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13022002694207455`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-28., -25.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"o\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13740458015267176`],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {26., 27.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"k\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.14279299506061965`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {12., 36.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"b\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13920071845532106`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-36., 18.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"l\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.18590031432420295`],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {40., 0.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"x\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11764705882352941`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-10., -36.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"f\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.13381230354737314`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-23., 32.},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-41.5, 43.5}, {-44.5, 41.5}}]], "Output",
 CellChangeTimes->{3.894813864882448*^9},
 CellLabel->"Out[58]=",
 CellID->360752438,ExpressionUUID->"6a10ebe5-862b-477d-91d1-56f18287d668"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->208126032,ExpressionUUID->"f737a65e-f1c1-4f09-9cbe-9294d3536fdb"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"48f14a1c-2d55-40f8-9eca-e8fb70f65ff0"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"18969eb8-bfc4-4229-a49b-1d2cb6849d10"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"3562a8c3-7f18-48c2-bb4c-ad77ac049a84"]
}], "History",
 CellID->450335447,ExpressionUUID->"e84ea011-084d-48f0-b38c-036d4de5a9e4"],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorization",
 Cell[BoxData[
  TemplateBox[{"Metadata", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Metadata such as page URI, context, and type of documentation page.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "95d32a37-1906-4abf-a4b1-5fd9924449e2"]
}], "CategorizationSection",
 CellID->770128447,ExpressionUUID->"34fb00c0-95b5-4ae2-83c8-3e22bda047cf"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->161362289,ExpressionUUID->"fb0710c4-f0f6-40cd-a915-4d42be92360d"],

Cell["PeterBurbery/LittleChildPaclet", "Categorization",
 CellLabel->"Paclet Name",
 CellID->79608649,ExpressionUUID->"e6e25273-58f5-4b5a-8e12-a015b7e58b69"],

Cell["PeterBurbery`LittleChildPaclet`", "Categorization",
 CellLabel->"Context",
 CellID->513419307,ExpressionUUID->"f99cf74b-601c-491d-bfc8-611e75d872ba"],

Cell["PeterBurbery/LittleChildPaclet/ref/SameStartEndWords", "Categorization",
 CellLabel->"URI",
 CellID->108456257,ExpressionUUID->"3277e389-18ca-416b-b030-6eaa44478fe9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->136522835,ExpressionUUID->"527fbf6b-dc1e-43d0-86dd-fdd791f9eb10"],

Cell["XXXX", "Keywords",
 CellID->343008714,ExpressionUUID->"20cbd337-0f37-46ba-b782-4e145a71d87d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->128353457,ExpressionUUID->"7eb52428-8c0a-4685-9aca-04d627ad0232"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->8136587,ExpressionUUID->"cc4d1f70-0083-4aa9-aa19-3516c9e93ed0"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->237106,ExpressionUUID->"4300018f-e91e-40e1-bace-73f852f669f0"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->727578151,ExpressionUUID->"6f51bd71-6886-444d-97b7-a4a127480752"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->30786173,ExpressionUUID->"4d647081-0ff4-40c2-b3ce-2fbdbdcad28d"]
}, Closed]]
}, Open  ]]
},
WindowSize->{640.1999999999999, 574.8},
WindowMargins->{{Automatic, 46.799999999999955`}, {Automatic, 0}},
TaggingRules-><|"Paclet" -> "PeterBurbery/LittleChildPaclet"|>,
CellContext->"Global`",
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 18, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"f9caaa03-20ee-4dbf-9374-768f7caa8415"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[10791, 310, 486, 13, 57, "ExtendedExamplesSection",ExpressionUUID->"c2441b98-a6c0-4dcc-8135-55fa69b55bbe",
   CellTags->"ExtendedExamples",
   CellID->46932611]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 463108, 7991}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 114, 1, 74, "ObjectName",ExpressionUUID->"3a3d6205-7f6e-47fa-9a73-3f24fa9254c4",
 CellID->107539052],
Cell[697, 25, 727, 17, 78, "Usage",ExpressionUUID->"1ca00aa4-b01c-4004-89ac-f218fbfe1eb2",
 CellID->265005838],
Cell[1427, 44, 398, 6, 63, "Notes",ExpressionUUID->"b196eb57-8007-4ddd-8042-14d0dac3ad82",
 CellID->25677857]
}, Open  ]],
Cell[CellGroupData[{
Cell[1862, 55, 458, 13, 39, "SeeAlsoSection",ExpressionUUID->"0c269a1d-a893-4ad9-be9d-95c2f1e8802b",
 CellID->421507534],
Cell[2323, 70, 2484, 55, 24, "SeeAlso",ExpressionUUID->"aff98103-2c0f-4fa5-adc9-5efc2ce9bd6a",
 CellID->519366615]
}, Open  ]],
Cell[CellGroupData[{
Cell[4844, 130, 434, 12, 40, "TechNotesSection",ExpressionUUID->"290a118c-7f72-4eca-aaf6-f38592da7053",
 CellID->28683787],
Cell[5281, 144, 100, 1, 19, "Tutorials",ExpressionUUID->"e02f4a54-b5f7-4010-931d-b86895e93f9a",
 CellID->142609182]
}, Open  ]],
Cell[CellGroupData[{
Cell[5418, 150, 117, 1, 39, "MoreAboutSection",ExpressionUUID->"ad751313-5b7e-44d5-87ed-00452d053468",
 CellID->398774904],
Cell[5538, 153, 100, 1, 19, "MoreAbout",ExpressionUUID->"c39b82a7-2868-4a35-9596-65586c4cfa7b",
 CellID->268361234]
}, Open  ]],
Cell[CellGroupData[{
Cell[5675, 159, 472, 13, 39, "RelatedLinksSection",ExpressionUUID->"e45a5505-c3be-44fd-b936-e0b9a53df6ec",
 CellID->656190936],
Cell[6150, 174, 567, 11, 19, "RelatedLinks",ExpressionUUID->"c02afdbe-9c03-4952-bd07-0a4472c78db5",
 CellID->357760302]
}, Open  ]],
Cell[CellGroupData[{
Cell[6754, 190, 530, 14, 69, "ExamplesInitializationSection",ExpressionUUID->"29fcfa92-d55c-4b43-bc6e-da02c97b72e6",
 CellID->331103905],
Cell[7287, 206, 190, 3, 45, "ExampleInitialization",ExpressionUUID->"084eab79-de13-47be-b065-aec381d721d3",
 CellID->420531495]
}, Open  ]],
Cell[CellGroupData[{
Cell[7514, 214, 442, 12, 71, "PrimaryExamplesSection",ExpressionUUID->"36b3de8e-2812-4560-9943-9c768ebeefc9",
 CellID->278950280],
Cell[CellGroupData[{
Cell[7981, 230, 243, 4, 25, "Input",ExpressionUUID->"f5b62d1c-65d9-4ddd-b464-9adc59969e24",
 CellID->124636925],
Cell[8227, 236, 500, 9, 42, "Output",ExpressionUUID->"26d44a68-19c7-49ff-9c45-65ad708d7a3d",
 CellID->252143848]
}, Open  ]],
Cell[CellGroupData[{
Cell[8764, 250, 243, 4, 25, "Input",ExpressionUUID->"de9a9abf-511c-4f09-ba57-91e7dda2081b",
 CellID->4948511],
Cell[9010, 256, 400, 8, 24, "Output",ExpressionUUID->"4f34eb0f-0a5d-4ff5-a75a-f9f00807e6ba",
 CellID->122559827]
}, Open  ]],
Cell[9425, 267, 174, 2, 24, "ExampleText",ExpressionUUID->"208ca2dc-df32-47c1-ba75-0afcea243794",
 CellID->1787039],
Cell[CellGroupData[{
Cell[9624, 273, 279, 6, 25, "Input",ExpressionUUID->"01d5a884-433e-4855-b7d6-57d767e226ec",
 CellID->788857326],
Cell[9906, 281, 173, 3, 24, "Output",ExpressionUUID->"be9cce36-51c0-40fe-91be-d793ee2f6567",
 CellID->717273483]
}, Open  ]],
Cell[10094, 287, 173, 2, 24, "ExampleText",ExpressionUUID->"2e0a4ccd-80c2-4fd1-9bc6-fb0d83322455",
 CellID->48661426],
Cell[CellGroupData[{
Cell[10292, 293, 279, 6, 25, "Input",ExpressionUUID->"11524163-048c-47ea-8958-39a12191f174",
 CellID->590618950],
Cell[10574, 301, 168, 3, 24, "Output",ExpressionUUID->"e78c9050-21d4-46c7-9120-b28338835577",
 CellID->62278607]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10791, 310, 486, 13, 57, "ExtendedExamplesSection",ExpressionUUID->"c2441b98-a6c0-4dcc-8135-55fa69b55bbe",
 CellTags->"ExtendedExamples",
 CellID->46932611],
Cell[11280, 325, 240, 5, 35, "ExampleSection",ExpressionUUID->"6a166d72-e119-4138-b475-a5a4a793755c",
 CellID->45604537],
Cell[11523, 332, 264, 5, 23, "ExampleSection",ExpressionUUID->"5d2fdb37-e3e1-435f-b18e-ae0378cff8a3",
 CellID->262888056],
Cell[CellGroupData[{
Cell[11812, 341, 243, 5, 23, "ExampleSection",ExpressionUUID->"a277e035-319a-4a62-9250-28bd21bf533f",
 CellID->246427955],
Cell[12058, 348, 246, 5, 26, "ExampleSubsection",ExpressionUUID->"c18d1c9f-4503-4f38-8f67-40221e8e7c01",
 CellID->216007612],
Cell[12307, 355, 246, 5, 22, "ExampleSubsection",ExpressionUUID->"3b3990f2-6de1-4982-abf5-4f8178c819fe",
 CellID->771392739]
}, Open  ]],
Cell[12568, 363, 248, 5, 35, "ExampleSection",ExpressionUUID->"0f64b549-7c47-418a-b9cd-72d33d57f6f7",
 CellID->455098115],
Cell[CellGroupData[{
Cell[12841, 372, 258, 5, 23, "ExampleSection",ExpressionUUID->"d673733d-90e3-4a34-b24d-d120b352ec6b",
 CellID->300420489],
Cell[13102, 379, 207, 2, 24, "ExampleText",ExpressionUUID->"432b2396-5b5c-456c-92cd-c3d5eae93904",
 CellID->373132841],
Cell[CellGroupData[{
Cell[13334, 385, 403, 9, 26, "Input",ExpressionUUID->"0d61d4f3-64fa-4ab4-bb1c-89b3baf58085",
 CellID->337269351],
Cell[13740, 396, 607, 11, 42, "Output",ExpressionUUID->"b0dac2ac-fceb-40f7-95a0-8df005004e90",
 CellID->81037125]
}, Open  ]],
Cell[14362, 410, 224, 3, 24, "ExampleText",ExpressionUUID->"5334eb7f-b5e5-4115-a30d-44fd9505d75e",
 CellID->1887102],
Cell[CellGroupData[{
Cell[14611, 417, 503, 12, 26, "Input",ExpressionUUID->"2f9c205d-88d9-4966-b38d-722eff185de5",
 CellID->106207673],
Cell[15117, 431, 193, 3, 24, "Output",ExpressionUUID->"b9216be3-be3a-4d37-a0f3-a4118f958369",
 CellID->15038249]
}, Open  ]],
Cell[15325, 437, 248, 3, 24, "ExampleText",ExpressionUUID->"de292bb7-240c-4120-bd40-5fae7f006e4b",
 CellID->899873112],
Cell[15576, 442, 915, 22, 79, "Input",ExpressionUUID->"de5540dc-1f5c-4671-91d5-02b7970caee1",
 CellID->489591759],
Cell[16494, 466, 199, 2, 24, "ExampleText",ExpressionUUID->"5023e064-383c-47a0-8fa4-7fc1b80ef0da",
 CellID->100732862],
Cell[CellGroupData[{
Cell[16718, 472, 243, 4, 25, "Input",ExpressionUUID->"f4fa934d-2052-496e-a89b-0f595b920602",
 CellID->120080498],
Cell[16964, 478, 42737, 674, 56, "Output",ExpressionUUID->"30e4d569-7147-4d51-8d64-0f76524e0f49",
 CellID->97175212]
}, Open  ]],
Cell[59716, 1155, 197, 2, 24, "ExampleText",ExpressionUUID->"556ff29a-c9ba-48b0-92ac-0216b41d3937",
 CellID->127057451],
Cell[59916, 1159, 560, 14, 25, "Input",ExpressionUUID->"7538222c-a8c1-4d51-a3ca-db6be13b1de9",
 CellID->52192055],
Cell[60479, 1175, 215, 2, 24, "ExampleText",ExpressionUUID->"26dcb106-2e10-4d3d-8906-a4d27125b501",
 CellID->185664840],
Cell[CellGroupData[{
Cell[60719, 1181, 337, 7, 25, "Input",ExpressionUUID->"63708e69-2acf-468a-b64f-6b2daa39dd1e",
 CellID->221457320],
Cell[61059, 1190, 22209, 401, 56, "Output",ExpressionUUID->"3d5d40aa-1bb0-4bfd-a68f-f2f83e19f859",
 CellID->470682276]
}, Open  ]],
Cell[83283, 1594, 244, 3, 24, "ExampleText",ExpressionUUID->"54659a7f-4e15-4bd8-9d5e-b6b3fce17c2e",
 CellID->217594508],
Cell[83530, 1599, 321, 7, 25, "Input",ExpressionUUID->"0d22f79b-b380-40c6-ab31-11fd59cbf2e4",
 CellID->96645612],
Cell[83854, 1608, 193, 2, 24, "ExampleText",ExpressionUUID->"f67c6d05-3a81-4365-abfc-e4c7759954b1",
 CellID->524259841],
Cell[CellGroupData[{
Cell[84072, 1614, 242, 4, 25, "Input",ExpressionUUID->"d13feb97-b1a2-4f8a-8e56-95fce4661f84",
 CellID->107271425],
Cell[84317, 1620, 88344, 1394, 53, "Output",ExpressionUUID->"3fa2c788-518a-435e-a89a-a766ef325442",
 CellID->392795689]
}, Open  ]],
Cell[172676, 3017, 222, 3, 24, "ExampleText",ExpressionUUID->"f8b19df5-13f5-43e3-a3ab-83a2775ec7f0",
 CellID->8990229],
Cell[CellGroupData[{
Cell[172923, 3024, 234, 4, 25, "Input",ExpressionUUID->"b2980a1c-bec4-432b-a7de-abb1f266b475",
 CellID->92012697],
Cell[173160, 3030, 88374, 1394, 53, "Output",ExpressionUUID->"f3a8092a-154d-429a-a9a5-9b2feecb050e",
 CellID->126480760]
}, Open  ]],
Cell[261549, 4427, 247, 4, 24, "ExampleText",ExpressionUUID->"fe40101d-fcb1-40f5-9944-c4c2fd797bcd",
 CellID->792129208],
Cell[261799, 4433, 852, 20, 79, "Input",ExpressionUUID->"9ffe9799-64ed-4fb0-ae85-655584c211a2",
 CellID->148476170],
Cell[CellGroupData[{
Cell[262676, 4457, 635, 15, 61, "Input",ExpressionUUID->"efc797fd-c683-436b-aaa9-9b37215dc0c0",
 CellID->831193740],
Cell[263314, 4474, 89152, 1404, 53, "Output",ExpressionUUID->"f2e900e4-86ac-418a-b2dc-51c3d5f9dc04",
 CellID->28544744]
}, Open  ]],
Cell[352481, 5881, 184, 2, 24, "ExampleText",ExpressionUUID->"9176406b-6e6b-42b5-ac96-a76d5841c84d",
 CellID->104083403],
Cell[CellGroupData[{
Cell[352690, 5887, 259, 4, 25, "Input",ExpressionUUID->"85b55346-a53b-47f3-840a-45f654b0402d",
 CellID->20919449],
Cell[352952, 5893, 23305, 409, 117, "Output",ExpressionUUID->"fb14a08e-2633-4222-b252-15c0d22f0efd",
 CellID->364970126]
}, Open  ]],
Cell[376272, 6305, 201, 2, 24, "ExampleText",ExpressionUUID->"ede939d4-d6ec-46ac-83ff-c2a6f090090f",
 CellID->872818384],
Cell[CellGroupData[{
Cell[376498, 6311, 319, 6, 25, "Input",ExpressionUUID->"817dc76c-37ae-41d8-be75-32499c8c3012",
 CellID->474197475],
Cell[376820, 6319, 22506, 400, 86, "Output",ExpressionUUID->"03fea6e1-2e8f-4566-add3-f2d6f545b65e",
 CellID->26609597]
}, Open  ]],
Cell[399341, 6722, 178, 2, 24, "ExampleText",ExpressionUUID->"3846d2a5-91e8-4fc1-9112-2ad5b720534d",
 CellID->25484150],
Cell[CellGroupData[{
Cell[399544, 6728, 352, 7, 25, "Input",ExpressionUUID->"72b4f262-8eaa-435a-93d8-f99342bcfff1",
 CellID->33481653],
Cell[399899, 6737, 22222, 398, 56, "Output",ExpressionUUID->"ed2c6a51-e459-4607-a463-19f4f93cceb5",
 CellID->41747444]
}, Open  ]],
Cell[422136, 7138, 184, 2, 24, "ExampleText",ExpressionUUID->"42f61bbd-37b6-43ff-8906-71161d185534",
 CellID->117849955],
Cell[CellGroupData[{
Cell[422345, 7144, 389, 8, 25, "Input",ExpressionUUID->"8d763716-0005-4165-ad68-2d1bc1712efc",
 CellID->7971185],
Cell[422737, 7154, 21971, 394, 56, "Output",ExpressionUUID->"6154a9b4-2368-4ac3-b63f-248ad7d63a9c",
 CellID->253894936]
}, Open  ]],
Cell[444723, 7551, 175, 2, 24, "ExampleText",ExpressionUUID->"ef3c8b1d-c8ff-4470-aa98-e311b3a44987",
 CellID->92143258],
Cell[CellGroupData[{
Cell[444923, 7557, 533, 13, 43, "Input",ExpressionUUID->"fe910c23-4892-4772-9eff-619c1fb1e211",
 CellID->606635904],
Cell[445459, 7572, 2117, 40, 151, "Output",ExpressionUUID->"c2b11657-29c6-40ff-8919-a99d3d62ac93",
 CellID->481464566]
}, Open  ]],
Cell[447591, 7615, 188, 2, 24, "ExampleText",ExpressionUUID->"71b50be3-153c-4a9e-abdf-417d88e9f3d0",
 CellID->586393327],
Cell[CellGroupData[{
Cell[447804, 7621, 251, 5, 26, "Input",ExpressionUUID->"847f635c-9770-48e5-92d1-03ed0c73524e",
 CellID->39491818],
Cell[448058, 7628, 1505, 22, 112, "Output",ExpressionUUID->"6d05e2cd-f518-4879-b932-fec1db91cc5f",
 CellID->590546159]
}, Open  ]],
Cell[CellGroupData[{
Cell[449600, 7655, 349, 8, 26, "Input",ExpressionUUID->"976ac736-6f4c-4a7d-a24d-ae3ce53c05a8",
 CellID->299442449],
Cell[449952, 7665, 1521, 22, 112, "Output",ExpressionUUID->"3ec650ca-085b-4eea-b516-4b7bee4413f1",
 CellID->694897660]
}, Open  ]],
Cell[CellGroupData[{
Cell[451510, 7692, 243, 4, 25, "Input",ExpressionUUID->"e291f30e-a82e-4669-b342-c673ca61a809",
 CellID->439271586],
Cell[451756, 7698, 1523, 22, 112, "Output",ExpressionUUID->"2abdbc7c-de19-4563-bc6b-4ff46770e064",
 CellID->419435288]
}, Open  ]]
}, Open  ]],
Cell[453306, 7724, 250, 5, 35, "ExampleSection",ExpressionUUID->"bb32d078-35d9-483c-bf10-681ce382fbb0",
 CellID->37717485],
Cell[453559, 7731, 255, 5, 23, "ExampleSection",ExpressionUUID->"dfb02dfa-631d-48ad-8367-ec1d45759fd4",
 CellID->46913625],
Cell[CellGroupData[{
Cell[453839, 7740, 249, 5, 23, "ExampleSection",ExpressionUUID->"c99a43f8-5725-4922-923d-f42b17fde303",
 CellID->793620505],
Cell[454091, 7747, 250, 4, 24, "ExampleText",ExpressionUUID->"1bf6d214-f38b-45cf-b9af-eb4f9458517d",
 CellID->43350099],
Cell[CellGroupData[{
Cell[454366, 7755, 466, 10, 43, "Input",ExpressionUUID->"79c8029f-ad3c-42ad-9370-53e13d763e58",
 CellID->187758445],
Cell[454835, 7767, 4937, 121, 250, "Output",ExpressionUUID->"6a10ebe5-862b-477d-91d1-56f18287d668",
 CellID->360752438]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[459833, 7895, 110, 1, 72, "MetadataSection",ExpressionUUID->"f737a65e-f1c1-4f09-9cbe-9294d3536fdb",
 CellID->208126032],
Cell[459946, 7898, 473, 11, 26, "History",ExpressionUUID->"e84ea011-084d-48f0-b38c-036d4de5a9e4",
 CellID->450335447],
Cell[CellGroupData[{
Cell[460444, 7913, 484, 13, 21, "CategorizationSection",ExpressionUUID->"34fb00c0-95b5-4ae2-83c8-3e22bda047cf",
 CellID->770128447],
Cell[460931, 7928, 134, 2, 35, "Categorization",ExpressionUUID->"fb0710c4-f0f6-40cd-a915-4d42be92360d",
 CellID->161362289],
Cell[461068, 7932, 157, 2, 35, "Categorization",ExpressionUUID->"e6e25273-58f5-4b5a-8e12-a015b7e58b69",
 CellID->79608649],
Cell[461228, 7936, 155, 2, 35, "Categorization",ExpressionUUID->"f99cf74b-601c-491d-bfc8-611e75d872ba",
 CellID->513419307],
Cell[461386, 7940, 172, 2, 35, "Categorization",ExpressionUUID->"3277e389-18ca-416b-b030-6eaa44478fe9",
 CellID->108456257]
}, Closed]],
Cell[CellGroupData[{
Cell[461595, 7947, 110, 1, 21, "KeywordsSection",ExpressionUUID->"527fbf6b-dc1e-43d0-86dd-fdd791f9eb10",
 CellID->136522835],
Cell[461708, 7950, 99, 1, 70, "Keywords",ExpressionUUID->"20cbd337-0f37-46ba-b782-4e145a71d87d",
 CellID->343008714]
}, Closed]],
Cell[CellGroupData[{
Cell[461844, 7956, 119, 1, 21, "TemplatesSection",ExpressionUUID->"7eb52428-8c0a-4685-9aca-04d627ad0232",
 CellID->128353457],
Cell[461966, 7959, 146, 2, 70, "Template",ExpressionUUID->"cc4d1f70-0083-4aa9-aa19-3516c9e93ed0",
 CellID->8136587],
Cell[462115, 7963, 134, 2, 70, "Template",ExpressionUUID->"4300018f-e91e-40e1-bace-73f852f669f0",
 CellID->237106],
Cell[462252, 7967, 135, 2, 70, "Template",ExpressionUUID->"6f51bd71-6886-444d-97b7-a4a127480752",
 CellID->727578151],
Cell[462390, 7971, 136, 2, 70, "Template",ExpressionUUID->"4d647081-0ff4-40c2-b3ce-2fbdbdcad28d",
 CellID->30786173]
}, Closed]]
}, Open  ]]
}
]
*)

